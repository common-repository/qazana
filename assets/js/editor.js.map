{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "assets/dev/js/editor/behaviors/duplicate.js",
    "assets/dev/js/editor/behaviors/handle-duplicate.js",
    "assets/dev/js/editor/behaviors/inner-tabs.js",
    "assets/dev/js/editor/behaviors/resizable.js",
    "assets/dev/js/editor/behaviors/sortable.js",
    "assets/dev/js/editor/components/template-library/behaviors/insert-template.js",
    "assets/dev/js/editor/components/template-library/collections/templates.js",
    "assets/dev/js/editor/components/template-library/manager.js",
    "assets/dev/js/editor/components/template-library/models/template.js",
    "assets/dev/js/editor/components/template-library/views/layout.js",
    "assets/dev/js/editor/components/template-library/views/parts/header/back.js",
    "assets/dev/js/editor/components/template-library/views/parts/header/import.js",
    "assets/dev/js/editor/components/template-library/views/parts/header/logo.js",
    "assets/dev/js/editor/components/template-library/views/parts/header/menu.js",
    "assets/dev/js/editor/components/template-library/views/parts/header/preview.js",
    "assets/dev/js/editor/components/template-library/views/parts/header/save.js",
    "assets/dev/js/editor/components/template-library/views/parts/header/search.js",
    "assets/dev/js/editor/components/template-library/views/parts/panel/header.js",
    "assets/dev/js/editor/components/template-library/views/parts/panel/import.js",
    "assets/dev/js/editor/components/template-library/views/parts/panel/loading.js",
    "assets/dev/js/editor/components/template-library/views/parts/panel/preview.js",
    "assets/dev/js/editor/components/template-library/views/parts/panel/save-template.js",
    "assets/dev/js/editor/components/template-library/views/parts/panel/templates-empty.js",
    "assets/dev/js/editor/components/template-library/views/parts/panel/templates.js",
    "assets/dev/js/editor/components/template-library/views/template/base.js",
    "assets/dev/js/editor/components/template-library/views/template/local.js",
    "assets/dev/js/editor/components/template-library/views/template/remote.js",
    "assets/dev/js/editor/components/template-library/views/template/theme.js",
    "assets/dev/js/editor/editor.js",
    "assets/dev/js/editor/layouts/edit-mode.js",
    "assets/dev/js/editor/layouts/panel/footer.js",
    "assets/dev/js/editor/layouts/panel/header.js",
    "assets/dev/js/editor/layouts/panel/pages/editor.js",
    "assets/dev/js/editor/layouts/panel/pages/elements/collections/categories.js",
    "assets/dev/js/editor/layouts/panel/pages/elements/collections/elements.js",
    "assets/dev/js/editor/layouts/panel/pages/elements/elements.js",
    "assets/dev/js/editor/layouts/panel/pages/elements/models/element.js",
    "assets/dev/js/editor/layouts/panel/pages/elements/views/categories.js",
    "assets/dev/js/editor/layouts/panel/pages/elements/views/category.js",
    "assets/dev/js/editor/layouts/panel/pages/elements/views/element.js",
    "assets/dev/js/editor/layouts/panel/pages/elements/views/elements.js",
    "assets/dev/js/editor/layouts/panel/pages/elements/views/global.js",
    "assets/dev/js/editor/layouts/panel/pages/elements/views/search.js",
    "assets/dev/js/editor/layouts/panel/pages/menu/menu.js",
    "assets/dev/js/editor/layouts/panel/pages/menu/views/item.js",
    "assets/dev/js/editor/layouts/panel/pages/schemes/base.js",
    "assets/dev/js/editor/layouts/panel/pages/schemes/color-picker.js",
    "assets/dev/js/editor/layouts/panel/pages/schemes/colors.js",
    "assets/dev/js/editor/layouts/panel/pages/schemes/disabled.js",
    "assets/dev/js/editor/layouts/panel/pages/schemes/items/base.js",
    "assets/dev/js/editor/layouts/panel/pages/schemes/items/color.js",
    "assets/dev/js/editor/layouts/panel/pages/schemes/items/typography.js",
    "assets/dev/js/editor/layouts/panel/pages/schemes/typography.js",
    "assets/dev/js/editor/layouts/panel/panel.js",
    "assets/dev/js/editor/models/base-settings.js",
    "assets/dev/js/editor/models/column-settings.js",
    "assets/dev/js/editor/models/element.js",
    "assets/dev/js/editor/models/section-settings.js",
    "assets/dev/js/editor/models/widget-settings.js",
    "assets/dev/js/editor/settings/base/manager.js",
    "assets/dev/js/editor/settings/base/panel.js",
    "assets/dev/js/editor/settings/general/manager.js",
    "assets/dev/js/editor/settings/page/manager.js",
    "assets/dev/js/editor/settings/settings.js",
    "assets/dev/js/editor/utils/ajax.js",
    "assets/dev/js/editor/utils/conditions.js",
    "assets/dev/js/editor/utils/controls-css-parser.js",
    "assets/dev/js/editor/utils/debug.js",
    "assets/dev/js/editor/utils/heartbeat.js",
    "assets/dev/js/editor/utils/helpers.js",
    "assets/dev/js/editor/utils/hot-keys.js",
    "assets/dev/js/editor/utils/images-manager.js",
    "assets/dev/js/editor/utils/jquery-html5-dnd.js",
    "assets/dev/js/editor/utils/jquery-serialize-object.js",
    "assets/dev/js/editor/utils/presets-factory.js",
    "assets/dev/js/editor/utils/schemes.js",
    "assets/dev/js/editor/utils/stylesheet.js",
    "assets/dev/js/editor/utils/validator.js",
    "assets/dev/js/editor/views/add-section/base.js",
    "assets/dev/js/editor/views/add-section/independent.js",
    "assets/dev/js/editor/views/add-section/inline.js",
    "assets/dev/js/editor/views/base-container.js",
    "assets/dev/js/editor/views/base-element.js",
    "assets/dev/js/editor/views/base-sections-container.js",
    "assets/dev/js/editor/views/column.js",
    "assets/dev/js/editor/views/controls-stack.js",
    "assets/dev/js/editor/views/controls/base-multiple.js",
    "assets/dev/js/editor/views/controls/base-units.js",
    "assets/dev/js/editor/views/controls/base.js",
    "assets/dev/js/editor/views/controls/choose.js",
    "assets/dev/js/editor/views/controls/code.js",
    "assets/dev/js/editor/views/controls/color.js",
    "assets/dev/js/editor/views/controls/date-time.js",
    "assets/dev/js/editor/views/controls/dimensions.js",
    "assets/dev/js/editor/views/controls/font.js",
    "assets/dev/js/editor/views/controls/gallery.js",
    "assets/dev/js/editor/views/controls/icon.js",
    "assets/dev/js/editor/views/controls/image-dimensions.js",
    "assets/dev/js/editor/views/controls/media.js",
    "assets/dev/js/editor/views/controls/number.js",
    "assets/dev/js/editor/views/controls/order.js",
    "assets/dev/js/editor/views/controls/repeater-row.js",
    "assets/dev/js/editor/views/controls/repeater.js",
    "assets/dev/js/editor/views/controls/section.js",
    "assets/dev/js/editor/views/controls/select2.js",
    "assets/dev/js/editor/views/controls/shadow.js",
    "assets/dev/js/editor/views/controls/slider.js",
    "assets/dev/js/editor/views/controls/structure.js",
    "assets/dev/js/editor/views/controls/switcher.js",
    "assets/dev/js/editor/views/controls/tab.js",
    "assets/dev/js/editor/views/controls/wp_widget.js",
    "assets/dev/js/editor/views/controls/wysiwyg.js",
    "assets/dev/js/editor/views/element-empty.js",
    "assets/dev/js/editor/views/preview.js",
    "assets/dev/js/editor/views/section.js",
    "assets/dev/js/editor/views/widget.js",
    "assets/dev/js/utils/hooks.js",
    "assets/dev/js/utils/module.js",
    "assets/dev/js/utils/view-module.js",
    "includes/extensions/history/assets/js/history/collection-behavior.js",
    "includes/extensions/history/assets/js/history/collection.js",
    "includes/extensions/history/assets/js/history/element-behavior.js",
    "includes/extensions/history/assets/js/history/empty.js",
    "includes/extensions/history/assets/js/history/item.js",
    "includes/extensions/history/assets/js/history/manager.js",
    "includes/extensions/history/assets/js/history/panel-tab.js",
    "includes/extensions/history/assets/js/module.js",
    "includes/extensions/history/assets/js/panel-page.js",
    "includes/extensions/history/assets/js/revisions/collection.js",
    "includes/extensions/history/assets/js/revisions/empty.js",
    "includes/extensions/history/assets/js/revisions/manager.js",
    "includes/extensions/history/assets/js/revisions/model.js",
    "includes/extensions/history/assets/js/revisions/panel-tab.js",
    "includes/extensions/history/assets/js/revisions/view.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrntSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjxrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrhptLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbbtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvpvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACttOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzzdprJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrnnlpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClnhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrnjxzIA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChvjOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var HandleAddDuplicateBehavior;\n\nHandleAddDuplicateBehavior = Marionette.Behavior.extend( {\n\n\tonChildviewClickNew: function( childView ) {\n\t\tvar currentIndex = childView.$el.index() + 1;\n\n\t\tthis.addChild( { at: currentIndex } );\n\t},\n\n\tonRequestNew: function() {\n\t\tthis.addChild();\n\t},\n\n\taddChild: function( options ) {\n\t\tif ( this.view.isCollectionFilled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\toptions = options || {};\n\n\t\tvar newItem = {\n\t\t\tid: qazana.helpers.getUniqueID(),\n\t\t\telType: this.view.getChildType()[0],\n\t\t\tsettings: {},\n\t\t\telements: []\n\t\t};\n\n\t\tqazana.channels.data.trigger( 'element:before:add', newItem );\n\n\t\tthis.view.addChildModel( newItem, options );\n\n\t\tqazana.channels.data.trigger( 'element:after:add', newItem );\n\t}\n} );\n\nmodule.exports = HandleAddDuplicateBehavior;\n",
    "var HandleDuplicateBehavior;\n\nHandleDuplicateBehavior = Marionette.Behavior.extend( {\n\n\tonChildviewRequestDuplicate: function( childView ) {\n\t\tif ( this.view.isCollectionFilled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar currentIndex = this.view.collection.indexOf( childView.model ),\n\t\t\tnewModel = childView.model.clone();\n\n\t\tqazana.channels.data.trigger( 'element:before:duplicate', newModel );\n\n\t\tthis.view.addChildModel( newModel, { at: currentIndex + 1 } );\n\n\t\tqazana.channels.data.trigger( 'element:after:duplicate', newModel );\n\t}\n} );\n\nmodule.exports = HandleDuplicateBehavior;\n",
    "var InnerTabsBehavior;\n\nInnerTabsBehavior = Marionette.Behavior.extend( {\n\n\tonRenderCollection: function() {\n\t\tthis.handleInnerTabs( this.view );\n\t},\n\n\thandleInnerTabs: function( parent ) {\n\t\tvar closedClass = 'qazana-tab-close',\n\t\t\tactiveClass = 'qazana-tab-active',\n\t\t\ttabsWrappers = parent.children.filter( function( view ) {\n\t\t\t\treturn 'tabs' === view.model.get( 'type' );\n\t\t\t} );\n\n\t\t\t_.each( tabsWrappers, function( view ) {\n\t\t\t\tview.$el.find( '.qazana-control-content' ).remove();\n\n\t\t\t\tvar tabsId = view.model.get( 'name' ),\n\t\t\t\ttabs = parent.children.filter( function( childView ) {\n\t\t\t\t\treturn ( 'tab' === childView.model.get( 'type' ) && childView.model.get( 'tabs_wrapper' ) === tabsId );\n\t\t\t\t} );\n\n\t\t\t\t_.each( tabs, function( childView, index ) {\n\t\t\t\t\tview._addChildView( childView );\n\n\t\t\t\t\tvar tabId = childView.model.get( 'name' ),\n\t\t\t\t\tcontrolsUnderTab = parent.children.filter( function( view ) {\n\t\t\t\t\t\treturn ( tabId === view.model.get( 'inner_tab' ) );\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( 0 === index ) {\n\t\t\t\t\t\tchildView.$el.addClass( activeClass );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_.each( controlsUnderTab, function( view ) {\n\t\t\t\t\t\t\tview.$el.addClass( closedClass );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t},\n\n\tonChildviewControlTabClicked: function( childView ) {\n\t\tvar closedClass = 'qazana-tab-close',\n\t\t\tactiveClass = 'qazana-tab-active',\n\t\t\ttabClicked = childView.model.get( 'name' ),\n\t\t\tchildrenUnderTab = this.view.children.filter( function( view ) {\n\t\t\t\treturn ( 'tab' !== view.model.get( 'type' ) && childView.model.get( 'tabs_wrapper' ) === view.model.get( 'tabs_wrapper' ) );\n\t\t\t} ),\n\t\t\tsiblingTabs = this.view.children.filter( function( view ) {\n\t\t\t\treturn ( 'tab' === view.model.get( 'type' ) && childView.model.get( 'tabs_wrapper' ) === view.model.get( 'tabs_wrapper' ) );\n\t\t\t} );\n\n\t\t\t_.each( siblingTabs, function( view ) {\n\t\t\t\tview.$el.removeClass( activeClass );\n\t\t\t} );\n\n\t\t\tchildView.$el.addClass( activeClass );\n\n\t\t\t_.each( childrenUnderTab, function( view ) {\n\t\t\t\tif ( view.model.get( 'inner_tab' ) === tabClicked ) {\n\t\t\t\t\tview.$el.removeClass( closedClass );\n\t\t\t\t} else {\n\t\t\t\t\tview.$el.addClass( closedClass );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tqazana.channels.data.trigger( 'scrollbar:update' );\n\t}\n} );\n\nmodule.exports = InnerTabsBehavior;\n",
    "var ResizableBehavior;\n\nResizableBehavior = Marionette.Behavior.extend( {\n\tdefaults: {\n\t\thandles: qazana.config.is_rtl ? 'w' : 'e'\n\t},\n\n\tevents: {\n\t\tresizestart: 'onResizeStart',\n\t\tresizestop: 'onResizeStop',\n\t\tresize: 'onResize'\n\t},\n\n\tinitialize: function() {\n\t\tMarionette.Behavior.prototype.initialize.apply( this, arguments );\n\n\t\tthis.listenTo( qazana.channels.dataEditMode, 'switch', this.onEditModeSwitched );\n\t},\n\n\tactive: function() {\n\t\tthis.deactivate();\n\n\t\tvar options = _.clone( this.options );\n\n\t\tdelete options.behaviorClass;\n\n\t\tvar $childViewContainer = this.getChildViewContainer(),\n\t\t\tdefaultResizableOptions = {},\n\t\t\tresizableOptions = _.extend( defaultResizableOptions, options );\n\n\t\t$childViewContainer.resizable( resizableOptions );\n\t},\n\n\tdeactivate: function() {\n\t\tif ( this.getChildViewContainer().resizable( 'instance' ) ) {\n\t\t\tthis.getChildViewContainer().resizable( 'destroy' );\n\t\t}\n\t},\n\n\tonEditModeSwitched: function( activeMode ) {\n\t\tif ( 'edit' === activeMode ) {\n\t\t\tthis.active();\n\t\t} else {\n\t\t\tthis.deactivate();\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\t_.defer( function() {\n\t\t\tself.onEditModeSwitched( qazana.channels.dataEditMode.request( 'activeMode' ) );\n\t\t} );\n\t},\n\n\tonDestroy: function() {\n\t\tthis.deactivate();\n\t},\n\n\tonResizeStart: function( event ) {\n\t\tevent.stopPropagation();\n\n\t\tthis.view.$el.data( 'originalWidth', this.view.el.getBoundingClientRect().width );\n\n\t\tthis.view.triggerMethod( 'request:resize:start', event );\n\t},\n\n\tonResizeStop: function( event ) {\n\t\tevent.stopPropagation();\n\n\t\tthis.view.triggerMethod( 'request:resize:stop' );\n\t},\n\n\tonResize: function( event, ui ) {\n\t\tevent.stopPropagation();\n\n\t\tthis.view.triggerMethod( 'request:resize', ui, event );\n\t},\n\n\tgetChildViewContainer: function() {\n\t\treturn this.$el;\n\t}\n} );\n\nmodule.exports = ResizableBehavior;\n",
    "var SortableBehavior;\n\nSortableBehavior = Marionette.Behavior.extend( {\n\tdefaults: {\n\t\telChildType: 'widget'\n\t},\n\n\tevents: {\n\t\t'sortstart': 'onSortStart',\n\t\t'sortreceive': 'onSortReceive',\n\t\t'sortupdate': 'onSortUpdate',\n\t\t'sortstop': 'onSortStop',\n\t\t'sortover': 'onSortOver',\n\t\t'sortout': 'onSortOut'\n\t},\n\n\tinitialize: function() {\n\t\tthis.listenTo( qazana.channels.dataEditMode, 'switch', this.onEditModeSwitched );\n\t\tthis.listenTo( qazana.channels.deviceMode, 'change', this.onDeviceModeChange );\n\t},\n\n\tonEditModeSwitched: function( activeMode ) {\n\t\tif ( 'edit' === activeMode ) {\n\t\t\tthis.active();\n\t\t} else {\n\t\t\tthis.deactivate();\n\t\t}\n\t},\n\n\tonDeviceModeChange: function() {\n\t\tvar deviceMode = qazana.channels.deviceMode.request( 'currentMode' );\n\n\t\tif ( 'desktop' === deviceMode ) {\n\t\t\tthis.active();\n\t\t} else {\n\t\t\tthis.deactivate();\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\t_.defer( function() {\n\t\t\tself.onEditModeSwitched( qazana.channels.dataEditMode.request( 'activeMode' ) );\n\t\t} );\n\t},\n\n\tonDestroy: function() {\n\t\tthis.deactivate();\n\t},\n\n\tactive: function() {\n\t\tif ( this.getChildViewContainer().sortable( 'instance' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $childViewContainer = this.getChildViewContainer(),\n\t\t\tdefaultSortableOptions = {\n\t\t\t\tconnectWith: $childViewContainer.selector,\n\t\t\t\tplaceholder: 'qazana-sortable-placeholder qazana-' + this.getOption( 'elChildType' ) + '-placeholder',\n\t\t\t\tcursorAt: {\n\t\t\t\t\ttop: 20,\n\t\t\t\t\tleft: 25\n\t\t\t\t},\n\t\t\t\thelper: _.bind( this._getSortableHelper, this )\n\t\t\t},\n\t\t\tsortableOptions = _.extend( defaultSortableOptions, this.view.getSortableOptions() );\n\n\t\t$childViewContainer.sortable( sortableOptions );\n\t},\n\n\t_getSortableHelper: function( event, $item ) {\n\t\tvar model = this.view.collection.get( {\n\t\t\tcid: $item.data( 'model-cid' )\n\t\t} );\n\n\t\treturn '<div style=\"height: 84px; width: 125px;\" class=\"qazana-sortable-helper qazana-sortable-helper-' + model.get( 'elType' ) + '\"><div class=\"icon\"><i class=\"' + model.getIcon() + '\"></i></div><div class=\"qazana-element-title-wrapper\"><div class=\"title\">' + model.getTitle() + '</div></div></div>';\n\t},\n\n\tdeactivate: function() {\n\t\tif ( this.getChildViewContainer().sortable( 'instance' ) ) {\n\t\t\tthis.getChildViewContainer().sortable( 'destroy' );\n\t\t}\n\t},\n\n\tonSortStart: function( event, ui ) {\n\t\tevent.stopPropagation();\n\n\t\tvar model = this.view.collection.get( {\n\t\t\tcid: ui.item.data( 'model-cid' )\n\t\t} );\n\n\t\tif ( 'column' === this.options.elChildType ) {\n\t\t\tvar uiData = ui.item.data( 'sortableItem' ),\n\t\t\t\tuiItems = uiData.items,\n\t\t\t\titemHeight = 0;\n\n\t\t\tuiItems.forEach( function( item ) {\n\t\t\t\tif ( item.item[0] === ui.item[0] ) {\n\t\t\t\t\titemHeight = item.height;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tui.placeholder.height( itemHeight );\n\t\t}\n\n\t\tqazana.channels.data\n\t\t\t.reply( 'dragging:model', model )\n\t\t\t.reply( 'dragging:parent:view', this.view )\n\t\t\t.trigger( 'drag:start', model )\n\t\t\t.trigger( model.get( 'elType' ) + ':drag:start' );\n\t},\n\n\tonSortOver: function( event ) {\n\t\tevent.stopPropagation();\n\n\t\tvar model = qazana.channels.data.request( 'dragging:model' );\n\n\t\tBackbone.$( event.target )\n\t\t\t.addClass( 'qazana-draggable-over' )\n\t\t\t.attr( {\n\t\t\t\t'data-dragged-element': model.get( 'elType' ),\n\t\t\t\t'data-dragged-is-inner': model.get( 'isInner' )\n\t\t\t} );\n\n\t\tthis.$el.addClass( 'qazana-dragging-on-child' );\n\t},\n\n\tonSortOut: function( event ) {\n\t\tevent.stopPropagation();\n\n\t\tBackbone.$( event.target )\n\t\t\t.removeClass( 'qazana-draggable-over' )\n\t\t\t.removeAttr( 'data-dragged-element data-dragged-is-inner' );\n\n\t\tthis.$el.removeClass( 'qazana-dragging-on-child' );\n\t},\n\n\tonSortReceive: function( event, ui ) {\n\t\tevent.stopPropagation();\n\n\t\tif ( this.view.isCollectionFilled() ) {\n\t\t\tBackbone.$( ui.sender ).sortable( 'cancel' );\n\t\t\treturn;\n\t\t}\n\n\t\tvar model = qazana.channels.data.request( 'dragging:model' ),\n\t\t\tdraggedElType = model.get( 'elType' ),\n\t\t\tdraggedIsInnerSection = 'section' === draggedElType && model.get( 'isInner' ),\n\t\t\ttargetIsInnerColumn = 'column' === this.view.getElementType() && this.view.isInner();\n\n\t\tif ( draggedIsInnerSection && targetIsInnerColumn ) {\n\t\t\tBackbone.$( ui.sender ).sortable( 'cancel' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tqazana.channels.data.trigger( 'drag:before:update', model );\n\n\t\tvar newIndex = ui.item.parent().children().index( ui.item ),\n\t\t\tmodelJSON = model.toJSON( { copyHtmlCache: true } );\n\n\t\tvar senderSection = qazana.channels.data.request( 'dragging:parent:view' );\n\n\t\tsenderSection.isManualRemoving = true;\n\n\t\tmodel.destroy();\n\n\t\tsenderSection.isManualRemoving = false;\n\n\t\tthis.view.addChildElement( modelJSON, { at: newIndex } );\n\n\t\tqazana.channels.data.trigger( 'drag:after:update', model );\n\t},\n\n\tonSortUpdate: function( event, ui ) {\n\t\tevent.stopPropagation();\n\n\t\tif ( this.getChildViewContainer()[0] === ui.item.parent()[0] ) {\n\t\t\tvar model = qazana.channels.data.request( 'dragging:model' ),\n\t\t\t\t$childElement = ui.item,\n\t\t\t\tcollection = this.view.collection,\n\t\t\t\tnewIndex = $childElement.parent().children().index( $childElement );\n\n\t\t\tqazana.channels.data.trigger( 'drag:before:update', model );\n\n\t\t\tvar child = this.view.children.findByModelCid( model.cid );\n\n\t\t\tchild._isRendering = true;\n\n\t\t\tcollection.remove( model );\n\n\t\t\tthis.view.addChildElement( model, { at: newIndex } );\n\n\t\t\tqazana.setFlagEditorChange( true );\n\n\t\t\tqazana.channels.data.trigger( 'drag:after:update', model );\n\t\t}\n\t},\n\n\tonAddChild: function( view ) {\n\t\tview.$el.attr( 'data-model-cid', view.model.cid );\n\t},\n\n\tgetChildViewContainer: function() {\n\t\treturn this.view.getChildViewContainer( this.view );\n\t}\n} );\n\nmodule.exports = SortableBehavior;\n",
    "var InsertTemplateHandler;\n\nInsertTemplateHandler = Marionette.Behavior.extend( {\n\tui: {\n\t\tinsertButton: '.qazana-template-library-template-insert'\n\t},\n\n\tevents: {\n\t\t'click @ui.insertButton': 'onInsertButtonClick'\n\t},\n\n\tonInsertButtonClick: function() {\n\t\tif ( this.view.model.get( 'hasPageSettings' ) ) {\n\t\t\tInsertTemplateHandler.showImportDialog( this.view.model );\n\t\t\treturn;\n\t\t}\n\n\t\tqazana.templates.importTemplate( this.view.model );\n\t}\n}, {\n\tdialog: null,\n\n\tshowImportDialog: function( model ) {\n\t\tvar dialog = InsertTemplateHandler.getDialog();\n\n\t\tdialog.onConfirm = function() {\n\t\t\tqazana.templates.importTemplate( model, { withPageSettings: true } );\n\t\t};\n\n\t\tdialog.onCancel = function() {\n\t\t\tqazana.templates.importTemplate( model );\n\t\t};\n\n\t\tdialog.show();\n\t},\n\n\tinitDialog: function() {\n\t\tInsertTemplateHandler.dialog = qazana.dialogsManager.createWidget( 'confirm', {\n\t\t\tid: 'qazana-insert-template-settings-dialog',\n\t\t\theaderMessage: qazana.translate( 'import_template_dialog_header' ),\n\t\t\tmessage: qazana.translate( 'import_template_dialog_message' ) + '<br>' + qazana.translate( 'import_template_dialog_message_attention' ),\n\t\t\tstrings: {\n\t\t\t\tconfirm: qazana.translate( 'yes' ),\n\t\t\t\tcancel: qazana.translate( 'no' )\n\t\t\t}\n\t\t} );\n\t},\n\n\tgetDialog: function() {\n\t\tif ( ! InsertTemplateHandler.dialog ) {\n\t\t\tInsertTemplateHandler.initDialog();\n\t\t}\n\n\t\treturn InsertTemplateHandler.dialog;\n\t}\n} );\n\nmodule.exports = InsertTemplateHandler;\n",
    "var TemplateLibraryTemplateModel = require( 'qazana-templates/models/template' ),\n\tTemplateLibraryCollection;\n\nTemplateLibraryCollection = Backbone.Collection.extend( {\n\tmodel: TemplateLibraryTemplateModel\n} );\n\nmodule.exports = TemplateLibraryCollection;\n",
    "var TemplateLibraryLayoutView = require( 'qazana-templates/views/layout' ),\n\tTemplateLibraryCollection = require( 'qazana-templates/collections/templates' ),\n\tTemplateLibraryManager;\n\nTemplateLibraryManager = function() {\n\tvar self = this,\n\t\tmodal,\n\t\tdeleteDialog,\n\t\terrorDialog,\n\t\tlayout,\n\t\tstartIntent = {},\n\t\ttemplateTypes = {},\n\t\ttemplatesCollection;\n\n\tvar initLayout = function() {\n\t\tlayout = new TemplateLibraryLayoutView();\n\t};\n\n\tvar registerDefaultTemplateTypes = function() {\n\t\tvar data = {\n\t\t\tsaveDialog: {\n\t\t\t\tdescription: qazana.translate( 'save_your_template_description' )\n\t\t\t},\n\t\t\tajaxParams: {\n\t\t\t\tsuccess: function( data ) {\n\t\t\t\t\tself.getTemplatesCollection().add( data );\n\n\t\t\t\t\tself.setTemplatesSource( 'local' );\n\n\t\t\t\t\tself.showTemplates();\n\t\t\t\t},\n\t\t\t\terror: function( data ) {\n\t\t\t\t\tself.showErrorDialog( data );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_.each( [ 'page', 'section' ], function( type ) {\n\t\t\tvar safeData = Backbone.$.extend( true, {}, data, {\n\t\t\t\tsaveDialog: {\n\t\t\t\t\ttitle: qazana.translate( 'save_your_template', [ qazana.translate( type ) ] )\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tself.registerTemplateType( type, safeData );\n\t\t} );\n\t};\n\n\tthis.init = function() {\n\t\tregisterDefaultTemplateTypes();\n\t};\n\n\tthis.getTemplateTypes = function( type ) {\n\t\tif ( type ) {\n\t\t\treturn templateTypes[ type ];\n\t\t}\n\n\t\treturn templateTypes;\n\t};\n\n\tthis.registerTemplateType = function( type, data ) {\n\t\ttemplateTypes[ type ] = data;\n\t};\n\n\tthis.deleteTemplate = function( templateModel ) {\n\t\tvar dialog = self.getDeleteDialog();\n\n\t\tdialog.onConfirm = function() {\n\t\t\tqazana.ajax.send( 'delete_template', {\n\t\t\t\tdata: {\n\t\t\t\t\tsource: templateModel.get( 'source' ),\n\t\t\t\t\ttemplate_id: templateModel.get( 'template_id' )\n\t\t\t\t},\n\t\t\t\tsuccess: function() {\n\t\t\t\t\ttemplatesCollection.remove( templateModel, { silent: true } );\n\n\t\t\t\t\tself.showTemplates();\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\tdialog.show();\n\t};\n\n\tthis.importTemplate = function( templateModel, options ) {\n\t\toptions = options || {};\n\n\t\tlayout.showLoadingView();\n\n\t\tself.requestTemplateContent( templateModel.get( 'source' ), templateModel.get( 'template_id' ), {\n\t\t\tdata: {\n\t\t\t\tpage_settings: options.withPageSettings\n\t\t\t},\n\t\t\tsuccess: function( response ) {\n\t\t\t\tself.closeModal();\n\n\t\t\t\tqazana.channels.data.trigger( 'template:before:insert', templateModel );\n\n\t\t\t\tqazana.sections.currentView.addChildModel( response.data, startIntent.importOptions || {} );\n\t\t\t\tqazana.channels.data.trigger( 'template:after:insert', templateModel );\n\n\t\t\t\tif ( options.withPageSettings ) {\n\t\t\t\t\tqazana.settings.page.model.set( response.page_settings );\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function( response ) {\n\t\t\t\tself.showErrorDialog( response );\n\t\t\t}\n\t\t} );\n\t};\n\n\tthis.saveTemplate = function( type, data ) {\n\t\tvar templateType = templateTypes[ type ];\n\n\t\t_.extend( data, {\n\t\t\tsource: 'local',\n\t\t\ttype: type\n\t\t} );\n\n\t\tif ( templateType.prepareSavedData ) {\n\t\t\tdata = templateType.prepareSavedData( data );\n\t\t}\n\n\t\tdata.data = JSON.stringify( data.data );\n\n\t\tvar ajaxParams = { data: data };\n\n\t\tif ( templateType.ajaxParams ) {\n\t\t\t_.extend( ajaxParams, templateType.ajaxParams );\n\t\t}\n\n\t\tqazana.ajax.send( 'save_template', ajaxParams );\n\t};\n\n\tthis.requestTemplateContent = function( source, id, ajaxOptions ) {\n\t\tvar options = {\n\t\t\tdata: {\n\t\t\t\tsource: source,\n\t\t\t\tedit_mode: true,\n\t\t\t\ttemplate_id: id\n\t\t\t}\n\t\t};\n\n\t\tif ( ajaxOptions ) {\n\t\t\tBackbone.$.extend( true, options, ajaxOptions );\n\t\t}\n\n\t\treturn qazana.ajax.send( 'get_template_data', options );\n\t};\n\n\tthis.getDeleteDialog = function() {\n\n\t\tif ( ! deleteDialog ) {\n\t\t\tdeleteDialog = qazana.dialogsManager.createWidget( 'confirm', {\n\t\t\t\tid: 'qazana-template-library-delete-dialog',\n\t\t\t\theaderMessage: qazana.translate( 'delete_template' ),\n\t\t\t\tmessage: qazana.translate( 'delete_template_confirm' ),\n\t\t\t\tstrings: {\n\t\t\t\t\tconfirm: qazana.translate( 'delete' )\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn deleteDialog;\n\t};\n\n\tthis.getErrorDialog = function() {\n\t\tif ( ! errorDialog ) {\n\t\t\terrorDialog = qazana.dialogsManager.createWidget( 'alert', {\n\t\t\t\tid: 'qazana-template-library-error-dialog',\n\t\t\t\theaderMessage: qazana.translate( 'an_error_occurred' )\n\t\t\t} );\n\t\t}\n\n\t\treturn errorDialog;\n\t};\n\n\tthis.getModal = function() {\n\t\tif ( ! modal ) {\n\t\t\tmodal = qazana.dialogsManager.createWidget( 'lightbox', {\n\t\t\t\tid: 'qazana-template-library-modal',\n\t\t\t\tcloseButton: false\n\t\t\t} );\n\t\t}\n\n\t\treturn modal;\n\t};\n\n\tthis.getLayout = function() {\n\t\treturn layout;\n\t};\n\n\tthis.getTemplatesCollection = function() {\n\t\treturn templatesCollection;\n\t};\n\n\tthis.requestRemoteTemplates = function( callback, forceUpdate ) {\n\t\tif ( templatesCollection && ! forceUpdate ) {\n\t\t\tif ( callback ) {\n\t\t\t\tcallback();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tqazana.ajax.send( 'get_templates', {\n\t\t\tsuccess: function( data ) {\n\t\t\t\ttemplatesCollection = new TemplateLibraryCollection( data );\n\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t};\n\n\tthis.startModal = function( customStartIntent ) {\n\t\tstartIntent = customStartIntent || {};\n\n\t\tself.getModal().show();\n\n\t\tself.setTemplatesSource( 'remote' );\n\n\t\tif ( ! layout ) {\n\t\t\tinitLayout();\n\t\t}\n\n\t\tlayout.showLoadingView();\n\n\t\tself.requestRemoteTemplates( function() {\n\t\t\tif ( startIntent.onReady ) {\n\t\t\t\tstartIntent.onReady();\n\t\t\t}\n\t\t} );\n\t};\n\n\tthis.closeModal = function() {\n\t\tself.getModal().hide();\n\t};\n\n\tthis.setTemplatesSource = function( source, trigger ) {\n\t\tvar channel = qazana.channels.templates;\n\n\t\tchannel.reply( 'filter:source', source );\n\n\t\tif ( trigger ) {\n\t\t\tchannel.trigger( 'filter:change' );\n\t\t}\n\t};\n\n\tthis.showTemplates = function() {\n\t\tlayout.showTemplatesView( templatesCollection );\n\t};\n\n\tthis.showTemplatesModal = function() {\n\t\tself.startModal( {\n\t\t\tonReady: self.showTemplates\n\t\t} );\n\t};\n\n\tthis.onSearchViewChangeInput = function( view ) {\n\t\tthis.changeFilter( view.ui.input.val(), 'search' );\n\t};\n\n\tthis.changeFilter = function( filterValue ) {\n\n\t\tqazana.channels.templates\n\t\t\t.reply( 'filter:text', filterValue )\n\t\t\t.trigger( 'filter:change' );\n\n\t};\n\n\tthis.showErrorDialog = function( errorMessage ) {\n\t\tif ( 'object' === typeof errorMessage ) {\n\t\t\tvar message = '';\n\n\t\t\t_.each( errorMessage, function( error ) {\n\t\t\t\tmessage += '<div>' + error.message + '.</div>';\n\t\t\t} );\n\n\t\t\terrorMessage = message;\n\t\t} else if ( errorMessage ) {\n\t\t\terrorMessage += '.';\n\t\t} else {\n\t\t\terrorMessage = '<i>&#60;The error message is empty&#62;</i>';\n\t\t}\n\n\t\tself.getErrorDialog()\n\t\t    .setMessage( qazana.translate( 'templates_request_error' ) + '<div id=\"qazana-template-library-error-info\">' + errorMessage + '</div>' )\n\t\t    .show();\n\t};\n};\n\nmodule.exports = new TemplateLibraryManager();\n",
    "var TemplateLibraryTemplateModel;\n\nTemplateLibraryTemplateModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\ttemplate_id: 0,\n\t\tname: '',\n\t\ttitle: '',\n\t\tsource: '',\n\t\ttype: '',\n\t\tauthor: '',\n\t\tthumbnail: '',\n\t\turl: '',\n\t\texport_link: '',\n\t\tcategories: [],\n\t\ttags: [],\n\t\tkeywords: []\n\t}\n} );\n\nmodule.exports = TemplateLibraryTemplateModel;\n",
    "var TemplateLibraryHeaderLogoView = require( 'qazana-templates/views/parts/header/logo' ),\n\tTemplateLibraryHeaderSaveView = require( 'qazana-templates/views/parts/header/save' ),\n\tTemplateLibraryHeaderImportView = require( 'qazana-templates/views/parts/header/import' ),\n\tTemplateLibraryHeaderMenuView = require( 'qazana-templates/views/parts/header/menu' ),\n\tTemplateLibraryHeaderPreviewView = require( 'qazana-templates/views/parts/header/preview' ),\n\tTemplateLibraryHeaderSearchView = require( 'qazana-templates/views/parts/header/search' ),\n\tTemplateLibraryHeaderBackView = require( 'qazana-templates/views/parts/header/back' ),\n\n\tTemplateLibraryHeaderView = require( 'qazana-templates/views/parts/panel/header' ),\n\tTemplateLibraryLoadingView = require( 'qazana-templates/views/parts/panel/loading' ),\n\tTemplateLibraryCollectionView = require( 'qazana-templates/views/parts/panel/templates' ),\n\tTemplateLibrarySaveTemplateView = require( 'qazana-templates/views/parts/panel/save-template' ),\n\tTemplateLibraryImportView = require( 'qazana-templates/views/parts/panel/import' ),\n\tTemplateLibraryPreviewView = require( 'qazana-templates/views/parts/panel/preview' ),\n\tTemplateLibraryLayoutView;\n\nTemplateLibraryLayoutView = Marionette.LayoutView.extend( {\n\tel: '#qazana-template-library-modal',\n\n\tregions: {\n\t\tmodalContent: '.dialog-message',\n\t\tmodalHeader: '.dialog-widget-header'\n\t},\n\n\tinitialize: function() {\n\t\tthis.getRegion( 'modalHeader' ).show( new TemplateLibraryHeaderView() );\n\t},\n\n\tgetHeaderView: function() {\n\t\treturn this.getRegion( 'modalHeader' ).currentView;\n\t},\n\n\tshowLoadingView: function() {\n\t\tthis.modalContent.show( new TemplateLibraryLoadingView() );\n\t},\n\n\tshowTemplatesView: function( templatesCollection ) {\n\t\tthis.modalContent.show( new TemplateLibraryCollectionView( {\n\t\t\tcollection: templatesCollection\n\t\t} ) );\n\n\t\tvar headerView = this.getHeaderView();\n\n\t\theaderView.tools.show( new TemplateLibraryHeaderSaveView() );\n\t\theaderView.import.show( new TemplateLibraryHeaderImportView() );\n\t\theaderView.menuArea.show( new TemplateLibraryHeaderMenuView() );\n\t\theaderView.logoArea.show( new TemplateLibraryHeaderLogoView() );\n\t\theaderView.searchArea.show( new TemplateLibraryHeaderSearchView() );\n\t},\n\n\tshowImportView: function() {\n\t\tthis.modalContent.show( new TemplateLibraryImportView() );\n\n\t\tvar headerView = this.getHeaderView();\n\n\t\theaderView.tools.reset();\n\t\theaderView.import.reset();\n\t\theaderView.menuArea.reset();\n\t\theaderView.searchArea.reset();\n\t\theaderView.logoArea.show( new TemplateLibraryHeaderLogoView() );\n\t},\n\n\tshowSaveTemplateView: function( elementModel ) {\n\t\tthis.modalContent.show( new TemplateLibrarySaveTemplateView( { model: elementModel } ) );\n\n\t\tvar headerView = this.getHeaderView();\n\n\t\theaderView.tools.reset();\n\t\theaderView.import.reset();\n\t\theaderView.menuArea.reset();\n\t\theaderView.searchArea.reset();\n\t\theaderView.logoArea.show( new TemplateLibraryHeaderLogoView() );\n\t},\n\n\tshowPreviewView: function( templateModel ) {\n\t\tthis.modalContent.show( new TemplateLibraryPreviewView( {\n\t\t\turl: templateModel.get( 'url' )\n\t\t} ) );\n\n\t\tvar headerView = this.getHeaderView();\n\n\t\theaderView.menuArea.reset();\n\t\theaderView.searchArea.reset();\n\n\t\theaderView.tools.show( new TemplateLibraryHeaderPreviewView( {\n\t\t\tmodel: templateModel\n\t\t} ) );\n\n\t\theaderView.logoArea.show( new TemplateLibraryHeaderBackView() );\n\t}\n} );\n\nmodule.exports = TemplateLibraryLayoutView;\n",
    "var TemplateLibraryHeaderBackView;\n\nTemplateLibraryHeaderBackView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-header-back',\n\n\tid: 'qazana-template-library-header-preview-back',\n\n\tevents: {\n\t\t'click': 'onClick'\n\t},\n\n\tonClick: function() {\n\t\tqazana.templates.showTemplates();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderBackView;\n",
    "var TemplateLibraryHeaderImportView;\n\nTemplateLibraryHeaderImportView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-header-import',\n\n\tid: 'qazana-template-library-header-import',\n\n\tclassName: 'qazana-template-library-header-item',\n\n\tevents: {\n\t\t'click': 'onClick'\n\t},\n\n\tonClick: function(e) {\n\t\tqazana.templates.getLayout().showImportView();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderImportView;\n",
    "var TemplateLibraryHeaderLogoView;\n\nTemplateLibraryHeaderLogoView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-header-logo',\n\n\tid: 'qazana-template-library-header-logo',\n\n\tevents: {\n\t\t'click': 'onClick'\n\t},\n\n\tonClick: function() {\n\t\tqazana.templates.setTemplatesSource( 'remote' );\n\t\tqazana.templates.showTemplates();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderLogoView;\n",
    "var TemplateLibraryHeaderMenuView;\n\nTemplateLibraryHeaderMenuView = Marionette.ItemView.extend( {\n\toptions: {\n\t\tactiveClass: 'qazana-active'\n\t},\n\n\ttemplate: '#tmpl-qazana-template-library-header-menu',\n\n\tid: 'qazana-template-library-header-menu',\n\n\tui: {\n\t\tmenuItems: '.qazana-template-library-menu-item'\n\t},\n\n\tevents: {\n\t\t'click @ui.menuItems': 'onMenuItemClick'\n\t},\n\n\t$activeItem: null,\n\n\tactivateMenuItem: function( $item ) {\n\t\tvar activeClass = this.getOption( 'activeClass' );\n\n\t\tif ( this.$activeItem === $item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.$activeItem ) {\n\t\t\tthis.$activeItem.removeClass( activeClass );\n\t\t}\n\n\t\t$item.addClass( activeClass );\n\n\t\tthis.$activeItem = $item;\n\t},\n\n\tonRender: function() {\n\t\tvar currentSource = qazana.channels.templates.request( 'filter:source' ),\n\t\t\t$sourceItem = this.ui.menuItems.filter( '[data-template-source=\"' + currentSource + '\"]' );\n\n\t\tthis.activateMenuItem( $sourceItem );\n\t},\n\n\tonMenuItemClick: function( event ) {\n\t\tvar item = event.currentTarget;\n\n\t\tthis.activateMenuItem( Backbone.$( item ) );\n\n\t\tqazana.templates.setTemplatesSource( item.dataset.templateSource, true );\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderMenuView;\n",
    "var TemplateLibraryHeaderPreviewView;\n\nTemplateLibraryHeaderPreviewView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-header-preview',\n\n\tid: 'qazana-template-library-header-preview',\n\n\tui: {\n\t\tinsertButton: '#qazana-template-library-header-preview-insert'\n\t},\n\n\tevents: {\n\t\t'click @ui.insertButton': 'onInsertButtonClick'\n\t},\n\n\tonInsertButtonClick: function() {\n\t\tqazana.templates.importTemplate( this.model );\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderPreviewView;\n",
    "var TemplateLibraryHeaderSaveView;\n\nTemplateLibraryHeaderSaveView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-header-save',\n\n\tid: 'qazana-template-library-header-save',\n\n\tclassName: 'qazana-template-library-header-item',\n\n\tevents: {\n\t\t'click': 'onClick'\n\t},\n\n\tonClick: function() {\n\t\tqazana.templates.getLayout().showSaveTemplateView();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderSaveView;\n",
    "var TemplateLibraryHeaderSearchView;\n\nTemplateLibraryHeaderSearchView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-header-search',\n\n\tid: 'qazana-template-library-header-search-input',\n\n\tui: {\n\t\tinput: 'input',\n\t\tclearInput: '#qazana-template-library-header-search-input-clear'\n\t},\n\n\tevents: {\n\t\t'keyup @ui.input': 'onInputChanged',\n\t\t'click @ui.clearInput': 'clearInput'\n\t},\n\n\tonRender: function(){\n\t\tvar self = this;\n\n\t\tself.ui.input.focus(function() {\n\t\t\tself.$el.addClass( 'active' );\n\t\t}).blur(function() {\n\t\t\tself.$el.removeClass( 'active' );\n\t\t});\n\t},\n\n\tonInputChanged: function( event ) {\n\t\tvar ESC_KEY = 27;\n\n\t\tif ( ESC_KEY === event.keyCode ) {\n\t\t\tthis.clearInput();\n\t\t}\n\n\t\tqazana.templates.onSearchViewChangeInput( this );\n\t},\n\n\tclearInput: function() {\n\t\tthis.ui.input.val( '' );\n\t\tthis.$el.removeClass( 'active' );\n\t\tqazana.templates.onSearchViewChangeInput( this );\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderSearchView;\n",
    "var TemplateLibraryHeaderView;\n\nTemplateLibraryHeaderView = Marionette.LayoutView.extend( {\n\n\tid: 'qazana-template-library-header',\n\n\ttemplate: '#tmpl-qazana-template-library-header',\n\n\tregions: {\n\t\tlogoArea: '#qazana-template-library-header-logo-area',\n\t\ttools: '#qazana-template-library-header-tools',\n\t\timport: '#qazana-template-library-header-import',\n\t\tmenuArea: '#qazana-template-library-header-menu-area',\n\t\tsearchArea: '#qazana-template-library-header-search-area'\n\t},\n\n\tui: {\n\t\tcloseModal: '#qazana-template-library-header-close-modal'\n\t},\n\n\tevents: {\n\t\t'click @ui.closeModal': 'onCloseModalClick'\n\t},\n\n\tonCloseModalClick: function() {\n\t\tqazana.templates.closeModal();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderView;\n",
    "var TemplateLibraryImportView;\n\nTemplateLibraryImportView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-import',\n\n\tid: 'qazana-template-library-import',\n\n\tui: {\n\t\tuploadForm: '#qazana-template-library-import-form',\n\t\tinput: '#qazana-template-library-import-file',\n\t\tsubmitButton: '#qazana-template-library-import-submit'\n\t},\n\n\tevents: {\n\t\t'submit @ui.uploadForm': 'onFormSubmit',\n\t\t'change @ui.input': 'onInputChanged'\n\t},\n\n\tonInputChanged: function( event ) {\n\t    this.file = event.target.files;\n\t},\n\n\tonFormSubmit: function( event ) {\n\t\tvar self = this;\n\n\t\tevent.preventDefault();\n\t\tvar\tuploadForm = new FormData();\n\t\tqazana.templates.getLayout().showLoadingView();\n\n\t\tjQuery(self.ui.submitButton).addClass( 'qazana-button-state' );\n\n\t\tif ( ! self.file ) {\n\t\t\tqazana.templates.showErrorDialog( 'Please select a template file to import' );\n\t\t\tqazana.templates.showTemplates();\n\t\t\treturn;\n\t\t}\n\n\t\tuploadForm.append( 'file', self.file[0] );\n\n\t\tqazana.ajax.send( 'import_template', {\n\t\t\tdata: uploadForm,\n\t\t\tprocessData: false,\n\t\t\tcontentType: false,\n\t\t\tcache: false,\n\t\t\tsuccess: function( response ) {\n\t\t\t\tqazana.templates.getTemplatesCollection().add( response );\n\t\t\t\tqazana.templates.setTemplatesSource( 'local', true );\n\t\t\t\tqazana.templates.showTemplates();\n\t\t\t},\n\t\t\terror: function( response ) {\n\t\t\t\tqazana.templates.showErrorDialog( response );\n\t\t\t}\n\t\t} );\n\n\t}\n} );\n\nmodule.exports = TemplateLibraryImportView;\n",
    "var TemplateLibraryLoadingView;\n\nTemplateLibraryLoadingView = Marionette.ItemView.extend( {\n\tid: 'qazana-template-library-loading',\n\n\ttemplate: '#tmpl-qazana-template-library-loading'\n} );\n\nmodule.exports = TemplateLibraryLoadingView;\n",
    "var TemplateLibraryPreviewView;\n\nTemplateLibraryPreviewView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-preview',\n\n\tid: 'qazana-template-library-preview',\n\n\tui: {\n\t\tiframe: '> iframe'\n\t},\n\n\tonRender: function() {\n\t\tthis.ui.iframe.attr( 'src', this.getOption( 'url' ) );\n\t}\n} );\n\nmodule.exports = TemplateLibraryPreviewView;\n",
    "var TemplateLibrarySaveTemplateView;\n\nTemplateLibrarySaveTemplateView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-save-template',\n\n\tid: 'qazana-template-library-save-template',\n\n\tui: {\n\t\tform: '#qazana-template-library-save-template-form',\n\t\tsubmitButton: '#qazana-template-library-save-template-submit'\n\t},\n\n\tevents: {\n\t\t'submit @ui.form': 'onFormSubmit'\n\t},\n\n\tgetSaveType: function() {\n\t\treturn this.model ? this.model.get( 'elType' ) : 'page';\n\t},\n\n\ttemplateHelpers: function() {\n\t\tvar saveType = this.getSaveType(),\n\t\t\ttemplateType = qazana.templates.getTemplateTypes( saveType );\n\n\t\treturn templateType.saveDialog;\n\t},\n\n\tonFormSubmit: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tvar formData = this.ui.form.qazanaSerializeObject(),\n\t\t\tsaveType = this.model ? this.model.get( 'elType' ) : 'page';\n\n\t\tformData.data = this.model ? [ this.model.toJSON() ] : qazana.elements.toJSON();\n\n\t\tthis.ui.submitButton.addClass( 'qazana-button-state' );\n\n\t\tqazana.templates.saveTemplate( saveType, formData );\n\t}\n} );\n\nmodule.exports = TemplateLibrarySaveTemplateView;\n",
    "var TemplateLibraryTemplatesEmptyView;\n\nTemplateLibraryTemplatesEmptyView = Marionette.ItemView.extend( {\n\tid: 'qazana-template-library-templates-empty',\n\n\ttemplate: '#tmpl-qazana-template-library-templates-empty'\n} );\n\nmodule.exports = TemplateLibraryTemplatesEmptyView;\n",
    "var TemplateLibraryTemplateLocalView = require( 'qazana-templates/views/template/local' ),\n    TemplateLibraryTemplateRemoteView = require( 'qazana-templates/views/template/remote' ),\n    TemplateLibraryTemplateThemeView = require( 'qazana-templates/views/template/theme' ),\n    TemplateLibraryTemplatesEmptyView = require( 'qazana-templates/views/parts/panel/templates-empty' ),\n    TemplateLibraryCollectionView;\n\nTemplateLibraryCollectionView = Marionette.CompositeView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-templates',\n\n\tid: 'qazana-template-library-templates',\n\n\tchildViewContainer: '#qazana-template-library-templates-container',\n\n\temptyView: TemplateLibraryTemplatesEmptyView,\n\n\tgetChildView: function( childModel ) {\n\t\tif ( 'remote' === childModel.get( 'source' ) ) {\n\t\t\treturn TemplateLibraryTemplateRemoteView;\n\t\t}\n\n        if ( 'theme' === childModel.get( 'source' ) ) {\n            return TemplateLibraryTemplateThemeView;\n        }\n\n        return TemplateLibraryTemplateLocalView;\n    },\n\n\tinitialize: function() {\n\t\tthis.listenTo( qazana.channels.templates, 'filter:change', this._renderChildren );\n\t},\n\n\tfilterByName: function( model ) {\n\t\tvar filterValue = qazana.channels.templates.request( 'filter:text' );\n\n\t\tif ( ! filterValue ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfilterValue = filterValue.toLowerCase();\n\n\t\tif ( model.get( 'title' ).toLowerCase().indexOf( filterValue ) >= 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn _.any( model.get( 'keywords' ), function( keyword ) {\n\t\t\treturn keyword.toLowerCase().indexOf( filterValue ) >= 0;\n\t\t} );\n\t},\n\n\tfilterBySource: function( model ) {\n\t\tvar filterValue = qazana.channels.templates.request( 'filter:source' );\n\n\t\tif ( ! filterValue ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn filterValue === model.get( 'source' );\n\t},\n\n\tfilterByType: function( model ) {\n\t\treturn qazana.templates.getTemplateTypes( model.get( 'type' ) ) && false !== qazana.templates.getTemplateTypes( model.get( 'type' ) ).showInLibrary;\n\t},\n\n\tfilter: function( childModel ) {\n\t\treturn this.filterByName( childModel ) && this.filterBySource( childModel ) && this.filterByType( childModel );\n\t},\n\n\tonRenderCollection: function() {\n\t\tvar isEmpty = this.children.isEmpty();\n\n\t\tthis.$childViewContainer.attr( 'data-template-source', isEmpty ? 'empty' : qazana.channels.templates.request( 'filter:source' ) );\n\t}\n} );\n\nmodule.exports = TemplateLibraryCollectionView;\n",
    "var TemplateLibraryInsertTemplateBehavior = require( 'qazana-templates/behaviors/insert-template' ),\n\tTemplateLibraryTemplateView;\n\nTemplateLibraryTemplateView = Marionette.ItemView.extend( {\n\tclassName: function() {\n\t\treturn 'qazana-template-library-template qazana-template-library-template-' + this.model.get( 'source' );\n\t},\n\n\tui: function() {\n\t\treturn {\n\t\t\tinsertButton: '.qazana-template-library-template-insert',\n\t\t\tpreviewButton: '.qazana-template-library-template-preview'\n\t\t};\n\t},\n\n\tevents: function() {\n\t\treturn {\n\t\t\t'click @ui.insertButton': 'onInsertButtonClick',\n\t\t\t'click @ui.previewButton': 'onPreviewButtonClick'\n\t\t};\n\t},\n\n\tbehaviors: {\n\t\tinsertTemplate: {\n\t\t\tbehaviorClass: TemplateLibraryInsertTemplateBehavior\n\t\t}\n\t}\n} );\n\nmodule.exports = TemplateLibraryTemplateView;\n",
    "var TemplateLibraryTemplateView = require( 'qazana-templates/views/template/base' ),\n\tTemplateLibraryTemplateLocalView;\n\nTemplateLibraryTemplateLocalView = TemplateLibraryTemplateView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-template-local',\n\n\tui: function() {\n\t\treturn _.extend( TemplateLibraryTemplateView.prototype.ui.apply( this, arguments ), {\n\t\t\tdeleteButton: '.qazana-template-library-template-delete'\n\t\t} );\n\t},\n\n\tevents: function() {\n\t\treturn _.extend( TemplateLibraryTemplateView.prototype.events.apply( this, arguments ), {\n\t\t\t'click @ui.deleteButton': 'onDeleteButtonClick'\n\t\t} );\n\t},\n\n\tonDeleteButtonClick: function() {\n\t\tqazana.templates.deleteTemplate( this.model );\n\t},\n\n\tonPreviewButtonClick: function() {\n\t\topen( this.model.get( 'url' ), '_blank' );\n\t}\n} );\n\nmodule.exports = TemplateLibraryTemplateLocalView;\n",
    "var TemplateLibraryTemplateView = require( 'qazana-templates/views/template/base' ),\n\tTemplateLibraryTemplateRemoteView;\n\nTemplateLibraryTemplateRemoteView = TemplateLibraryTemplateView.extend( {\n\ttemplate: '#tmpl-qazana-template-library-template-remote',\n\n\tonPreviewButtonClick: function() {\n\t\tqazana.templates.getLayout().showPreviewView( this.model );\n\t}\n} );\n\nmodule.exports = TemplateLibraryTemplateRemoteView;\n",
    "var TemplateLibraryTemplateView = require( 'qazana-templates/views/template/base' ),\n    TemplateLibraryTemplateThemeView;\n\nTemplateLibraryTemplateThemeView = TemplateLibraryTemplateView.extend( {\n    template: '#tmpl-qazana-template-library-template-theme',\n\n    onPreviewButtonClick: function() {\n        qazana.templates.getLayout().showPreviewView( this.model );\n    }\n} );\n\nmodule.exports = TemplateLibraryTemplateThemeView;\n",
    "/* global QazanaConfig */\nvar App;\n\nMarionette.TemplateCache.prototype.compileTemplate = function( rawTemplate, options ) {\n\toptions = {\n\t\tevaluate: /<#([\\s\\S]+?)#>/g,\n\t\tinterpolate: /{{{([\\s\\S]+?)}}}/g,\n\t\tescape: /{{([^}]+?)}}(?!})/g\n\t};\n\n\treturn _.template( rawTemplate, options );\n};\n\nApp = Marionette.Application.extend( {\n\thelpers: require( 'qazana-editor-utils/helpers' ),\n\theartbeat: require( 'qazana-editor-utils/heartbeat' ),\n\timagesManager: require( 'qazana-editor-utils/images-manager' ),\n\tdebug: require( 'qazana-editor-utils/debug' ),\n\tschemes: require( 'qazana-editor-utils/schemes' ),\n\tpresetsFactory: require( 'qazana-editor-utils/presets-factory' ),\n\ttemplates: require( 'qazana-templates/manager' ),\n\tajax: require( 'qazana-editor-utils/ajax' ),\n\tconditions: require( 'qazana-editor-utils/conditions' ),\n\thistory:  require( 'qazana-extensions/history/assets/js/module' ),\n\thotKeys: require( 'qazana-editor-utils/hot-keys' ),\n\n\tchannels: {\n\t\teditor: Backbone.Radio.channel( 'BUILDER:editor' ),\n\t\tdata: Backbone.Radio.channel( 'BUILDER:data' ),\n\t\tpanelElements: Backbone.Radio.channel( 'BUILDER:panelElements' ),\n\t\tdataEditMode: Backbone.Radio.channel( 'BUILDER:editmode' ),\n\t\tdeviceMode: Backbone.Radio.channel( 'BUILDER:deviceMode' ),\n\t\ttemplates: Backbone.Radio.channel( 'BUILDER:templates' )\n\t},\n\n\t// Exporting modules that can be used externally\n\tmodules: {\n\t\telement: require( 'qazana-models/element' ),\n\t\tWidgetView: require( 'qazana-views/widget' ),\n\t\tpanel: {\n\t\t\tMenu: require( 'qazana-panel/pages/menu/menu' )\n\t\t},\n\t\tcontrols: {\n\t\t\tBase: require( 'qazana-views/controls/base' ),\n\t\t\tBaseMultiple: require( 'qazana-views/controls/base-multiple' ),\n\t\t\tColor: require( 'qazana-views/controls/color' ),\n\t\t\tDimensions: require( 'qazana-views/controls/dimensions' ),\n\t\t\tImage_dimensions: require( 'qazana-views/controls/image-dimensions' ),\n\t\t\tMedia: require( 'qazana-views/controls/media' ),\n\t\t\tSlider: require( 'qazana-views/controls/slider' ),\n\t\t\tWysiwyg: require( 'qazana-views/controls/wysiwyg' ),\n\t\t\tChoose: require( 'qazana-views/controls/choose' ),\n\t\t\tUrl: require( 'qazana-views/controls/base-multiple' ),\n\t\t\tFont: require( 'qazana-views/controls/font' ),\n\t\t\tSection: require( 'qazana-views/controls/section' ),\n\t\t\tTab: require( 'qazana-views/controls/tab' ),\n\t\t\tRepeater: require( 'qazana-views/controls/repeater' ),\n\t\t\tWp_widget: require( 'qazana-views/controls/wp_widget' ),\n\t\t\tIcon: require( 'qazana-views/controls/icon' ),\n\t\t\tGallery: require( 'qazana-views/controls/gallery' ),\n\t\t\tSelect2: require( 'qazana-views/controls/select2' ),\n\t\t\tDate_time: require( 'qazana-views/controls/date-time' ),\n\t\t\tCode: require( 'qazana-views/controls/code' ),\n\t\t\tBox_shadow: require( 'qazana-views/controls/shadow' ),\n\t\t\tText_shadow: require( 'qazana-views/controls/shadow' ),\n\t\t\tStructure: require( 'qazana-views/controls/structure' ),\n\t\t\tAnimation: require( 'qazana-views/controls/select2' ),\n\t\t\tHover_animation: require( 'qazana-views/controls/select2' ),\n\t\t\tOrder: require( 'qazana-views/controls/order' ),\n\t\t\tSwitcher: require( 'qazana-views/controls/switcher' ),\n\t\t\tNumber: require( 'qazana-views/controls/number' )\n\t\t},\n\t\ttemplateLibrary: {\n\t\t\tElementsCollectionView: require( 'qazana-panel/pages/elements/views/elements' )\n\t\t}\n\t},\n\n\t_defaultDeviceMode: 'desktop',\n\n\taddControlView: function( controlID, ControlView ) {\n\t\tthis.modules.controls[ controlID[0].toUpperCase() + controlID.slice( 1 ) ] = ControlView;\n\t},\n\n\tgetElementData: function( modelElement ) {\n\t\tvar elType = modelElement.get( 'elType' );\n\n\t\tif ( 'widget' === elType ) {\n\t\t\tvar widgetType = modelElement.get( 'widgetType' );\n\n\t\t\tif ( ! this.config.widgets[ widgetType ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.config.widgets[ widgetType ];\n\t\t}\n\n\t\tif ( ! this.config.elements[ elType ] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.config.elements[ elType ];\n\t},\n\n\tgetElementControls: function( modelElement ) {\n\t\tvar self = this,\n\t\t\telementData = self.getElementData( modelElement );\n\n\t\tif ( ! elementData ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar isInner = modelElement.get( 'isInner' ),\n\t\t\tcontrols = {};\n\n\t\t_.each( elementData.controls, function( controlData, controlKey ) {\n\t\t\tif ( isInner && controlData.hide_in_inner || ! isInner && controlData.hide_in_top ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontrols[ controlKey ] = _.extend( {}, self.config.controls[ controlData.type ], controlData  );\n\t\t} );\n\n\t\treturn controls;\n\t},\n\n\tgetControlView: function( controlID ) {\n\t\treturn this.modules.controls[ controlID[0].toUpperCase() + controlID.slice( 1 ) ] || this.modules.controls.Base;\n\t},\n\n\tgetPanelView: function() {\n\t\treturn this.getRegion( 'panel' ).currentView;\n\t},\n\n\tinitComponents: function() {\n\t\tvar EventManager = require( 'qazana-utils/hooks' ),\n\t\t\tSettings = require( 'qazana-editor/settings/settings' );\n\n\t\tthis.hooks = new EventManager();\n\n\t\tthis.settings = new Settings();\n\t\t\n\t\tthis.templates.init();\n\n\t\tthis.initDialogsManager();\n\n\t\tthis.heartbeat.init();\n\n\t\tthis.ajax.init();\n\t},\n\n\tinitDialogsManager: function() {\n\t\tthis.dialogsManager = new DialogsManager.Instance();\n\t},\n\n\tinitElements: function() {\n\t\tvar ElementModel = qazana.modules.element,\n\t\t\tconfig = this.config.data;\n\n\t\t// If it's an reload, use the not-saved data\n\t\tif ( this.elements ) {\n\t\t\tconfig = this.elements.toJSON();\n\t\t}\n\n\t\tthis.elements = new ElementModel.Collection( config );\n\t},\n\n\tinitPreview: function() {\n\t\tthis.$previewWrapper = Backbone.$( '#qazana-preview' );\n\n\t\tthis.$previewResponsiveWrapper = Backbone.$( '#qazana-preview-responsive-wrapper' );\n\n\t\tvar previewIframeId = 'qazana-preview-iframe';\n\n\t\t// Make sure the iFrame does not exist.\n\t\tif ( ! this.$preview ) {\n\t\t\tthis.$preview = Backbone.$( '<iframe>', {\n\t\t\t\tid: previewIframeId,\n\t\t\t\tsrc: this.config.preview_link + '&' + ( new Date().getTime() ),\n\t\t\t\tallowfullscreen: 1\n\t\t\t} );\n\n\t\t\tthis.$previewResponsiveWrapper.append( this.$preview );\n\t\t}\n\n\t\tthis.$preview.on( 'load', _.bind( this.onPreviewLoaded, this ) );\n\t},\n\n\tinitFrontend: function() {\n\t\tvar frontendWindow = this.$preview[0].contentWindow;\n\n\t\twindow.qazanaFrontend = frontendWindow.qazanaFrontend;\n\n\t\tfrontendWindow.qazana = this;\n\n\t\tqazanaFrontend.init();\n\n\t\tqazanaFrontend.elementsHandler.initHandlers();\n\n\t\tthis.trigger( 'frontend:init' );\n\t},\n\n\tinitClearPageDialog: function() {\n\t\tvar self = this,\n\t\t\tdialog;\n\n\t\tself.getClearPageDialog = function() {\n\t\t\tif ( dialog ) {\n\t\t\t\treturn dialog;\n\t\t\t}\n\n\t\t\tdialog = this.dialogsManager.createWidget( 'confirm', {\n\t\t\t\tid: 'qazana-clear-page-dialog',\n\t\t\t\theaderMessage: qazana.translate( 'clear_page' ),\n\t\t\t\tmessage: qazana.translate( 'dialog_confirm_clear_page' ),\n\t\t\t\tposition: {\n\t\t\t\t\tmy: 'center center',\n\t\t\t\t\tat: 'center center'\n\t\t\t\t},\n\t\t\t\tstrings: {\n\t\t\t\t\tconfirm: qazana.translate( 'delete' ),\n\t\t\t\t\tcancel: qazana.translate( 'cancel' )\n\t\t\t\t},\n\t\t\t\tonConfirm: function() {\n\t\t\t\t\tself.getRegion( 'sections' ).currentView.collection.reset();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn dialog;\n\t\t};\n\t},\n\n\tinitHotKeys: function() {\n\t\tvar keysDictionary = {\n\t\t\tdel: 46,\n\t\t\td: 68,\n\t\t\tl: 76,\n\t\t\tm: 77,\n\t\t\tp: 80,\n\t\t\ts: 83\n\t\t};\n\n\t\tvar $ = jQuery,\n\t\t\thotKeysHandlers = {},\n\t\t\thotKeysManager = this.hotKeys;\n\n\t\thotKeysHandlers[ keysDictionary.del ] = {\n\t\t\tdeleteElement: {\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\tvar isEditorOpen = 'editor' === qazana.getPanelView().getCurrentPageName(),\n\t\t\t\t\t\tisInputTarget = $( event.target ).is( ':input, .qazana-input' );\n\n\t\t\t\t\treturn isEditorOpen && ! isInputTarget;\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tqazana.getPanelView().getCurrentPageView().getOption( 'editedElementView' ).removeElement();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\thotKeysHandlers[ keysDictionary.d ] = {\n\t\t\tduplicateElement: {\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\treturn hotKeysManager.isControlEvent( event );\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tvar panel = qazana.getPanelView();\n\n\t\t\t\t\tif ( 'editor' !== panel.getCurrentPageName() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tpanel.getCurrentPageView().getOption( 'editedElementView' ).duplicate();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\thotKeysHandlers[ keysDictionary.l ] = {\n\t\t\tshowTemplateLibrary: {\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\treturn hotKeysManager.isControlEvent( event ) && event.shiftKey;\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tqazana.templates.showTemplatesModal();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\thotKeysHandlers[ keysDictionary.m ] = {\n\t\t\tchangeDeviceMode: {\n\t\t\t\tdevices: [ 'desktop', 'tablet', 'mobile' ],\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\treturn hotKeysManager.isControlEvent( event ) && event.shiftKey;\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tvar currentDeviceMode = qazana.channels.deviceMode.request( 'currentMode' ),\n\t\t\t\t\t\tmodeIndex = this.devices.indexOf( currentDeviceMode );\n\n\t\t\t\t\tmodeIndex++;\n\n\t\t\t\t\tif ( modeIndex >= this.devices.length ) {\n\t\t\t\t\t\tmodeIndex = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tqazana.changeDeviceMode( this.devices[ modeIndex ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\thotKeysHandlers[ keysDictionary.p ] = {\n\t\t\tchangeEditMode: {\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\treturn hotKeysManager.isControlEvent( event );\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tqazana.getPanelView().modeSwitcher.currentView.toggleMode();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\thotKeysHandlers[ keysDictionary.s ] = {\n\t\t\tsaveEditor: {\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\treturn hotKeysManager.isControlEvent( event );\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tqazana.getPanelView().getFooterView()._publishBuilder();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t_.each( hotKeysHandlers, function( handlers, keyCode ) {\n\t\t\t_.each( handlers, function( handler, handlerName ) {\n\t\t\t\thotKeysManager.addHotKeyHandler( keyCode, handlerName, handler );\n\t\t\t} );\n\t\t} );\n\n\t\thotKeysManager.bindListener( this.$window.add( qazanaFrontend.getElements( '$window' ) ) );\n\t},\n\n\tpreventClicksInsideEditor: function() {\n\t\tthis.$previewContents.on( 'click', function( event ) {\n\t\t\tvar $target = Backbone.$( event.target ),\n\t\t\t\teditMode = qazana.channels.dataEditMode.request( 'activeMode' ),\n\t\t\t\tisClickInsideQazana = !! $target.closest( '#qazana' ).length,\n\t\t\t\tisTargetInsideDocument = this.contains( $target[0] );\n\n\t\t\tif ( isClickInsideQazana && 'edit' === editMode || ! isTargetInsideDocument ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( $target.closest( 'a' ).length ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif ( ! isClickInsideQazana ) {\n\t\t\t\tvar panelView = qazana.getPanelView();\n\n\t\t\t\tif ( 'elements' !== panelView.getCurrentPageName() ) {\n\t\t\t\t\tpanelView.setPage( 'elements' );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tonStart: function() {\n\t\tthis.$window = Backbone.$( window );\n\n\t\tNProgress.start();\n\t\tNProgress.inc( 0.2 );\n\n\t\tthis.config = QazanaConfig;\n\n\t\tBackbone.Radio.DEBUG = false;\n\t\tBackbone.Radio.tuneIn( 'BUILDER' );\n\n\t\tthis.initComponents();\n\n\t\tthis.channels.dataEditMode.reply( 'activeMode', 'edit' );\n\n\t\tthis.listenTo( this.channels.dataEditMode, 'switch', this.onEditModeSwitched );\n\n\t\tthis.setWorkSaver();\n\n\t\tthis.initClearPageDialog();\n\n\t\tthis.$window.trigger( 'qazana:init' );\n\n\t\tthis.initPreview();\n\n\t},\n\n\tonPreviewLoaded: function() {\n\t\tNProgress.done();\n\n\t\tthis.$previewContents = this.$preview.contents();\n\n\t\tvar $previewQazanaEl = this.$previewContents.find( '#qazana' );\n\n\t\tif ( ! $previewQazanaEl.length ) {\n\t\t\tthis.onPreviewElNotFound();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initFrontend();\n\n\t\tthis.initElements();\n\n\t\tthis.initHotKeys();\n\n\t\tvar iframeRegion = new Marionette.Region( {\n\t\t\t// Make sure you get the DOM object out of the jQuery object\n\t\t\tel: $previewQazanaEl[0]\n\t\t} );\n\n\t\tthis.schemes.init();\n\n\t\tthis.schemes.printSchemesStyle();\n\n\t\tthis.preventClicksInsideEditor();\n\n\t\tvar Preview = require( 'qazana-views/preview' ),\n\t\t\tPanelLayoutView = require( 'qazana-layouts/panel/panel' );\n\n\t\tthis.addRegions( {\n\t\t\tsections: iframeRegion,\n\t\t\tpanel: '#qazana-panel'\n\t\t} );\n\n\t\tthis.getRegion( 'sections' ).show( new Preview( {\n\t\t\tcollection: this.elements\n\t\t} ) );\n\n\t\tthis.getRegion( 'panel' ).show( new PanelLayoutView() );\n\n\t\tthis.$previewContents\n\t\t    .children() // <html>\n\t\t    .addClass( 'qazana-html' )\n\t\t    .children( 'body' )\n\t\t    .addClass( 'qazana-editor-active' )\n\t\t\t.addClass( 'qazana-page' );\n\n\t\tthis.setResizablePanel();\n\n\t\tthis.changeDeviceMode( this._defaultDeviceMode );\n\n\t\tBackbone.$( '#qazana-loading, #qazana-preview-loading' ).fadeOut( 600 );\n\n\t\t_.defer( function() {\n\t\t\tqazanaFrontend.getElements( 'window' ).jQuery.holdReady( false );\n\t\t} );\n\n\t\tthis.enqueueTypographyFonts();\n\t\tthis.onEditModeSwitched();\n\n\t\tthis.trigger( 'preview:loaded' );\n\t},\n\n\tonEditModeSwitched: function() {\n\t\tvar activeMode = this.channels.dataEditMode.request( 'activeMode' );\n\n\t\tif ( 'edit' === activeMode ) {\n\t\t\tthis.exitPreviewMode();\n\t\t} else {\n\t\t\tthis.enterPreviewMode( 'preview' === activeMode );\n\t\t}\n\t},\n\n\tonPreviewElNotFound: function() {\n\t\tvar dialog = this.dialogsManager.createWidget( 'confirm', {\n\t\t\tid: 'qazana-fatal-error-dialog',\n\t\t\theaderMessage: qazana.translate( 'preview_el_not_found_header' ),\n\t\t\tmessage: qazana.translate( 'preview_el_not_found_message' ),\n\t\t\tposition: {\n\t\t\t\tmy: 'center center',\n\t\t\t\tat: 'center center'\n\t\t\t},\n            strings: {\n\t\t\t\tconfirm: qazana.translate( 'learn_more' ),\n\t\t\t\tcancel: qazana.translate( 'go_back' )\n            },\n\t\t\tonConfirm: function() {\n\t\t\t\topen( qazana.config.help_the_content_url, '_blank' );\n\t\t\t},\n\t\t\tonCancel: function() {\n\t\t\t\tparent.history.go( -1 );\n\t\t\t},\n\t\t\thideOnButtonClick: false\n\t\t} );\n\n\t\tdialog.show();\n\t},\n\n\tsetFlagEditorChange: function( status ) {\n\t\tqazana.channels.editor\n\t\t\t.reply( 'status', status )\n\t\t\t.trigger( 'status:change', status );\n\t},\n\n\tisEditorChanged: function() {\n\t\treturn ( true === qazana.channels.editor.request( 'status' ) );\n\t},\n\n\tsetWorkSaver: function() {\n\t\tthis.$window.on( 'beforeunload', function() {\n\t\t\tif ( qazana.isEditorChanged() ) {\n\t\t\t\treturn qazana.translate( 'before_unload_alert' );\n\t\t\t}\n\t\t} );\n\t},\n\n\tsetResizablePanel: function() {\n\t\tvar self = this,\n\t\t\tside = qazana.config.is_rtl ? 'right' : 'left';\n\n\t\tself.panel.$el.resizable( {\n\t\t\thandles: qazana.config.is_rtl ? 'w' : 'e',\n\t\t\tminWidth: 200,\n\t\t\tmaxWidth: 680,\n\t\t\tstart: function() {\n\t\t\t\tself.$previewWrapper\n\t\t\t\t\t.addClass( 'ui-resizable-resizing' )\n\t\t\t\t\t.css( 'pointer-events', 'none' );\n\t\t\t},\n\t\t\tstop: function() {\n\t\t\t\tself.$previewWrapper\n\t\t\t\t\t.removeClass( 'ui-resizable-resizing' )\n\t\t\t\t\t.css( 'pointer-events', '' );\n\n\t\t\t\tqazana.channels.data.trigger( 'scrollbar:update' );\n\t\t\t},\n\t\t\tresize: function( event, ui ) {\n\t\t\t\tself.$previewWrapper\n\t\t\t\t\t.css( side, ui.size.width );\n\t\t\t}\n\t\t} );\n\t},\n\n\tenterPreviewMode: function( hidePanel ) {\n\t\tvar $elements = this.$previewContents.find( 'body' );\n\n\t\tif ( hidePanel ) {\n\t\t\t$elements = $elements.add( 'body' );\n\t\t}\n\n\t\t$elements\n\t\t\t.removeClass( 'qazana-editor-active' )\n\t\t\t.addClass( 'qazana-editor-preview' );\n\n\t\tif ( hidePanel ) {\n\t\t\t// Handle panel resize\n\t\t\tthis.$previewWrapper.css( qazana.config.is_rtl ? 'right' : 'left', '' );\n\n\t\t\tthis.panel.$el.css( 'width', '' );\n\t\t}\n\t},\n\n\texitPreviewMode: function() {\n\t\tthis.$previewContents\n\t\t\t.find( 'body' )\n\t\t\t.add( 'body' )\n\t\t\t.removeClass( 'qazana-editor-preview' )\n\t\t\t.addClass( 'qazana-editor-active' );\n\t},\n\n\tchangeEditMode: function( newMode ) {\n\t\tvar dataEditMode = qazana.channels.dataEditMode,\n\t\t\toldEditMode = dataEditMode.request( 'activeMode' );\n\n\t\tdataEditMode.reply( 'activeMode', newMode );\n\n\t\tif ( newMode !== oldEditMode ) {\n\t\t\tdataEditMode.trigger( 'switch', newMode );\n\t\t}\n\t},\n\n\tsaveEditor: function( options ) {\n\t\toptions = _.extend( {\n\t\t\tstatus: 'draft',\n            save_state: 'save',\n\t\t\tonSuccess: null\n\t\t}, options );\n\n\t\tif ( qazana.elements.length === 0 ) {\n        \toptions.save_state = 'delete';\n        }\n\n\t\tvar self = this,\n\t\t\tnewData = qazana.elements.toJSON( { removeDefault: true } );\n\n\t\treturn this.ajax.send( 'save_builder', {\n\t        data: {\n\t\t        post_id: this.config.post_id,\n\t\t        status: options.status,\n                save_state: options.save_state,\n\t\t        data: JSON.stringify( newData )\n\t        },\n\t\t\tsuccess: function( data ) {\n\t\t\t\tself.setFlagEditorChange( false );\n\n\t\t\t\tself.config.data = newData;\n\n\t\t\t\tself.channels.editor.trigger( 'saved', data );\n\n\t\t\t\tif ( _.isFunction( options.onSuccess ) ) {\n\t\t\t\t\toptions.onSuccess.call( this, data );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\treloadPreview: function() {\n\t\tBackbone.$( '#qazana-preview-loading' ).show();\n\n\t\tthis.$preview[0].contentWindow.location.reload( true );\n\t},\n\n\tclearPage: function() {\n\t\tthis.getClearPageDialog().show();\n\t},\n\n\tchangeDeviceMode: function( newDeviceMode ) {\n\t\tvar oldDeviceMode = this.channels.deviceMode.request( 'currentMode' );\n\n\t\tif ( oldDeviceMode === newDeviceMode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tBackbone.$( 'body' )\n\t\t\t.removeClass( 'qazana-device-' + oldDeviceMode )\n\t\t\t.addClass( 'qazana-device-' + newDeviceMode );\n\n\t\tthis.channels.deviceMode\n\t\t\t.reply( 'previousMode', oldDeviceMode )\n\t\t\t.reply( 'currentMode', newDeviceMode )\n\t\t\t.trigger( 'change' );\n\t},\n\n\tenqueueTypographyFonts: function() {\n\t\tvar self = this,\n\t\t\ttypographyScheme = this.schemes.getScheme( 'typography' );\n\n\t\t_.each( typographyScheme.items, function( item ) {\n\t\t\tself.helpers.enqueueFont( item.value.font_family );\n\t\t} );\n\t},\n\n\ttranslate: function( stringKey, templateArgs, i18nStack ) {\n\t\tif ( ! i18nStack ) {\n\t\t\ti18nStack = this.config.i18n;\n\t\t}\n\n\t\tvar string = i18nStack[ stringKey ];\n\n\t\tif ( undefined === string ) {\n\t\t\tstring = stringKey;\n\t\t}\n\n\t\tif ( templateArgs ) {\n\t\t\tstring = string.replace( /{(\\d+)}/g, function( match, number ) {\n\t\t\t\treturn undefined !== templateArgs[ number ] ? templateArgs[ number ] : match;\n\t\t\t} );\n\t\t}\n\n\t\treturn string;\n\t},\n\n\tcompareVersions: function( versionA, versionB, operator ) {\n\t\tvar prepareVersion = function( version ) {\n\t\t\tversion = version + '';\n\n\t\t\treturn version.replace( /[^\\d.]+/, '.-1.' );\n\t\t};\n\n\t\tversionA  = prepareVersion( versionA );\n\t\tversionB = prepareVersion( versionB );\n\n\t\tif ( versionA === versionB ) {\n\t\t\treturn ! operator || /^={2,3}$/.test( operator );\n\t\t}\n\n\t\tvar versionAParts = versionA.split( '.' ).map( Number ),\n\t\t\tversionBParts = versionB.split( '.' ).map( Number ),\n\t\t\tlongestVersionParts = Math.max( versionAParts.length, versionBParts.length );\n\n\t\tfor ( var i = 0; i < longestVersionParts; i++ ) {\n\t\t\tvar valueA = versionAParts[ i ] || 0,\n\t\t\t\tvalueB = versionBParts[ i ] || 0;\n\n\t\t\tif ( valueA !== valueB ) {\n\t\t\t\treturn this.conditions.compare( valueA, valueB, operator );\n\t\t\t}\n\t\t}\n\t},\n} );\n\nmodule.exports = ( window.qazana = new App() ).start();\n",
    "var EditModeItemView;\n\nEditModeItemView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-mode-switcher-content',\n\n\tid: 'qazana-mode-switcher-inner',\n\n\tui: {\n\t\tpreviewButton: '#qazana-mode-switcher-preview-input',\n\t\tpreviewLabel: '#qazana-mode-switcher-preview',\n\t\tpreviewLabelA11y: '#qazana-mode-switcher-preview .qazana-screen-only'\n\t},\n\n\tevents: {\n\t\t'change @ui.previewButton': 'onPreviewButtonChange'\n\t},\n\n\tinitialize: function() {\n\t\tthis.listenTo( qazana.channels.dataEditMode, 'switch', this.onEditModeChanged );\n\t},\n\n\tgetCurrentMode: function() {\n\t\treturn this.ui.previewButton.is( ':checked' ) ? 'preview' : 'edit';\n\t},\n\n\tsetMode: function( mode ) {\n\t\tthis.ui.previewButton\n\t\t\t.prop( 'checked', 'preview' === mode )\n\t\t\t.trigger( 'change' );\n\t},\n\n\ttoggleMode: function() {\n\t\tthis.setMode( this.ui.previewButton.prop( 'checked' ) ? 'edit' : 'preview' );\n\t},\n\n\tonRender: function() {\n\t\tthis.onEditModeChanged();\n\t},\n\n\tonPreviewButtonChange: function() {\n\t\tqazana.changeEditMode( this.getCurrentMode() );\n\t},\n\n\tonEditModeChanged: function() {\n\t\tvar activeMode = qazana.channels.dataEditMode.request( 'activeMode' ),\n\t\t\ttitle = qazana.translate( 'preview' === activeMode ? 'back_to_editor' : 'preview' );\n\n\t\tthis.ui.previewLabel.attr( 'title', title );\n\t\tthis.ui.previewLabelA11y.text( title );\n\t}\n} );\n\nmodule.exports = EditModeItemView;\n",
    "var PanelFooterItemView;\n\nPanelFooterItemView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-panel-footer-content',\n\n\ttagName: 'nav',\n\n\tid: 'qazana-panel-footer-tools',\n\n\tpossibleRotateModes: [ 'portrait', 'landscape' ],\n\n\tui: {\n\t\tmenuButtons: '.qazana-panel-footer-tool',\n\t\tdeviceModeIcon: '#qazana-panel-footer-responsive > i',\n\t\tdeviceModeButtons: '#qazana-panel-footer-responsive .qazana-panel-footer-sub-menu-item',\n\t\tbuttonSave: '#qazana-panel-footer-save',\n\t\tbuttonSaveButton: '#qazana-panel-footer-save .qazana-button',\n\t\tbuttonPublish: '#qazana-panel-footer-publish',\n\t\twatchTutorial: '#qazana-panel-footer-watch-tutorial',\n\t\tshowTemplates: '#qazana-panel-footer-templates-modal',\n\t\tsaveTemplate: '#qazana-panel-footer-save-template',\n\t\thistory: '#qazana-panel-footer-history'\n\t},\n\n\tevents: {\n\t\t'click @ui.deviceModeButtons': 'onClickResponsiveButtons',\n\t\t'click @ui.buttonSave': 'onClickButtonSave',\n\t\t'click @ui.buttonPublish': 'onClickButtonPublish',\n\t\t'click @ui.watchTutorial': 'onClickWatchTutorial',\n\t\t'click @ui.showTemplates': 'onClickShowTemplates',\n\t\t'click @ui.saveTemplate': 'onClickSaveTemplate',\n\t\t'click @ui.history': 'onClickHistory'\n\t},\n\n\tinitialize: function() {\n\t\tthis._initDialog();\n\n\t\tthis.listenTo( qazana.channels.editor, 'status:change', this.onEditorChanged )\n\t\t\t.listenTo( qazana.channels.deviceMode, 'change', this.onDeviceModeChange );\n\t},\n\n\t_initDialog: function() {\n\t\tvar dialog;\n\n\t\tthis.getDialog = function() {\n\t\t\tif ( ! dialog ) {\n\t\t\t\tvar $ = Backbone.$,\n\t\t\t\t\t$dialogMessage = $( '<div>', {\n\t\t\t\t\t\t'class': 'qazana-dialog-message'\n\t\t\t\t\t} ),\n\t\t\t\t\t$messageIcon = $( '<i>', {\n\t\t\t\t\t\t'class': 'fa fa-check-circle'\n\t\t\t\t\t} ),\n\t\t\t\t\t$messageText = $( '<div>', {\n\t\t\t\t\t\t'class': 'qazana-dialog-message-text'\n\t\t\t\t\t} ).text( qazana.translate( 'saved' ) );\n\n\t\t\t\t$dialogMessage.append( $messageIcon, $messageText );\n\n\t\t\t\tdialog = qazana.dialogsManager.createWidget( 'simple', {\n\t\t\t\t\tid: 'qazana-saved-popup',\n\t\t\t\t\tposition: {\n\t\t\t\t\t\telement: 'message',\n\t\t\t\t\t\tof: 'widget'\n\t\t\t\t\t},\n\t\t\t\t\thide: {\n\t\t\t\t\t\tauto: true,\n\t\t\t\t\t\tautoDelay: 1500\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tdialog.setMessage( $dialogMessage );\n\t\t\t}\n\n\t\t\treturn dialog;\n\t\t};\n\t},\n\n\t_publishBuilder: function() {\n\t\tvar self = this;\n\n\t\tvar options = {\n\t\t\tstatus: 'publish',\n\t\t\tonSuccess: function() {\n\t\t\t\tself.getDialog().show();\n\n\t\t\t\tself.ui.buttonSaveButton.removeClass( 'qazana-button-state' );\n\n\t\t\t\tNProgress.done();\n\t\t\t}\n\t\t};\n\n\t\tself.ui.buttonSaveButton.addClass( 'qazana-button-state' );\n\n\t\tNProgress.start();\n\n\t\tqazana.saveEditor( options );\n\t},\n\n\t_saveBuilderDraft: function() {\n\t\tqazana.saveEditor();\n\t},\n\n\tgetDeviceModeButton: function( deviceMode ) {\n\t\treturn this.ui.deviceModeButtons.filter( '[data-device-mode=\"' + deviceMode + '\"]' );\n\t},\n\n\tonPanelClick: function( event ) {\n\t\tvar $target = Backbone.$( event.target ),\n\t\t\tisClickInsideOfTool = $target.closest( '.qazana-panel-footer-sub-menu-wrapper' ).length;\n\n\t\tif ( isClickInsideOfTool ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $tool = $target.closest( '.qazana-panel-footer-tool' ),\n\t\t\tisClosedTool = $tool.length && ! $tool.hasClass( 'qazana-open' );\n\n\t\tthis.ui.menuButtons.removeClass( 'qazana-open' );\n\n\t\tif ( isClosedTool ) {\n\t\t\t$tool.addClass( 'qazana-open' );\n\t\t}\n\t},\n\n\tonEditorChanged: function() {\n\t\tthis.ui.buttonSave.toggleClass( 'qazana-save-active', qazana.isEditorChanged() );\n\t},\n\n\tonDeviceModeChange: function() {\n\t\tvar previousDeviceMode = qazana.channels.deviceMode.request( 'previousMode' ),\n\t\t\tcurrentDeviceMode = qazana.channels.deviceMode.request( 'currentMode' );\n\n\t\tthis.getDeviceModeButton( previousDeviceMode ).removeClass( 'active' );\n\n\t\tthis.getDeviceModeButton( currentDeviceMode ).addClass( 'active' );\n\n\t\t// Change the footer icon\n\t\tthis.ui.deviceModeIcon.removeClass( 'eicon-device-' + previousDeviceMode ).addClass( 'eicon-device-' + currentDeviceMode );\n\t},\n\n\tonClickButtonSave: function() {\n\t\t//this._saveBuilderDraft();\n\t\tthis._publishBuilder();\n\t},\n\n\tonClickButtonPublish: function( event ) {\n\t\t// Prevent click on save button\n\t\tevent.stopPropagation();\n\n\t\tthis._publishBuilder();\n\t},\n\n\tonClickResponsiveButtons: function( event ) {\n\t\tvar $clickedButton = this.$( event.currentTarget ),\n\t\t\tnewDeviceMode = $clickedButton.data( 'device-mode' );\n\n\t\tqazana.changeDeviceMode( newDeviceMode );\n\t},\n\n\tonClickWatchTutorial: function() {\n\t\tqazana.introduction.startIntroduction();\n\t},\n\n\tonClickShowTemplates: function() {\n\t\tqazana.templates.showTemplatesModal();\n\t},\n\n\tonClickSaveTemplate: function() {\n\t\tqazana.templates.startModal( {\n\t\t\tonReady: function() {\n\t\t\t\tqazana.templates.getLayout().showSaveTemplateView();\n\t\t\t}\n\t\t} );\n\t},\n\n\tonClickHistory: function() {\n\t\tif ( 'historyPage' !== qazana.getPanelView().getCurrentPageName() ) {\n\t\t\tqazana.getPanelView().setPage( 'historyPage' );\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\t_.defer( function() {\n\t\t\tqazana.getPanelView().$el.on( 'click', _.bind( self.onPanelClick, self ) );\n\t\t} );\n\t}\n} );\n\nmodule.exports = PanelFooterItemView;\n",
    "var PanelHeaderItemView;\n\nPanelHeaderItemView = Marionette.ItemView.extend( {\n    template: '#tmpl-qazana-panel-header',\n\n    id: 'qazana-panel-header',\n\n    ui: {\n        menuButton: '#qazana-panel-header-menu-button',\n        menuDropButton: '#qazana-panel-header-nav-button',\n        title: '#qazana-panel-header-title',\n        addButton: '#qazana-panel-header-add-button',\n        buttonSave: '#qazana-panel-header-save',\n        buttonSaveButton: '#qazana-panel-header-save .qazana-button'\n    },\n\n    events: {\n        'click @ui.addButton': 'onClickAdd',\n        'click @ui.menuButton': 'onClickMenu',\n        'click @ui.menuDropButton': 'onClickMenuDrop',\n        'click @ui.buttonSave': 'onClickButtonSave',\n        'click @ui.buttonPublish': 'onClickButtonPublish'\n    },\n\n    initialize: function() {\n        this._initDialog();\n        this.onClickMenuDrop();\n\n        this.listenTo( qazana.channels.editor, 'status:change', this.onEditorChanged )\n\t\t\t.listenTo( qazana.channels.deviceMode, 'status:change', this.onDeviceModeChange );\n    },\n\n    _initDialog: function() {\n\t\tvar dialog;\n\n\t\tthis.getDialog = function() {\n\t\t\tif ( ! dialog ) {\n\t\t\t\tvar $ = Backbone.$,\n\t\t\t\t\t$dialogMessage = $( '<div>', {\n\t\t\t\t\t\t'class': 'qazana-dialog-message'\n\t\t\t\t\t} ),\n\t\t\t\t\t$messageIcon = $( '<i>', {\n\t\t\t\t\t\t'class': 'fa fa-check-circle'\n\t\t\t\t\t} ),\n\t\t\t\t\t$messageText = $( '<div>', {\n\t\t\t\t\t\t'class': 'qazana-dialog-message-text'\n\t\t\t\t\t} ).text( qazana.translate( 'saved' ) );\n\n\t\t\t\t$dialogMessage.append( $messageIcon, $messageText );\n\n\t\t\t\tdialog = qazana.dialogsManager.createWidget( 'simple', {\n\t\t\t\t\tid: 'qazana-saved-popup',\n\t\t\t\t\tposition: {\n\t\t\t\t\t\telement: 'message',\n\t\t\t\t\t\tof: 'widget'\n\t\t\t\t\t},\n\t\t\t\t\thide: {\n\t\t\t\t\t\tauto: true,\n\t\t\t\t\t\tautoDelay: 1500\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tdialog.setMessage( $dialogMessage );\n\t\t\t}\n\n\t\t\treturn dialog;\n\t\t};\n\t},\n\n    _publishBuilder: function() {\n        var self = this;\n\n        var options = {\n            status: 'publish',\n            onSuccess: function() {\n                self.getDialog().show();\n                self.ui.buttonSaveButton.removeClass( 'qazana-button-state' );\n                NProgress.done();\n            }\n        };\n\n        self.ui.buttonSaveButton.addClass( 'qazana-button-state' );\n\n        NProgress.start();\n\n        qazana.saveEditor( options );\n    },\n\n    _saveBuilderDraft: function() {\n        qazana.saveEditor();\n    },\n\n    setTitle: function( title ) {\n        this.ui.title.html( title );\n    },\n\n    onClickAdd: function() {\n        qazana.getPanelView().setPage( 'elements' );\n    },\n\n    onClickMenu: function() {\n        var panel = qazana.getPanelView(),\n            currentPanelPageName = panel.getCurrentPageName(),\n            nextPage = 'menu' === currentPanelPageName ? 'elements' : 'menu';\n\n        panel.setPage( nextPage );\n    },\n\n    onClickMenuDrop: function() {\n\n        var $ = Backbone.$;\n\n        // Delay showing of main nav with hoverIntent\n        $( 'ul.qazana-panel-header-nav > li' ).hoverIntent(\n            function() { $( this ).addClass( 'qazana-menu-hover' ); },\n            function() { $( this ).removeClass( 'qazana-menu-hover' ); }\n        );\n    },\n\n    onEditorChanged: function() {\n        this.ui.buttonSave.toggleClass( 'qazana-save-active', qazana.isEditorChanged() );\n    },\n\n    onClickButtonSave: function() {\n        //this._saveBuilderDraft();\n        this._publishBuilder();\n    },\n\n    onClickButtonPublish: function( event ) {\n        // Prevent click on save button\n        event.stopPropagation();\n\n        this._publishBuilder();\n    }\n\n} );\n\nmodule.exports = PanelHeaderItemView;\n",
    "var ControlsStack = require( 'qazana-views/controls-stack' ),\n\tEditorView;\n\nEditorView = ControlsStack.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-editor-content' ),\n\n\tid: 'qazana-panel-page-editor',\n\n\tchildViewContainer: '#qazana-controls',\n\n\tchildViewOptions: function() {\n\t\treturn {\n\t\t\telementSettingsModel: this.model.get( 'settings' ),\n\t\t\telementEditSettings: this.model.get( 'editSettings' )\n\t\t};\n\t},\n\n\topenActiveSection: function() {\n\t\tControlsStack.prototype.openActiveSection.apply( this, arguments );\n\n\t\tqazana.channels.editor.trigger( 'section:activated', this.activeSection, this );\n\t},\n\n\tisVisibleSectionControl: function( sectionControlModel ) {\n\t\treturn ControlsStack.prototype.isVisibleSectionControl.apply( this, arguments ) && qazana.helpers.isActiveControl( sectionControlModel, this.model.get( 'settings' ).attributes );\n\t},\n\n\tscrollToEditedElement: function() {\n\t\tqazana.helpers.scrollToView( this.getOption( 'editedElementView' ) );\n\t},\n\n\tonBeforeRender: function() {\n\t\tvar controls = qazana.getElementControls( this.model );\n\n\t\tif ( ! controls ) {\n\t\t\tthrow new Error( 'Editor controls not found' );\n\t\t}\n\n\t\t// Create new instance of that collection\n\t\tthis.collection = new Backbone.Collection( _.values( controls ) );\n\t},\n\n\tonDestroy: function() {\n\t\tvar editedElementView = this.getOption( 'editedElementView' );\n\n\t\tif ( editedElementView ) {\n\t\t\teditedElementView.$el.removeClass( 'qazana-element-editable' );\n\t\t}\n\n\t\tthis.model.trigger( 'editor:close' );\n\n\t\tthis.triggerMethod( 'editor:destroy' );\n\t},\n\n\tonRender: function() {\n\t\tvar editedElementView = this.getOption( 'editedElementView' );\n\n\t\tif ( editedElementView ) {\n\t\t\teditedElementView.$el.addClass( 'qazana-element-editable' );\n\t\t}\n\t},\n\n\tonDeviceModeChange: function() {\n\t\tControlsStack.prototype.onDeviceModeChange.apply( this, arguments );\n\n\t\tthis.scrollToEditedElement();\n\t},\n\n\tonChildviewSettingsChange: function( childView ) {\n\t\tvar editedElementView = this.getOption( 'editedElementView' ),\n\t\t\teditedElementType = editedElementView.model.get( 'elType' );\n\n\t\tif ( 'widget' === editedElementType ) {\n\t\t\teditedElementType = editedElementView.model.get( 'widgetType' );\n\t\t}\n\n\t\tqazana.channels.editor\n\t\t\t.trigger( 'change', childView, editedElementView )\n\t\t\t.trigger( 'change:' + editedElementType, childView, editedElementView )\n\t\t\t.trigger( 'change:' + editedElementType + ':' + childView.model.get( 'name' ), childView, editedElementView );\n\t}\n} );\n\nmodule.exports = EditorView;\n",
    "var PanelElementsCategory = require( '../models/element' ),\n\tPanelElementsCategoriesCollection;\n\nPanelElementsCategoriesCollection = Backbone.Collection.extend( {\n\tmodel: PanelElementsCategory\n} );\n\nmodule.exports = PanelElementsCategoriesCollection;\n",
    "var PanelElementsElementModel = require( '../models/element' ),\n\tPanelElementsElementsCollection;\n\nPanelElementsElementsCollection = Backbone.Collection.extend( {\n\tmodel: PanelElementsElementModel/*,\n\tcomparator: 'title'*/\n} );\n\nmodule.exports = PanelElementsElementsCollection;\n",
    "var PanelElementsCategoriesCollection = require( './collections/categories' ),\n\tPanelElementsElementsCollection = require( './collections/elements' ),\n\tPanelElementsCategoriesView = require( './views/categories' ),\n\tPanelElementsElementsView = qazana.modules.templateLibrary.ElementsCollectionView,\n\tPanelElementsSearchView = require( './views/search' ),\n\tPanelElementsGlobalView = require( './views/global' ),\n\tPanelElementsLayoutView;\n\nPanelElementsLayoutView = Marionette.LayoutView.extend( {\n\ttemplate: '#tmpl-qazana-panel-elements',\n\n\tregions: {\n\t\telements: '#qazana-panel-elements-wrapper',\n\t\tsearch: '#qazana-panel-elements-search-area'\n\t},\n\n\tui: {\n\t\ttabs: '.qazana-panel-navigation-tab'\n\t},\n\n\tevents: {\n\t\t'click @ui.tabs': 'onTabClick'\n\t},\n\n\tregionViews: {},\n\n\telementsCollection: null,\n\n\tcategoriesCollection: null,\n\n\tinitialize: function() {\n\t\tthis.listenTo( qazana.channels.panelElements, 'element:selected', this.destroy );\n\n\t\tthis.initElementsCollection();\n\n\t\tthis.initCategoriesCollection();\n\n\t\tthis.initRegionViews();\n\t},\n\n\tinitRegionViews: function() {\n\t\tvar regionViews = {\n\t\t\telements: {\n\t\t\t\tregion: this.elements,\n\t\t\t\tview: PanelElementsElementsView,\n\t\t\t\toptions: { collection: this.elementsCollection }\n\t\t\t},\n\t\t\tcategories: {\n\t\t\t\tregion: this.elements,\n\t\t\t\tview: PanelElementsCategoriesView,\n\t\t\t\toptions: { collection: this.categoriesCollection }\n\t\t\t},\n\t\t\tsearch: {\n\t\t\t\tregion: this.search,\n\t\t\t\tview: PanelElementsSearchView\n\t\t\t},\n\t\t\tglobal: {\n\t\t\t\tregion: this.elements,\n\t\t\t\tview: PanelElementsGlobalView\n\t\t\t}\n\t\t};\n\n\t\tthis.regionViews = qazana.hooks.applyFilters( 'panel/elements/regionViews', regionViews );\n\t},\n\n\tinitElementsCollection: function() {\n\t\tvar elementsCollection = new PanelElementsElementsCollection(),\n\t\t\tsectionConfig = qazana.config.elements.section;\n\n\t\telementsCollection.add( {\n\t\t\ttitle: qazana.translate( 'inner_section' ),\n\t\t\telType: 'section',\n\t\t\tcategories: [ 'basic' ],\n\t\t\ticon: sectionConfig.icon\n\t\t} );\n\n\t\t// TODO: Change the array from server syntax, and no need each loop for initialize\n\t\t_.each( qazana.config.widgets, function( element ) {\n\t\t\telementsCollection.add( {\n\t\t\t\ttitle: element.title,\n\t\t\t\telType: element.elType,\n\t\t\t\tcategories: element.categories,\n\t\t\t\tkeywords: element.keywords,\n\t\t\t\ticon: element.icon,\n\t\t\t\twidgetType: element.widget_type,\n\t\t\t\tcustom: element.custom\n\t\t\t} );\n\t\t} );\n\n\t\tthis.elementsCollection = elementsCollection;\n\t},\n\n\tinitCategoriesCollection: function() {\n\t\tvar categories = {};\n\n\t\tthis.elementsCollection.each( function( element ) {\n\t\t\t_.each( element.get( 'categories' ), function( category ) {\n\t\t\t\tif ( ! categories[ category ] ) {\n\t\t\t\t\tcategories[ category ] = [];\n\t\t\t\t}\n\n\t\t\t\tcategories[ category ].push( element );\n\t\t\t} );\n\t\t} );\n\n\t\tvar categoriesCollection = new PanelElementsCategoriesCollection();\n\n\t\t_.each( qazana.config.elements_categories, function( categoryConfig, categoryName ) {\n\t\t\tif ( ! categories[ categoryName ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcategoriesCollection.add( {\n\t\t\t\tname: categoryName,\n\t\t\t\ttitle: categoryConfig.title,\n\t\t\t\ticon: categoryConfig.icon,\n\t\t\t\titems: categories[ categoryName ]\n\t\t\t} );\n\t\t} );\n\n\t\tthis.categoriesCollection = categoriesCollection;\n\t},\n\n\tactivateTab: function( tabName ) {\n\t\tthis.ui.tabs\n\t\t\t.removeClass( 'active' )\n\t\t\t.filter( '[data-view=\"' + tabName + '\"]' )\n\t\t\t.addClass( 'active' );\n\n\t\tthis.showView( tabName );\n\t},\n\n\tshowView: function( viewName ) {\n\t\tvar viewDetails = this.regionViews[ viewName ],\n\t\t\toptions = viewDetails.options || {};\n\n\t\tviewDetails.region.show( new viewDetails.view( options ) );\n\t},\n\n\tclearSearchInput: function() {\n\t\tthis.getChildView( 'search' ).clearInput();\n\t},\n\n\tchangeFilter: function( filterValue ) {\n\t\tqazana.channels.panelElements\n\t\t\t.reply( 'filter:value', filterValue )\n\t\t\t.trigger( 'filter:change' );\n\t},\n\n\tclearFilters: function() {\n\t\tthis.changeFilter( null );\n\t\tthis.clearSearchInput();\n\t},\n\n\tonChildviewChildrenRender: function() {\n\t\tthis.updateElementsScrollbar();\n\t},\n\n\tonChildviewSearchChangeInput: function( child ) {\n\t\tthis.changeFilter( child.ui.input.val(), 'search' );\n\t},\n\n\tonDestroy: function() {\n\t\tqazana.channels.panelElements.reply( 'filter:value', null );\n\t},\n\n\tonShow: function() {\n\t\tthis.showView( 'categories' );\n\n\t\tthis.showView( 'search' );\n\t},\n\n\tonTabClick: function( event ) {\n\t\tthis.activateTab( event.currentTarget.dataset.view );\n\t},\n\n\tupdateElementsScrollbar: function() {\n\t\tqazana.channels.data.trigger( 'scrollbar:update' );\n\t}\n} );\n\nmodule.exports = PanelElementsLayoutView;\n",
    "var PanelElementsElementModel;\n\nPanelElementsElementModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\ttitle: '',\n\t\tcategories: [],\n\t\tkeywords: [],\n\t\ticon: '',\n\t\telType: 'widget',\n\t\twidgetType: ''\n\t}\n} );\n\nmodule.exports = PanelElementsElementModel;\n",
    "var PanelElementsCategoryView = require( './category' ),\n\tPanelElementsCategoriesView;\n\nPanelElementsCategoriesView = Marionette.CompositeView.extend( {\n\ttemplate: '#tmpl-qazana-panel-categories',\n\n\tchildView: PanelElementsCategoryView,\n\n\tchildViewContainer: '#qazana-panel-categories',\n\n\tid: 'qazana-panel-elements-categories',\n\n\tinitialize: function() {\n\t\tthis.listenTo( qazana.channels.panelElements, 'filter:change', this.onPanelElementsFilterChange );\n\t},\n\n\tonPanelElementsFilterChange: function() {\n\t\tqazana.getPanelView().getCurrentPageView().showView( 'elements' );\n\t}\n} );\n\nmodule.exports = PanelElementsCategoriesView;\n",
    "var PanelElementsElementsCollection = require( '../collections/elements' ),\n\tPanelElementsCategoryView;\n\nPanelElementsCategoryView = Marionette.CompositeView.extend( {\n\ttemplate: '#tmpl-qazana-panel-elements-category',\n\n\tclassName: 'qazana-panel-category',\n\n\tchildView: require( 'qazana-panel/pages/elements/views/element' ),\n\n\tchildViewContainer: '.panel-elements-category-items',\n\n\tinitialize: function() {\n\t\tthis.collection = new PanelElementsElementsCollection( this.model.get( 'items' ) );\n\t}\n} );\n\nmodule.exports = PanelElementsCategoryView;\n",
    "var PanelElementsElementView;\n\nPanelElementsElementView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-element-library-element',\n\n\tclassName: 'qazana-element-wrapper',\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\tthis.$el.html5Draggable( {\n\n\t\t\tonDragStart: function() {\n\t\t\t\tqazana.channels.panelElements\n\t\t\t\t\t.reply( 'element:selected', self )\n\t\t\t\t\t.trigger( 'element:drag:start' );\n\t\t\t},\n\n\t\t\tonDragEnd: function() {\n\t\t\t\tqazana.channels.panelElements.trigger( 'element:drag:end' );\n\t\t\t},\n\n\t\t\tgroups: [ 'qazana-element' ]\n\t\t} );\n\t}\n} );\n\nmodule.exports = PanelElementsElementView;\n",
    "var PanelElementsElementsView;\n\nPanelElementsElementsView = Marionette.CollectionView.extend( {\n\tchildView: require( 'qazana-panel/pages/elements/views/element' ),\n\n\tid: 'qazana-panel-elements',\n\n\tinitialize: function() {\n\t\tthis.listenTo( qazana.channels.panelElements, 'filter:change', this.onFilterChanged );\n\t},\n\n\tfilter: function( childModel ) {\n\t\tvar filterValue = qazana.channels.panelElements.request( 'filter:value' );\n\n\t\tif ( ! filterValue ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( -1 !== childModel.get( 'title' ).toLowerCase().indexOf( filterValue.toLowerCase() ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn _.any( childModel.get( 'keywords' ), function( keyword ) {\n\t\t\treturn ( -1 !== keyword.toLowerCase().indexOf( filterValue.toLowerCase() ) );\n\t\t} );\n\t},\n\n\tonFilterChanged: function() {\n\t\tvar filterValue = qazana.channels.panelElements.request( 'filter:value' );\n\n\t\tif ( ! filterValue ) {\n\t\t\tthis.onFilterEmpty();\n\t\t}\n\n\t\tthis._renderChildren();\n\n\t\tthis.triggerMethod( 'children:render' );\n\t},\n\n\tonFilterEmpty: function() {\n\t\tqazana.getPanelView().getCurrentPageView().showView( 'categories' );\n\t}\n} );\n\nmodule.exports = PanelElementsElementsView;\n",
    "module.exports = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-panel-global',\n\n\tid: 'qazana-panel-global',\n\n\tinitialize: function() {\n\t\tqazana.getPanelView().getCurrentPageView().search.reset();\n\t},\n\n\tonDestroy: function() {\n\t\tqazana.getPanelView().getCurrentPageView().showView( 'search' );\n\t}\n} );\n",
    "var PanelElementsSearchView;\n\nPanelElementsSearchView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-panel-element-search',\n\n\tid: 'qazana-panel-elements-search-wrapper',\n\n\tui: {\n\t\tinput: 'input'\n\t},\n\n\tevents: {\n\t\t'keyup @ui.input': 'onInputChanged'\n\t},\n\n\tonInputChanged: function( event ) {\n\t\tvar ESC_KEY = 27;\n\n\t\tif ( ESC_KEY === event.keyCode ) {\n\t\t\tthis.clearInput();\n\t\t}\n\n\t\tthis.triggerMethod( 'search:change:input' );\n\t},\n\n\tclearInput: function() {\n\t\tthis.ui.input.val( '' );\n\t}\n} );\n\nmodule.exports = PanelElementsSearchView;\n",
    "var PanelMenuItemView = require( 'qazana-panel/pages/menu/views/item' ),\n\tPanelMenuPageView;\n\nPanelMenuPageView = Marionette.CollectionView.extend( {\n\tid: 'qazana-panel-page-menu',\n\n\tchildView: PanelMenuItemView,\n\n\tinitialize: function() {\n\t\tthis.collection = PanelMenuPageView.getItems();\n\t},\n\n\tonChildviewClick: function( childView ) {\n\t\tvar menuItemType = childView.model.get( 'type' );\n\n\t\tswitch ( menuItemType ) {\n\t\t\tcase 'page':\n\t\t\t\tvar pageName = childView.model.get( 'pageName' ),\n\t\t\t\t\tpageTitle = childView.model.get( 'title' );\n\n\t\t\t\tqazana.getPanelView().setPage( pageName, pageTitle );\n\t\t\t\tbreak;\n\n\t\t\tcase 'link':\n\t\t\t\tvar link = childView.model.get( 'link' ),\n\t\t\t\t\tisNewTab = childView.model.get( 'newTab' );\n\n\t\t\t\tif ( isNewTab ) {\n\t\t\t\t\topen( link, '_blank' );\n\t\t\t\t} else {\n\t\t\t\t\tlocation.href = childView.model.get( 'link' );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvar callback = childView.model.get( 'callback' );\n\n\t\t\t\tif ( _.isFunction( callback ) ) {\n\t\t\t\t\tcallback.call( childView );\n\t\t\t\t}\n\t\t}\n\t}\n}, {\n\titems: null,\n\n\tinitItems: function() {\n\t\tthis.items = new Backbone.Collection( [\n\t\t\t{\n\t\t\t\tname: 'global-colors',\n\t\t\t\ticon: 'fa fa-paint-brush',\n\t\t\t\ttitle: qazana.translate( 'global_colors' ),\n\t\t\t\ttype: 'page',\n\t\t\t\tpageName: 'colorScheme'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'global-fonts',\n\t\t\t\ticon: 'fa fa-font',\n\t\t\t\ttitle: qazana.translate( 'global_fonts' ),\n\t\t\t\ttype: 'page',\n\t\t\t\tpageName: 'typographyScheme'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'color-picker',\n\t\t\t\ticon: 'fa fa-eyedropper',\n\t\t\t\ttitle: qazana.translate( 'color_picker' ),\n\t\t\t\ttype: 'page',\n\t\t\t\tpageName: 'colorPickerScheme'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'clear-page',\n\t\t\t\ticon: 'fa fa-eraser',\n\t\t\t\ttitle: qazana.translate( 'clear_page' ),\n\t\t\t\tcallback: function() {\n\t\t\t\t\tqazana.clearPage();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'qazana-settings',\n\t\t\t\ticon: 'fa fa-cogs',\n\t\t\t\ttitle: qazana.translate( 'qazana_settings' ),\n\t\t\t\ttype: 'link',\n\t\t\t\tlink: qazana.config.settings_page_link,\n\t\t\t\tnewTab: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'about-qazana',\n\t\t\t\ticon: 'fa fa-info-circle',\n\t\t\t\ttitle: qazana.translate( 'about_qazana' ),\n\t\t\t\ttype: 'link',\n\t\t\t\tlink: qazana.config.qazana_site,\n\t\t\t\tnewTab: true\n\t\t\t}\n\t\t] );\n\t},\n\n\tgetItems: function() {\n\t\tif ( ! this.items ) {\n\t\t\tthis.initItems();\n\t\t}\n\n\t\treturn this.items;\n\t},\n\n\taddItem: function( itemData, before ) {\n\t\tvar items = this.getItems(),\n\t\t\toptions = {};\n\n\t\tif ( before ) {\n\t\t\tvar beforeItem = items.findWhere( { name: before } );\n\n\t\t\tif ( beforeItem ) {\n\t\t\t\toptions.at = items.indexOf( beforeItem );\n\t\t\t}\n\t\t}\n\n\t\titems.add( itemData, options );\n\t}\n\n} );\n\nmodule.exports = PanelMenuPageView;\n",
    "var PanelMenuItemView;\n\nPanelMenuItemView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-panel-menu-item',\n\n\tclassName: 'qazana-panel-menu-item',\n\n\ttriggers: {\n\t\tclick: 'click'\n\t}\n} );\n\nmodule.exports = PanelMenuItemView;\n",
    "var childViewTypes = {\n\t\tcolor: require( 'qazana-panel/pages/schemes/items/color' ),\n\t\ttypography: require( 'qazana-panel/pages/schemes/items/typography' )\n\t},\n\tPanelSchemeBaseView;\n\nPanelSchemeBaseView = Marionette.CompositeView.extend( {\n\tid: function() {\n\t\treturn 'qazana-panel-scheme-' + this.getType();\n\t},\n\n\tclassName: function() {\n\t\treturn 'qazana-panel-scheme qazana-panel-scheme-' + this.getUIType();\n\t},\n\n\tchildViewContainer: '.qazana-panel-scheme-items',\n\n\tgetTemplate: function() {\n\t\treturn Marionette.TemplateCache.get( '#tmpl-qazana-panel-schemes-' + this.getType() );\n\t},\n\n\tgetChildView: function() {\n\t\treturn childViewTypes[ this.getUIType() ];\n\t},\n\n\tgetUIType: function() {\n\t\treturn this.getType();\n\t},\n\n\tui: function() {\n\t\treturn {\n\t\t\tsaveButton: '.qazana-panel-scheme-save .qazana-button',\n\t\t\tdiscardButton: '.qazana-panel-scheme-discard .qazana-button',\n\t\t\tresetButton: '.qazana-panel-scheme-reset .qazana-button'\n\t\t};\n\t},\n\n\tevents: function() {\n\t\treturn {\n\t\t\t'click @ui.saveButton': 'saveScheme',\n\t\t\t'click @ui.discardButton': 'discardScheme',\n\t\t\t'click @ui.resetButton': 'setDefaultScheme'\n\t\t};\n\t},\n\n\tinitialize: function() {\n\t\tthis.model = new Backbone.Model();\n\n\t\tthis.resetScheme();\n\t},\n\n\tgetType: function() {},\n\n\tgetScheme: function() {\n\t\treturn qazana.schemes.getScheme( this.getType() );\n\t},\n\n\tchangeChildrenUIValues: function( schemeItems ) {\n\t\tvar self = this;\n\n\t\t_.each( schemeItems, function( value, key ) {\n\t\t\tvar model = self.collection.findWhere( { key: key } ),\n\t\t\t\tchildView = self.children.findByModelCid( model.cid );\n\n\t\t\tchildView.changeUIValue( value );\n\t\t} );\n\t},\n\n\tdiscardScheme: function() {\n\t\tqazana.schemes.resetSchemes( this.getType() );\n\n\t\tthis.onSchemeChange();\n\n\t\tthis.ui.saveButton.prop( 'disabled', true );\n\n\t\tthis._renderChildren();\n\t},\n\n\tsetSchemeValue: function( key, value ) {\n\t\tqazana.schemes.setSchemeValue( this.getType(), key, value );\n\n\t\tthis.onSchemeChange();\n\t},\n\n\tsaveScheme: function() {\n\t\tqazana.schemes.saveScheme( this.getType() );\n\n\t\tthis.ui.saveButton.prop( 'disabled', true );\n\n\t\tthis.resetScheme();\n\n\t\tthis._renderChildren();\n\t},\n\n\tsetDefaultScheme: function() {\n\t\tvar defaultScheme = qazana.config.default_schemes[ this.getType() ].items;\n\n\t\tthis.changeChildrenUIValues( defaultScheme );\n\t},\n\n\tresetItems: function() {\n\t\tthis.model.set( 'items', this.getScheme().items );\n\t},\n\n\tresetCollection: function() {\n\t\tvar items = this.model.get( 'items' );\n\n\t\tthis.collection = new Backbone.Collection();\n\n\t\t_.each( items, _.bind( function( item, key ) {\n\t\t\titem.type = this.getType();\n\t\t\titem.key = key;\n\n\t\t\tthis.collection.add( item );\n\t\t}, this ) );\n\t},\n\n\tresetScheme: function() {\n\t\tthis.resetItems();\n\t\tthis.resetCollection();\n\t},\n\n\tonSchemeChange: function() {\n\t\tqazana.schemes.printSchemesStyle();\n\t},\n\n\tonChildviewValueChange: function( childView, newValue ) {\n\t\tthis.ui.saveButton.removeProp( 'disabled' );\n\n\t\tthis.setSchemeValue( childView.model.get( 'key' ), newValue );\n\t}\n} );\n\nmodule.exports = PanelSchemeBaseView;\n",
    "var PanelSchemeColorsView = require( 'qazana-panel/pages/schemes/colors' ),\n\tPanelSchemeColorPickerView;\n\nPanelSchemeColorPickerView = PanelSchemeColorsView.extend( {\n\tgetType: function() {\n\t\treturn 'color-picker';\n\t},\n\n\tgetUIType: function() {\n\t\treturn 'color';\n\t},\n\n\tonSchemeChange: function() {},\n\n\tgetViewComparator: function() {\n\t\treturn this.orderView;\n\t},\n\n\torderView: function( model ) {\n\t\treturn qazana.helpers.getColorPickerPaletteIndex( model.get( 'key' ) );\n\t}\n} );\n\nmodule.exports = PanelSchemeColorPickerView;\n",
    "var PanelSchemeBaseView = require( 'qazana-panel/pages/schemes/base' ),\n\tPanelSchemeColorsView;\n\nPanelSchemeColorsView = PanelSchemeBaseView.extend( {\n\tui: function() {\n\t\tvar ui = PanelSchemeBaseView.prototype.ui.apply( this, arguments );\n\n\t\tui.systemSchemes = '.qazana-panel-scheme-color-system-scheme';\n\n\t\treturn ui;\n\t},\n\n\tevents: function() {\n\t\tvar events = PanelSchemeBaseView.prototype.events.apply( this, arguments );\n\n\t\tevents[ 'click @ui.systemSchemes' ] = 'onSystemSchemeClick';\n\n\t\treturn events;\n\t},\n\n\tgetType: function() {\n\t\treturn 'color';\n\t},\n\n\tonSystemSchemeClick: function( event ) {\n\t\tvar $schemeClicked = Backbone.$( event.currentTarget ),\n\t\t\tschemeName = $schemeClicked.data( 'schemeName' ),\n\t\t\tscheme = qazana.config.system_schemes[ this.getType() ][ schemeName ].items;\n\n\t\tthis.changeChildrenUIValues( scheme );\n\t}\n} );\n\nmodule.exports = PanelSchemeColorsView;\n",
    "var PanelSchemeDisabledView;\n\nPanelSchemeDisabledView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-panel-schemes-disabled',\n\n\tid: 'qazana-panel-schemes-disabled',\n\n\tclassName: 'qazana-panel-nerd-box',\n\n\tdisabledTitle: '',\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\tdisabledTitle: this.disabledTitle\n\t\t};\n\t}\n} );\n\nmodule.exports = PanelSchemeDisabledView;\n",
    "var PanelSchemeItemView;\n\nPanelSchemeItemView = Marionette.ItemView.extend( {\n\tgetTemplate: function() {\n\t\treturn Marionette.TemplateCache.get( '#tmpl-qazana-panel-scheme-' + this.getUIType() + '-item' );\n\t},\n\n\tclassName: function() {\n\t\treturn 'qazana-panel-scheme-item';\n\t}\n} );\n\nmodule.exports = PanelSchemeItemView;\n",
    "var PanelSchemeItemView = require( 'qazana-panel/pages/schemes/items/base' ),\n\tPanelSchemeColorView;\n\nPanelSchemeColorView = PanelSchemeItemView.extend( {\n\tgetUIType: function() {\n\t\treturn 'color';\n\t},\n\n\tui: {\n\t\tinput: '.qazana-panel-scheme-color-value'\n\t},\n\n\tchangeUIValue: function( newValue ) {\n\t\tthis.ui.input.wpColorPicker( 'color', newValue );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tif ( this.ui.input.wpColorPicker( 'instance' ) ) {\n\t\t\tthis.ui.input.wpColorPicker( 'close' );\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tqazana.helpers.wpColorPicker( this.ui.input, {\n\t\t\tchange: _.bind( function( event, ui ) {\n\t\t\t\tthis.triggerMethod( 'value:change', ui.color.toString() );\n\t\t\t}, this )\n\t\t} );\n\t}\n} );\n\nmodule.exports = PanelSchemeColorView;\n",
    "var PanelSchemeItemView = require( 'qazana-panel/pages/schemes/items/base' ),\n\tPanelSchemeTypographyView;\n\nPanelSchemeTypographyView = PanelSchemeItemView.extend( {\n\tgetUIType: function() {\n\t\treturn 'typography';\n\t},\n\n\tclassName: function() {\n\t\tvar classes = PanelSchemeItemView.prototype.className.apply( this, arguments );\n\n\t\treturn classes + ' qazana-panel-box';\n\t},\n\n\tui: {\n\t\theading: '.qazana-panel-heading',\n\t\tallFields: '.qazana-panel-scheme-typography-item-field',\n\t\tinputFields: 'input.qazana-panel-scheme-typography-item-field',\n\t\tselectFields: 'select.qazana-panel-scheme-typography-item-field',\n\t\tselectFamilyFields: 'select.qazana-panel-scheme-typography-item-field[name=\"font_family\"]'\n\t},\n\n\tevents: {\n\t\t'input @ui.inputFields': 'onFieldChange',\n\t\t'change @ui.selectFields': 'onFieldChange',\n\t\t'click @ui.heading': 'toggleVisibility'\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\tthis.ui.inputFields.add( this.ui.selectFields ).each( function() {\n\t\t\tvar $this = Backbone.$( this ),\n\t\t\t\tname = $this.attr( 'name' ),\n\t\t\t\tvalue = self.model.get( 'value' )[ name ];\n\n\t\t\t$this.val( value );\n\t\t} );\n\n\t\tthis.ui.selectFamilyFields.select2( {\n\t\t\tdir: qazana.config.is_rtl ? 'rtl' : 'ltr'\n\t\t} );\n\t},\n\n\ttoggleVisibility: function() {\n\t\tthis.ui.heading.toggleClass( 'qazana-open' );\n\t},\n\n\tchangeUIValue: function( newValue ) {\n\t\tthis.ui.allFields.each( function() {\n\t\t\tvar $this = Backbone.$( this ),\n\t\t\t\tthisName = $this.attr( 'name' ),\n\t\t\t\tnewFieldValue = newValue[ thisName ];\n\n\t\t\t$this.val( newFieldValue ).trigger( 'change' );\n\t\t} );\n\t},\n\n\tonFieldChange: function( event ) {\n\t\tvar $select = this.$( event.currentTarget ),\n\t\t\tcurrentValue = qazana.schemes.getSchemeValue( 'typography', this.model.get( 'key' ) ).value,\n\t\t\tfieldKey = $select.attr( 'name' );\n\n\t\tcurrentValue[ fieldKey ] = $select.val();\n\n\t\tif ( 'font_family' === fieldKey && ! _.isEmpty( currentValue[ fieldKey ] ) ) {\n\t\t\tqazana.helpers.enqueueFont( currentValue[ fieldKey ] );\n\t\t}\n\n\t\tthis.triggerMethod( 'value:change', currentValue );\n\t}\n} );\n\nmodule.exports = PanelSchemeTypographyView;\n",
    "var PanelSchemeBaseView = require( 'qazana-panel/pages/schemes/base' ),\n\tPanelSchemeTypographyView;\n\nPanelSchemeTypographyView = PanelSchemeBaseView.extend( {\n\tgetType: function() {\n\t\treturn 'typography';\n\t}\n} );\n\nmodule.exports = PanelSchemeTypographyView;\n",
    "var EditModeItemView = require( 'qazana-layouts/edit-mode' ),\n\tPanelLayoutView;\n\nPanelLayoutView = Marionette.LayoutView.extend( {\n\ttemplate: '#tmpl-qazana-panel',\n\n\tid: 'qazana-panel-inner',\n\n\tregions: {\n\t\tcontent: '#qazana-panel-content-wrapper',\n\t\theader: '#qazana-panel-header-wrapper',\n\t\tfooter: '#qazana-panel-footer',\n\t\tmodeSwitcher: '#qazana-mode-switcher'\n\t},\n\n\tpages: {},\n\n\tchildEvents: {\n\t\t'click:add': function() {\n\t\t\tthis.setPage( 'elements' );\n\t\t},\n\t\t'editor:destroy': function() {\n\t\t\tthis.setPage( 'elements' );\n\t\t}\n\t},\n\n\tcurrentPageName: null,\n\n\tcurrentPageView: null,\n\n\t_isScrollbarInitialized: false,\n\n\tinitialize: function() {\n\t\tthis.initPages();\n\t},\n\n\tbuildPages: function() {\n\t\tvar pages = {\n\t\t\telements: {\n\t\t\t\tview: require( 'qazana-panel/pages/elements/elements' ),\n\t\t\t\ttitle: '<img src=\"' + qazana.config.assets_url + 'images/logo-panel.svg\">'\n\t\t\t},\n\t\t\teditor: {\n\t\t\t\tview: require( 'qazana-panel/pages/editor' )\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tview: qazana.modules.panel.Menu,\n\t\t\t\ttitle: '<img src=\"' + qazana.config.assets_url + 'images/logo-panel.svg\">'\n\t\t\t},\n\t\t\tcolorScheme: {\n\t\t\t\tview: require( 'qazana-panel/pages/schemes/colors' )\n\t\t\t},\n\t\t\ttypographyScheme: {\n\t\t\t\tview: require( 'qazana-panel/pages/schemes/typography' )\n\t\t\t},\n\t\t\tcolorPickerScheme: {\n\t\t\t\tview: require( 'qazana-panel/pages/schemes/color-picker' )\n\t\t\t}\n\t\t};\n\n\t\tvar schemesTypes = Object.keys( qazana.schemes.getSchemes() ),\n\t\t\tdisabledSchemes = _.difference( schemesTypes, qazana.schemes.getEnabledSchemesTypes() );\n\n\t\t_.each( disabledSchemes, function( schemeType ) {\n\t\t\tvar scheme = qazana.schemes.getScheme( schemeType );\n\t\t\t\n\t\t\tpages[ schemeType + 'Scheme' ].view = require( 'qazana-panel/pages/schemes/disabled' ).extend( {\n\t\t\t\tdisabledTitle: scheme.disabled_title\n\t\t\t} );\n\t\t} );\n\n\t\treturn pages;\n\t},\n\n\tinitPages: function() {\n\t\tvar pages;\n\n\t\tthis.getPages = function( page ) {\n\t\t\tif ( ! pages ) {\n\t\t\t\tpages = this.buildPages();\n\t\t\t}\n\n\t\t\treturn page ? pages[ page ] : pages;\n\t\t};\n\n\t\tthis.addPage = function( pageName, pageData ) {\n\t\t\tif ( ! pages ) {\n\t\t\t\tpages = this.buildPages();\n\t\t\t}\n\n\t\t\tpages[ pageName ] = pageData;\n\t\t};\n\t},\n\n\tgetHeaderView: function() {\n\t\treturn this.getChildView( 'header' );\n\t},\n\n\tgetFooterView: function() {\n\t\treturn this.getChildView( 'footer' );\n\t},\n\n\tgetCurrentPageName: function() {\n\t\treturn this.currentPageName;\n\t},\n\n\tgetCurrentPageView: function() {\n\t\treturn this.currentPageView;\n\t},\n\n\tsetPage: function( page, title, viewOptions ) {\n\t\tvar pageData = this.getPages( page );\n\n\t\tif ( ! pageData ) {\n\t\t\tthrow new ReferenceError( 'Qazana panel doesn\\'t have page named \\'' + page + '\\'' );\n\t\t}\n\n\t\tif ( pageData.options ) {\n\t\t\tviewOptions = _.extend( pageData.options, viewOptions );\n\t\t}\n\n\t\tvar View = pageData.view;\n\n\t\tif ( pageData.getView ) {\n\t\t\tView = pageData.getView();\n\t\t}\n\t\t\n\t\tthis.currentPageView = new View( viewOptions );\n\t\t\n\t\tthis.showChildView( 'content', this.currentPageView );\n\t\n\t\tthis.getHeaderView().setTitle( title || pageData.title );\n\n\t\tthis.currentPageName = page;\n\n\t\tthis\n\t\t\t.trigger( 'set:page', this.currentPageView )\n\t\t\t.trigger( 'set:page:' + page, this.currentPageView );\n\t},\n\n\topenEditor: function( model, view ) {\n\t\tvar currentPageName = this.getCurrentPageName();\n\n\t\tif ( 'editor' === currentPageName ) {\n\t\t\tvar currentPageView = this.getCurrentPageView(),\n\t\t\t\tcurrentEditableModel = currentPageView.model;\n\n\t\t\tif ( currentEditableModel === model ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tvar elementData = qazana.getElementData( model );\n\n\t\tthis.setPage( 'editor', qazana.translate( 'edit_element', [ elementData.title ] ), {\n\t\t\tmodel: model,\n\t\t\teditedElementView: view\n\t\t} );\n\n\t\tvar action = 'panel/open_editor/' + model.get( 'elType' );\n\n\t\t// Example: panel/open_editor/widget\n\t\tqazana.hooks.doAction( action, this, model, view );\n\n\t\t// Example: panel/open_editor/widget/heading\n\t\tqazana.hooks.doAction( action + '/' + model.get( 'widgetType' ), this, model, view );\n\t},\n\n\tonBeforeShow: function() {\n\t\tvar PanelFooterItemView = require( 'qazana-layouts/panel/footer' ),\n\t\t\tPanelHeaderItemView = require( 'qazana-layouts/panel/header' );\n\n\t\t// Edit Mode\n\t\tthis.showChildView( 'modeSwitcher', new EditModeItemView() );\n\n\t\t// Header\n\t\tthis.showChildView( 'header', new PanelHeaderItemView() );\n\n\t\t// Footer\n\t\tthis.showChildView( 'footer', new PanelFooterItemView() );\n\n\t\t// Added Editor events\n\t\tthis.updateScrollbar = _.throttle( this.updateScrollbar, 100 );\n\n\t\tthis.getRegion( 'content' )\n\t\t\t.on( 'before:show', _.bind( this.onEditorBeforeShow, this ) )\n\t\t\t.on( 'empty', _.bind( this.onEditorEmpty, this ) )\n\t\t\t.on( 'show', _.bind( this.updateScrollbar, this ) );\n\n\t\t// Set default page to elements\n\t\tthis.setPage( 'elements' );\n\n\t\tthis.listenTo( qazana.channels.data, 'scrollbar:update', this.updateScrollbar );\n\t},\n\n\tonEditorBeforeShow: function() {\n\t\t_.defer( _.bind( this.updateScrollbar, this ) );\n\t},\n\n\tonEditorEmpty: function() {\n\t\tthis.updateScrollbar();\n\t},\n\n\tupdateScrollbar: function() {\n\t\tvar $panel = this.content.$el;\n\n\t\tif ( ! this._isScrollbarInitialized ) {\n\t\t\t$panel.perfectScrollbar();\n\t\t\tthis._isScrollbarInitialized = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\t$panel.perfectScrollbar( 'update' );\n\t}\n} );\n\nmodule.exports = PanelLayoutView;\n",
    "var BaseSettingsModel;\n\nBaseSettingsModel = Backbone.Model.extend( {\n\toptions: {},\n\n\tinitialize: function( data, options ) {\n\t\tvar self = this;\n\n\t\tif ( options ) {\n\t\t\t// Keep the options for cloning\n\t\t\tself.options = options;\n\t\t}\n\n\t\tself.controls = ( options && options.controls ) ? options.controls : qazana.getElementControls( self );\n\n\t\tself.validators = {};\n\n\t\tif ( ! self.controls ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar attrs = data || {},\n\t\t\tdefaults = {};\n\n\t\t_.each( self.controls, function( field ) {\n\t\t\tvar control = qazana.config.controls[ field.type ],\n\t\t\t\tisUIControl = -1 !== control.features.indexOf( 'ui' );\n\n\t\t\tif ( isUIControl ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check if the value is a plain object ( and not an array )\n\t\t\tvar isMultipleControl = jQuery.isPlainObject( control.default_value );\n\n\t\t\tif ( isMultipleControl  ) {\n\t\t\t\tdefaults[ field.name ] = _.extend( {}, control.default_value, field['default'] || {} );\n\t\t\t} else {\n\t\t\t\tdefaults[ field.name ] = field['default'] || control.default_value;\n\t\t\t}\n\n\t\t\tif ( undefined !== attrs[ field.name ] ) {\n\t\t\t\tif ( isMultipleControl && ! _.isObject( attrs[ field.name ] ) ) {\n\t\t\t\t\tqazana.debug.addCustomError(\n\t\t\t\t\t\tnew TypeError( 'An invalid argument supplied as multiple control value' ),\n\t\t\t\t\t\t'InvalidElementData',\n\t\t\t\t\t\t'Element `' + ( self.get( 'widgetType' ) || self.get( 'elType' ) ) + '` got <' + attrs[ field.name ] + '> as `' + field.name + '` value. Expected array or object.'\n\t\t\t\t\t);\n\n\t\t\t\t\tdelete attrs[ field.name ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( undefined === attrs[ field.name ] ) {\n\t\t\t\tattrs[ field.name ] = defaults[ field.name ];\n\t\t\t}\n\t\t} );\n\n\t\tself.defaults = defaults;\n\n\t\tself.handleRepeaterData( attrs );\n\n\t\tself.set( attrs );\n\t},\n\n\thandleRepeaterData: function( attrs ) {\n\t\t_.each( this.controls, function( field ) {\n\t\t\tif ( field.is_repeater ) {\n\t\t\t\t// TODO: Apply defaults on each field in repeater fields\n\t\t\t\tif ( ! ( attrs[ field.name ] instanceof Backbone.Collection ) ) {\n\t\t\t\t\tattrs[ field.name ] = new Backbone.Collection( attrs[ field.name ], {\n\t\t\t\t\t\tmodel: function( attrs, options ) {\n\t\t\t\t\t\t\toptions = options || {};\n\n\t\t\t\t\t\t\toptions.controls = field.fields;\n\n\t\t\t\t\t\t\tif ( ! attrs._id ) {\n\t\t\t\t\t\t\t\tattrs._id = qazana.helpers.getUniqueID();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn new BaseSettingsModel( attrs, options );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tgetFontControls: function() {\n\t\treturn _.filter( this.getActiveControls(), function( control ) {\n\t\t\treturn 'font' === control.type;\n\t\t} );\n\t},\n\n\tgetStyleControls: function( controls ) {\n\t\tvar self = this;\n\n\t\tcontrols = controls || self.getActiveControls();\n\n\t\treturn _.filter( controls, function( control ) {\n\t\t\tif ( control.fields ) {\n\t\t\t\tcontrol.styleFields = self.getStyleControls( control.fields );\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn self.isStyleControl( control.name, controls );\n\t\t} );\n\t},\n\n\tisStyleControl: function( attribute, controls ) {\n\t\tcontrols = controls || this.controls;\n\n\t\tvar currentControl = _.find( controls, function( control ) {\n\t\t\treturn attribute === control.name;\n\t\t} );\n\n\t\treturn currentControl && ! _.isEmpty( currentControl.selectors );\n\t},\n\n\tgetClassControls: function( controls ) {\n\t\tcontrols = controls || this.controls;\n\n\t\treturn _.filter( controls, function( control ) {\n\t\t\treturn ! _.isUndefined( control.prefix_class );\n\t\t} );\n\t},\n\n\tisClassControl: function( attribute ) {\n\t\tvar currentControl = _.find( this.controls, function( control ) {\n\t\t\treturn attribute === control.name;\n\t\t} );\n\n\t\treturn currentControl && ! _.isUndefined( currentControl.prefix_class );\n\t},\n\n\tgetControl: function( id ) {\n\t\treturn _.find( this.controls, function( control ) {\n\t\t\treturn id === control.name;\n\t\t} );\n\t},\n\n\tgetActiveControls: function() {\n\t\tvar self = this,\n\t\t\tcontrols = {};\n\n\t\t_.each( self.controls, function( control, controlKey ) {\n\t\t\tif ( qazana.helpers.isActiveControl( control, self.attributes ) ) {\n\t\t\t\tcontrols[ controlKey ] = control;\n\t\t\t}\n\t\t} );\n\n\t\treturn controls;\n\t},\n\n\tclone: function() {\n\t\treturn new BaseSettingsModel( qazana.helpers.cloneObject( this.attributes ), qazana.helpers.cloneObject( this.options ) );\n\t},\n\n\tsetExternalChange: function( key, value ) {\n\t\tthis.set( key, value );\n\n\t\tthis.trigger( 'change:external', key, value )\n\t\t\t.trigger( 'change:external:' + key, value );\n\t},\n\n\ttoJSON: function( options ) {\n\t\tvar data = Backbone.Model.prototype.toJSON.call( this );\n\n\t\toptions = options || {};\n\n\t\tdelete data.widgetType;\n\t\tdelete data.elType;\n\t\tdelete data.isInner;\n\n\t\t_.each( data, function( attribute, key ) {\n\t\t\tif ( attribute && attribute.toJSON ) {\n\t\t\t\tdata[ key ] = attribute.toJSON();\n\t\t\t}\n\t\t} );\n\n\t\tif ( options.removeDefault ) {\n\t\t\tvar controls = this.controls;\n\n\t\t\t_.each( data, function( value, key ) {\n\t\t\t\tvar control = controls[ key ];\n\n\t\t\t\tif ( control ) {\n\t\t\t\t\tif ( ( 'text' === control.type || 'textarea' === control.type ) && data[ key ] ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data[ key ] && 'object' === typeof data[ key ] ) {\n\t\t\t\t\t\t// First check length difference\n\t\t\t\t\t\tif ( Object.keys( data[ key ] ).length !== Object.keys( control[ 'default' ] ).length ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If it's equal length, loop over value\n\t\t\t\t\t\tvar isEqual = true;\n\n\t\t\t\t\t\t_.each( data[ key ], function( propertyValue, propertyKey ) {\n\t\t\t\t\t\t\tif ( data[ key ][ propertyKey ] !== control[ 'default' ][ propertyKey ] ) {\n\t\t\t\t\t\t\t\treturn isEqual = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tif ( isEqual ) {\n\t\t\t\t\t\t\tdelete data[ key ];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( data[ key ] === control[ 'default' ] ) {\n\t\t\t\t\t\t\tdelete data[ key ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn data;\n\t}\n} );\n\nmodule.exports = BaseSettingsModel;\n",
    "var BaseSettingsModel = require( 'qazana-models/base-settings' ),\n\tColumnSettingsModel;\n\nColumnSettingsModel = BaseSettingsModel.extend( {\n\tdefaults: {\n\t\t_column_size: 100\n\t}\n} );\n\nmodule.exports = ColumnSettingsModel;\n",
    "var BaseSettingsModel = require( 'qazana-models/base-settings' ),\n\tWidgetSettingsModel = require( 'qazana-models/widget-settings' ),\n\tColumnSettingsModel = require( 'qazana-models/column-settings' ),\n\tSectionSettingsModel = require( 'qazana-models/section-settings' ),\n\n\tElementModel,\n\tElementCollection;\n\nElementModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\tid: '',\n\t\telType: '',\n\t\tisInner: false,\n\t\tsettings: {},\n\t\tdefaultEditSettings: {}\n\t},\n\n\tremoteRender: false,\n\t_htmlCache: null,\n\t_jqueryXhr: null,\n\trenderOnLeave: false,\n\n\tinitialize: function( options ) {\n\t\tvar elType = this.get( 'elType' ),\n\t\t\telements = this.get( 'elements' );\n\n\t\tif ( undefined !== elements ) {\n\t\t\tthis.set( 'elements', new ElementCollection( elements ) );\n\t\t}\n\n\t\tif ( 'widget' === elType ) {\n\t\t\tthis.remoteRender = true;\n\t\t\tthis.setHtmlCache( options.htmlCache || '' );\n\t\t}\n\n\t\t// No need this variable anymore\n\t\tdelete options.htmlCache;\n\n\t\t// Make call to remote server as throttle function\n\t\tthis.renderRemoteServer = _.throttle( this.renderRemoteServer, 1000 );\n\n\t\tthis.initSettings();\n\n\t\tthis.initEditSettings();\n\n\t\tthis.on( {\n\t\t\tdestroy: this.onDestroy,\n\t\t\t'editor:close': this.onCloseEditor\n\t\t} );\n\t},\n\n\tinitSettings: function() {\n\t\tvar elType = this.get( 'elType' ),\n\t\t\tsettings = this.get( 'settings' ),\n\t\t\tsettingModels = {\n\t\t\t\twidget: WidgetSettingsModel,\n\t\t\t\tcolumn: ColumnSettingsModel,\n\t\t\t\tsection: SectionSettingsModel\n\t\t\t},\n\t\t\tSettingsModel = settingModels[ elType ] || BaseSettingsModel;\n\n\t\tif ( Backbone.$.isEmptyObject( settings ) ) {\n\t\t\tsettings = qazana.helpers.cloneObject( settings );\n\t\t}\n\n\t\tif ( 'widget' === elType ) {\n\t\t\tsettings.widgetType = this.get( 'widgetType' );\n\t\t}\n\n\t\tsettings.elType = elType;\n\t\tsettings.isInner = this.get( 'isInner' );\n\n\t\tsettings = new SettingsModel( settings );\n\n\t\tthis.set( 'settings', settings );\n\n\t\tqazanaFrontend.config.elements.data[ this.cid ] = settings;\n\t},\n\n\tinitEditSettings: function() {\n\t\tvar editSettings = new Backbone.Model( this.get( 'defaultEditSettings' ) );\n\n\t\tthis.set( 'editSettings', editSettings );\n\n\t\tqazanaFrontend.config.elements.editSettings[ this.cid ] = editSettings;\n\t},\n\n\tonDestroy: function() {\n\t\t// Clean the memory for all use instances\n\t\tvar settings = this.get( 'settings' ),\n\t\t\telements = this.get( 'elements' );\n\n\t\tif ( undefined !== elements ) {\n\t\t\t_.each( _.clone( elements.models ), function( model ) {\n\t\t\t\tmodel.destroy();\n\t\t\t} );\n\t\t}\n\n\t\tif ( settings instanceof BaseSettingsModel ) {\n\t\t\tsettings.destroy();\n\t\t}\n\t},\n\n\tonCloseEditor: function() {\n\t\tthis.initEditSettings();\n\n\t\tif ( this.renderOnLeave ) {\n\t\t\tthis.renderRemoteServer();\n\t\t}\n\t},\n\n\tsetSetting: function( key, value ) {\n\t\tthis.get( 'settings' ).setExternalChange( key, value );\n\t},\n\n\tgetSetting: function( key ) {\n\t\tvar settings = this.get( 'settings' );\n\n\t\tif ( undefined === settings.get( key ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn settings.get( key );\n\t},\n\n\tsetHtmlCache: function( htmlCache ) {\n\t\tthis._htmlCache = htmlCache;\n\t},\n\n\tgetHtmlCache: function() {\n\t\treturn this._htmlCache;\n\t},\n\n\tgetTitle: function() {\n\t\tvar elementData = qazana.getElementData( this );\n\n\t\treturn ( elementData ) ? elementData.title : 'Unknown';\n\t},\n\n\tgetIcon: function() {\n\t\tvar elementData = qazana.getElementData( this );\n\n\t\treturn ( elementData ) ? elementData.icon : 'unknown';\n\t},\n\n\tcreateRemoteRenderRequest: function() {\n\t\tvar data = this.toJSON();\n\n\t\treturn qazana.ajax.send( 'render_widget', {\n\t\t\tdata: {\n\t\t\t\tpost_id: qazana.config.post_id,\n\t\t\t\tdata: JSON.stringify( data ),\n\t\t\t\t_nonce: qazana.config.nonce\n\t\t\t},\n\t\t\tsuccess: _.bind( this.onRemoteGetHtml, this )\n\t\t} );\n\t},\n\n\trenderRemoteServer: function() {\n\t\tif ( ! this.remoteRender ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.renderOnLeave = false;\n\n\t\tthis.trigger( 'before:remote:render' );\n\n\t\tif ( this.isRemoteRequestActive() ) {\n\t\t\tthis._jqueryXhr.abort();\n\t\t}\n\n\t\tthis._jqueryXhr = this.createRemoteRenderRequest();\n\t},\n\n\tisRemoteRequestActive: function() {\n\t\treturn this._jqueryXhr && 4 !== this._jqueryXhr.readyState;\n\t},\n\n\tonRemoteGetHtml: function( data ) {\n\t\tthis.setHtmlCache( data.render );\n\t\tthis.trigger( 'remote:render' );\n\t},\n\n\tclone: function() {\n\t\tvar newModel = new this.constructor( qazana.helpers.cloneObject( this.attributes ) );\n\n\t\tnewModel.set( 'id', qazana.helpers.getUniqueID() );\n\n\t\tnewModel.setHtmlCache( this.getHtmlCache() );\n\n\t\tvar elements = this.get( 'elements' );\n\n\t\tif ( ! _.isEmpty( elements ) ) {\n\t\t\tnewModel.set( 'elements', elements.clone() );\n\t\t}\n\n\t\treturn newModel;\n\t},\n\n\ttoJSON: function( options ) {\n\t\toptions = _.extend( { copyHtmlCache: false }, options );\n\n\t\t// Call parent's toJSON method\n\t\tvar data = Backbone.Model.prototype.toJSON.call( this );\n\n\t\t_.each( data, function( attribute, key ) {\n\t\t\tif ( attribute && attribute.toJSON ) {\n\t\t\t\tdata[ key ] = attribute.toJSON( options );\n\t\t\t}\n\t\t} );\n\n\t\tif ( options.copyHtmlCache ) {\n\t\t\tdata.htmlCache = this.getHtmlCache();\n\t\t} else {\n\t\t\tdelete data.htmlCache;\n\t\t}\n\n\t\treturn data;\n\t}\n\n} );\n\nElementCollection = Backbone.Collection.extend( {\n\tadd: function( models, options, isCorrectSet ) {\n\t\tif ( ( ! options || ! options.silent ) && ! isCorrectSet ) {\n\t\t\tthrow 'Call Error: Adding model to element collection is allowed only by the dedicated addChildModel() method.';\n\t\t}\n\n\t\treturn Backbone.Collection.prototype.add.call( this, models, options );\n\t},\n\n\tmodel: function( attrs, options ) {\n\t\tvar ModelClass = Backbone.Model;\n\n\t\tif ( attrs.elType ) {\n\t\t\tModelClass = qazana.hooks.applyFilters( 'element/model', ElementModel, attrs );\n\t\t}\n\n\t\treturn new ModelClass( attrs, options );\n\t},\n\n\tclone: function() {\n\t\tvar tempCollection = Backbone.Collection.prototype.clone.apply( this, arguments ),\n\t\t\tnewCollection = new ElementCollection();\n\n\t\ttempCollection.forEach( function( model ) {\n\t\t\tnewCollection.add( model.clone(), null, true );\n\t\t} );\n\n\t\treturn newCollection;\n\t}\n} );\n\nElementCollection.prototype.sync = function() {\n\treturn null;\n};\n\nElementCollection.prototype.fetch = function() {\n\treturn null;\n};\n\nElementCollection.prototype.save = function() {\n\treturn null;\n};\n\nElementModel.prototype.sync = function() {\n\treturn null;\n};\nElementModel.prototype.fetch = function() {\n\treturn null;\n};\nElementModel.prototype.save = function() {\n\treturn null;\n};\n\nmodule.exports = {\n\tModel: ElementModel,\n\tCollection: ElementCollection\n};\n",
    "var BaseSettingsModel = require( 'qazana-models/base-settings' ),\n\tSectionSettingsModel;\n\nSectionSettingsModel = BaseSettingsModel.extend( {\n\tdefaults: {}\n} );\n\nmodule.exports = SectionSettingsModel;\n",
    "var BaseSettingsModel = require( 'qazana-models/base-settings' ),\n\tWidgetSettingsModel;\n\nWidgetSettingsModel = BaseSettingsModel.extend( {\n\n} );\n\nmodule.exports = WidgetSettingsModel;\n",
    "var ViewModule = require( 'qazana-utils/view-module' ),\n\tSettingsModel = require( 'qazana-models/base-settings' ),\n\tControlsCSSParser = require( 'qazana-editor-utils/controls-css-parser' );\n\nmodule.exports = ViewModule.extend( {\n\tcontrolsCSS: null,\n\n\tmodel: null,\n\n\thasChange: false,\n\t\n\treloadPreviewFlag: false,\n\t\n\tchangeCallbacks: {},\n\n\taddChangeCallback: function( attribute, callback ) {\n\t\tthis.changeCallbacks[ attribute ] = callback;\n\t},\n\n\tbindEvents: function() {\n\t\tqazana.on( 'preview:loaded', this.onQazanaPreviewLoaded );\n\n\t\tthis.model.on( 'change', this.onModelChange );\n\t},\n\n\taddPanelPage: function() {\n\t\tvar name = this.getSettings( 'name' );\n\n\t\tqazana.getPanelView().addPage( name + '_settings', {\n\t\t\tview: qazana.settings.panelPages[ name ] || qazana.settings.panelPages.base,\n\t\t\ttitle: this.getSettings( 'panelPage.title' ),\n\t\t\toptions: {\n\t\t\t\tmodel: this.model,\n\t\t\t\tname: name\n\t\t\t}\n\t\t} );\n\t},\n\n\tupdateStylesheet: function( keepOldEntries ) {\n\t\tif ( ! keepOldEntries ) {\n\t\t\tthis.controlsCSS.stylesheet.empty();\n\t\t}\n\n\t\tthis.controlsCSS.addStyleRules( this.model.getStyleControls(), this.model.attributes, this.model.controls, [ /{{WRAPPER}}/g ], [ this.getSettings( 'cssWrapperSelector' ) ] );\n\n\t\tthis.controlsCSS.addStyleToDocument();\n\t},\n\n\tinitModel: function() {\n\t\tthis.model = new SettingsModel( this.getSettings( 'settings' ), {\n\t\t\tcontrols: this.getSettings( 'controls' )\n\t\t} );\n\t},\n\n\tinitControlsCSSParser: function() {\n\t\tthis.controlsCSS = new ControlsCSSParser( { id: this.getSettings( 'name' ) } );\n\t},\n\n\tgetDataToSave: function( data ) {\n\t\treturn data;\n\t},\n\n\tsave: function( callback ) {\n\t\tvar self = this;\n\n\t\tif ( ! self.hasChange ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar settings = this.model.toJSON( { removeDefault: true } ),\n\t\t\tdata = this.getDataToSave( {\n\t\t\t\tdata: JSON.stringify( settings )\n\t\t\t} );\n\n\t\tNProgress.start();\n\n\t\tqazana.ajax.send( 'save_' + this.getSettings( 'name' ) + '_settings', {\n\t\t\tdata: data,\n\t\t\tsuccess: function() {\n\t\t\t\tNProgress.done();\n\n\t\t\t\tself.setSettings( 'settings', settings );\n\n\t\t\t\tself.hasChange = false;\n\n\t\t\t\tif ( self.reloadPreviewFlag ) {\n\t\t\t\t\tself.reloadPreviewFlag = false;\n\t\t\t\t\tself.reloadPreview();\n\t\t\t\t}\n\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback.apply( self, arguments );\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function() {\n\t\t\t\talert( 'An error occurred' );\n\t\t\t}\n\t\t} );\n\t},\n\n\taddPanelMenuItem: function() {\n\t\tvar menuSettings = this.getSettings( 'panelPage.menu' ),\n\t\t\tmenuItemOptions = {\n\t\t\t\ticon: menuSettings.icon,\n\t\t\t\ttitle: this.getSettings( 'panelPage.title' ),\n\t\t\t\ttype: 'page',\n\t\t\t\tpageName: this.getSettings( 'name' ) + '_settings'\n\t\t\t};\n\n\t\tqazana.modules.panel.Menu.addItem( menuItemOptions, menuSettings.beforeItem );\n\t},\n\n\tonInit: function() {\n\t\tthis.initModel();\n\n\t\tthis.initControlsCSSParser();\n\n\t\tthis.addPanelMenuItem();\n\n\t\tthis.debounceSave = _.debounce( this.save, 3000 );\n\n\t\tViewModule.prototype.onInit.apply( this, arguments );\n\t},\n\n\tonModelChange: function( model ) {\n\t\tvar self = this;\n\n\t\tself.hasChange = true;\n\n\t\tthis.controlsCSS.stylesheet.empty();\n\n\t\t_.each( model.changed, function( value, key ) {\n\n\t\t\tif ( self.changeCallbacks[ key ] ) {\n\t\t\t\tself.changeCallbacks[ key ].call( self, value );\n\t\t\t}\n\n\t\t\tif ( self.model.controls[ key ].render_type === 'preview' ) {\n\t\t\t\tself.reloadPreviewFlag = true;\n\t\t\t}\n\n\t\t} );\n\n\t\tself.updateStylesheet( true );\n\n\t\tself.debounceSave();\n\t},\n\n\tonQazanaPreviewLoaded: function() {\n\t\tthis.updateStylesheet();\n\n\t\tthis.addPanelPage();\n\t},\n\t\n\treloadPreview: function() {\n\t\tqazana.reloadPreview();\n\t}\n\n} );\n",
    "var ControlsStack = require( 'qazana-views/controls-stack' );\n\nmodule.exports = ControlsStack.extend( {\n\tid: function() {\n\t\treturn 'qazana-panel-' + this.getOption( 'name' ) + '-settings';\n\t},\n\n\tgetTemplate: function() {\n\t\treturn '#tmpl-qazana-panel-' + this.getOption( 'name' ) + '-settings';\n\t},\n\n\tchildViewContainer: function() {\n\t\treturn '#qazana-panel-' + this.getOption( 'name' ) + '-settings-controls';\n\t},\n\n\tchildViewOptions: function() {\n\t\treturn {\n\t\t\telementSettingsModel: this.model\n\t\t};\n\t},\n\n\tinitialize: function() {\n\t\tthis.collection = new Backbone.Collection( _.values( this.model.controls ) );\n\t}\n} );\n",
    "var BaseSettings = require( 'qazana-editor/settings/base/manager' );\n\nmodule.exports = BaseSettings.extend( {\n\tchangeCallbacks: {\n\t\tqazana_page_title_selector: function( newValue ) {\n\t\t\tvar newSelector = newValue || 'h1.entry-title',\n\t\t\t\ttitleSelectors = qazana.settings.page.model.controls.hide_title.selectors = {};\n\n\t\t\ttitleSelectors[ newSelector ] = 'display: none';\n\n\t\t\tqazana.settings.page.updateStylesheet();\n\t\t},\n\t\tcustom_css: function( newValue ) {\n\t\t\tnewValue = newValue.replace( /selector/g, this.getSettings( 'cssWrapperSelector' ) );\n\t\t\tthis.controlsCSS.stylesheet.addRawCSS( 'general-settings-custom-css', newValue );\n\t\t}\n\t},\n\t\n\treloadPreview: function() {\n\t\tqazana.reloadPreview();\n\n\t\tqazana.once( 'preview:loaded', function() {\n\t\t\tqazana.getPanelView().setPage( 'general_settings' );\n\t\t} );\n\t}\n} );\n",
    "var BaseSettings = require( 'qazana-editor/settings/base/manager' );\n\nmodule.exports = BaseSettings.extend( {\n\tchangeCallbacks: {\n\t\tpost_title: function( newValue ) {\n\t\t\tvar $title = qazanaFrontend.getElements( '$document' ).find( qazana.config.page_title_selector );\n\t\t\t$title.text( newValue );\n\t\t},\n\n\t\ttemplate: function() {\n\n\t\t\tvar self = this;\n\n\t\t\tself.save( function() {\n\t\t\t\tself.reloadPreview();\n\t\t\t} );\n\t\t\t\n\t\t},\n\n\t\tcustom_css: function( newValue ) {\n\t\t\tnewValue = newValue.replace( /selector/g, this.getSettings( 'cssWrapperSelector' ) );\n\t\t\tthis.controlsCSS.stylesheet.addRawCSS( 'page-settings-custom-css', newValue );\n\t\t}\n\t},\n\n\trenderStyles: function() {\n\t\tthis.controlsCSS.addStyleRules( this.model.getStyleControls(), this.model.attributes, this.model.controls, [ /\\{\\{WRAPPER}}/g ], [ 'body.qazana-page-' + qazana.config.post_id ] );\n\t\tthis.controlsCSS.stylesheet.addRawCSS( 'page-settings-custom-css', this.model.get('custom_css').replace( /selector/g, 'body.qazana-page-' + qazana.config.post_id ) );\n\t},\n\n\tgetDataToSave: function( data ) {\n\t\tdata.id = qazana.config.post_id;\n\t\treturn data;\n\t},\n\n\treloadPreview: function() {\n\t\tqazana.reloadPreview();\n\n\t\tqazana.once( 'preview:loaded', function() {\n\t\t\tqazana.getPanelView().setPage( 'page_settings' );\n\t\t} );\n\t}\n} );\n",
    "var Module = require( 'qazana-utils/module' );\n\nmodule.exports = Module.extend( {\n\tmodules: {\n\t\tbase: require( 'qazana-editor/settings/base/manager' ),\n\t\tgeneral: require( 'qazana-editor/settings/general/manager' ),\n\t\tpage: require( 'qazana-editor/settings/page/manager' )\n\t},\n\n\tpanelPages: {\n\t\tbase: require( 'qazana-editor/settings/base/panel' )\n\t},\n\n\tonInit: function() {\n\t\tthis.initSettings();\n\t},\n\n\tinitSettings: function() {\n\t\tvar self = this;\n\t\t_.each( qazana.config.settings, function( config, name ) {\n\t\t\tvar Manager = self.modules[ name ] || self.modules.base;\n\t\t\tself[ name ] = new Manager( config );\n\t\t} );\n\t}\n} );\n",
    "var Ajax;\n\nAjax = {\n\tconfig: {},\n\n\tinitConfig: function() {\n\t\tthis.config = {\n\t\t\tajaxParams: {\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: qazana.config.ajaxurl,\n\t\t\t\tdata: {}\n\t\t\t},\n\t\t\tactionPrefix: 'qazana_'\n\t\t};\n\t},\n\n\tinit: function() {\n\t\tthis.initConfig();\n\t},\n\n\tsend: function( action, options ) {\n\t\tvar ajaxParams = qazana.helpers.cloneObject( this.config.ajaxParams );\n\n\t\toptions = options || {};\n\n\t\taction = this.config.actionPrefix + action;\n\n\t\tBackbone.$.extend( ajaxParams, options );\n\n\t\tif ( ajaxParams.data instanceof FormData ) {\n\t\t\tajaxParams.data.append( 'action', action );\n\t\t\tajaxParams.data.append( '_nonce', qazana.config.nonce );\n\t\t} else {\n\t\t\tajaxParams.data.action = action;\n\t\t\tajaxParams.data._nonce = qazana.config.nonce;\n\t\t}\n\n\t\tvar successCallback = ajaxParams.success,\n\t\t\terrorCallback = ajaxParams.error;\n\n\t\tif ( successCallback || errorCallback ) {\n\t\t\tajaxParams.success = function( response ) {\n\t\t\t\tif ( response.success && successCallback ) {\n\t\t\t\t\tsuccessCallback( response.data );\n\t\t\t\t}\n\n\t\t\t\tif ( ( ! response.success ) && errorCallback ) {\n\t\t\t\t\terrorCallback( response.data );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( errorCallback ) {\n\t\t\t\tajaxParams.error = function( data ) {\n\t\t\t\t\terrorCallback( data );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn Backbone.$.ajax( ajaxParams );\n\t}\n};\n\nmodule.exports = Ajax;\n",
    "var Conditions;\n\nConditions = function() {\n\tvar self = this;\n\n\tthis.compare = function( leftValue, rightValue, operator ) {\n\t\tswitch ( operator ) {\n\t\t\t/* jshint ignore:start */\n\t\t\tcase '==':\n\t\t\t\treturn leftValue == rightValue;\n\t\t\tcase '!=':\n\t\t\t\treturn leftValue != rightValue;\n\t\t\t/* jshint ignore:end */\n\t\t\tcase '!==':\n\t\t\t\treturn leftValue !== rightValue;\n\t\t\tcase 'in':\n\t\t\t\treturn -1 !== rightValue.indexOf( leftValue );\n\t\t\tcase '!in':\n\t\t\t\treturn -1 === rightValue.indexOf( leftValue );\n\t\t\tcase '<':\n\t\t\t\treturn leftValue < rightValue;\n\t\t\tcase '<=':\n\t\t\t\treturn leftValue <= rightValue;\n\t\t\tcase '>':\n\t\t\t\treturn leftValue > rightValue;\n\t\t\tcase '>=':\n\t\t\t\treturn leftValue >= rightValue;\n\t\t\tdefault:\n\t\t\t\treturn leftValue === rightValue;\n\t\t}\n\t};\n\n\tthis.check = function( conditions, comparisonObject ) {\n\t\tvar isOrCondition = 'or' === conditions.relation,\n\t\t\tconditionSucceed = ! isOrCondition;\n\n\t\tBackbone.$.each( conditions.terms, function() {\n\t\t\tvar term = this,\n\t\t\t\tcomparisonResult;\n\n\t\t\tif ( term.terms ) {\n\t\t\t\tcomparisonResult = self.check( term, comparisonObject );\n\t\t\t} else {\n\t\t\t\tvar parsedName = term.name.match( /(\\w+)(?:\\[(\\w+)])?/ ),\n\t\t\t\t\tvalue = comparisonObject[ parsedName[ 1 ] ];\n\n\t\t\t\tif ( parsedName[ 2 ] ) {\n\t\t\t\t\tvalue = value[ parsedName[ 2 ] ];\n\t\t\t\t}\n\n\t\t\t\tcomparisonResult = self.compare( value, term.value, term.operator );\n\t\t\t}\n\n\t\t\tif ( isOrCondition ) {\n\t\t\t\tif ( comparisonResult ) {\n\t\t\t\t\tconditionSucceed = true;\n\t\t\t\t}\n\n\t\t\t\treturn ! comparisonResult;\n\t\t\t}\n\n\t\t\tif ( ! comparisonResult ) {\n\t\t\t\treturn conditionSucceed = false;\n\t\t\t}\n\t\t} );\n\n\t\treturn conditionSucceed;\n\t};\n};\n\nmodule.exports = new Conditions();\n",
    "var ViewModule = require( 'qazana-utils/view-module' ),\n\tStylesheet = require( 'qazana-editor-utils/stylesheet' ),\n\tControlsCSSParser;\n\nControlsCSSParser = ViewModule.extend( {\n\tstylesheet: null,\n\n\tgetDefaultSettings: function() {\n\t\treturn {\n\t\t\tid: 0\n\t\t};\n\t},\n\n\tgetDefaultElements: function() {\n\t\treturn {\n\t\t\t$stylesheetElement: Backbone.$( '<style>', { id: 'qazana-style-' + this.getSettings( 'id' ) } )\n\t\t};\n\t},\n\n\tinitStylesheet: function() {\n\t\tvar viewportBreakpoints = qazana.config.viewportBreakpoints;\n\n\t\tthis.stylesheet = new Stylesheet();\n\n\t\tthis.stylesheet\n\t\t\t.addDevice( 'mobile', 0 )\n\t\t\t.addDevice( 'tablet', viewportBreakpoints.md )\n\t\t\t.addDevice( 'desktop', viewportBreakpoints.lg );\n\t},\n\n\taddStyleRules: function( controls, values, controlsStack, placeholders, replacements ) {\n\t\tvar self = this;\n\n\t\t_.each( controls, function( control ) {\n\t\t\tif ( control.styleFields && control.styleFields.length ) {\n\t\t\t\tvalues[ control.name ].each( function( itemModel ) {\n\t\t\t\t\tself.addStyleRules(\n\t\t\t\t\t\tcontrol.styleFields,\n\t\t\t\t\t\titemModel.attributes,\n\t\t\t\t\t\tcontrolsStack,\n\t\t\t\t\t\tplaceholders.concat( [ '{{CURRENT_ITEM}}' ] ),\n\t\t\t\t\t\treplacements.concat( [ '.qazana-repeater-item-' + itemModel.get( '_id' ) ] )\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tself.addControlStyleRules( control, values, controlsStack, placeholders, replacements );\n\t\t} );\n\t},\n\n\taddControlStyleRules: function( control, values, controlsStack, placeholders, replacements ) {\n\t\tvar self = this;\n\n\t\tControlsCSSParser.addControlStyleRules( self.stylesheet, control, controlsStack, function( control ) {\n\t\t\treturn self.getStyleControlValue( control, values );\n\t\t}, placeholders, replacements );\n\t},\n\n\tgetStyleControlValue: function( control, values ) {\n\t\tvar value = values[ control.name ];\n\n\t\tif ( control.selectors_dictionary ) {\n\t\t\tvalue = control.selectors_dictionary[ value ] || value;\n\t\t}\n\n\t\tif ( ! _.isNumber( value ) && _.isEmpty( value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\taddStyleToDocument: function() {\n\t\tqazana.$previewContents.find( 'head' ).append( this.elements.$stylesheetElement );\n\n\t\tthis.elements.$stylesheetElement.text( this.stylesheet );\n\t},\n\n\tremoveStyleFromDocument: function() {\n\t\tthis.elements.$stylesheetElement.remove();\n\t},\n\n\tonInit: function() {\n\t\tViewModule.prototype.onInit.apply( this, arguments );\n\n\t\tthis.initStylesheet();\n\t}\n} );\n\nControlsCSSParser.addControlStyleRules = function( stylesheet, control, controlsStack, valueCallback, placeholders, replacements ) {\n\tvar value = valueCallback( control );\n\n\tif ( undefined === value ) {\n\t\treturn;\n\t}\n\n\t_.each( control.selectors, function( cssProperty, selector ) {\n\t\tvar outputCssProperty;\n\n\t\ttry {\n\t\t\toutputCssProperty = cssProperty.replace( /{{(?:([^.}]+)\\.)?([^}]*)}}/g, function( originalPhrase, controlName, placeholder ) {\n\t\t\t\tvar parserControl = control,\n\t\t\t\t\tvalueToInsert = value;\n\n\t\t\t\tif ( controlName ) {\n\t\t\t\t\tparserControl = _.findWhere( controlsStack, { name: controlName } );\n\n\t\t\t\t\tif ( ! parserControl ) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tvalueToInsert = valueCallback( parserControl );\n\t\t\t\t}\n\n\t\t\t\tvar parsedValue = qazana.getControlView( parserControl.type ).getStyleValue( placeholder.toLowerCase(), valueToInsert );\n\n\t\t\t\tif ( '' === parsedValue ) {\n\t\t\t\t\tthrow '';\n\t\t\t\t}\n\n\t\t\t\treturn parsedValue;\n\t\t\t} );\n\t\t} catch ( e ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( _.isEmpty( outputCssProperty ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar devicePattern = /^(?:\\([^)]+\\)){1,2}/,\n\t\t\tdeviceRules = selector.match( devicePattern ),\n\t\t\tquery = {};\n\n\t\tif ( deviceRules ) {\n\t\t\tdeviceRules = deviceRules[0];\n\n\t\t\tselector = selector.replace( devicePattern, '' );\n\n\t\t\tvar pureDevicePattern = /\\(([^)]+)\\)/g,\n\t\t\t\tpureDeviceRules = [],\n\t\t\t\tmatches;\n\n\t\t\twhile ( matches = pureDevicePattern.exec( deviceRules ) ) {\n\t\t\t\tpureDeviceRules.push( matches[1] );\n\t\t\t}\n\n\t\t\t_.each( pureDeviceRules, function( deviceRule ) {\n\t\t\t\tif ( 'desktop' === deviceRule ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar device = deviceRule.replace( /\\+$/, '' ),\n\t\t\t\t\tendPoint = device === deviceRule ? 'max' : 'min';\n\n\t\t\t\tquery[ endPoint ] = device;\n\t\t\t} );\n\t\t}\n\n\t\t_.each( placeholders, function( placeholder, index ) {\n\t\t\t// Check if it's a RegExp\n\t\t\tvar regexp = placeholder.source ? placeholder.source : placeholder,\n\t\t\t\tplaceholderPattern = new RegExp( regexp, 'g' );\n\n\t\t\tselector = selector.replace( placeholderPattern, replacements[ index ] );\n\t\t} );\n\n\t\tif ( ! Object.keys( query ).length && control.responsive ) {\n\t\t\tquery = _.pick( qazana.helpers.cloneObject( control.responsive ), [ 'min', 'max' ] );\n\n\t\t\tif ( 'desktop' === query.max ) {\n\t\t\t\tdelete query.max;\n\t\t\t}\n\t\t}\n\n\t\tstylesheet.addRules( selector, outputCssProperty, query );\n\t} );\n};\n\nmodule.exports = ControlsCSSParser;\n",
    "var Debug = function() {\n\tvar self = this,\n\t\terrorStack = [],\n\t\tsettings = {},\n\t\telements = {};\n\n\tvar initSettings = function() {\n\t\tsettings = {\n\t\t\tdebounceDelay: 500,\n\t\t\turlsToWatch: [\n\t\t\t\t'qazana/assets'\n\t\t\t]\n\t\t};\n\t};\n\n\tvar initElements = function() {\n\t\telements.$window = jQuery( window );\n\t};\n\n\tvar onError = function( event ) {\n\t\tvar originalEvent = event.originalEvent,\n\t\t\terror = originalEvent.error;\n\n\t\tif ( ! error ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar isInWatchList = false,\n\t\t\turlsToWatch = settings.urlsToWatch;\n\n\t\tjQuery.each( urlsToWatch, function() {\n\t\t\tif ( -1 !== error.stack.indexOf( this ) ) {\n\t\t\t\tisInWatchList = true;\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} );\n\n\t\tif ( ! isInWatchList ) {\n\t\t\treturn;\n\t\t}\n\n\t\tself.addError( {\n\t\t\ttype: error.name,\n\t\t\tmessage: error.message,\n\t\t\turl: originalEvent.filename,\n\t\t\tline: originalEvent.lineno,\n\t\t\tcolumn: originalEvent.colno\n\t\t} );\n\t};\n\n\tvar bindEvents = function() {\n\t\telements.$window.on( 'error', onError );\n\t};\n\n\tvar init = function() {\n\t\tinitSettings();\n\n\t\tinitElements();\n\n\t\tbindEvents();\n\n\t\tself.sendErrors = _.debounce( self.sendErrors, settings.debounceDelay );\n\t};\n\n\tthis.addURLToWatch = function( url ) {\n\t\tsettings.urlsToWatch.push( url );\n\t};\n\n\tthis.addCustomError = function( error, category, tag ) {\n\t\tvar errorInfo = {\n\t\t\ttype: error.name,\n\t\t\tmessage: error.message,\n\t\t\turl: error.fileName || error.sourceURL,\n\t\t\tline: error.lineNumber || error.line,\n\t\t\tcolumn: error.columnNumber || error.column,\n\t\t\tcustomFields: {\n\t\t\t\tcategory: category || 'general',\n\t\t\t\ttag: tag\n\t\t\t}\n\t\t};\n\n\t\tif ( ! errorInfo.url ) {\n\t\t\tvar stackInfo =  error.stack.match( /\\n {4}at (.*?(?=:(\\d+):(\\d+)))/ );\n\n\t\t\tif ( stackInfo ) {\n\t\t\t\terrorInfo.url = stackInfo[1];\n\t\t\t\terrorInfo.line = stackInfo[2];\n\t\t\t\terrorInfo.column = stackInfo[3];\n\t\t\t}\n\t\t}\n\n\t\tthis.addError( errorInfo );\n\t};\n\n\tthis.addError = function( errorParams ) {\n\t\tvar defaultParams = {\n\t\t\ttype: 'Error',\n\t\t\ttimestamp: Math.floor( new Date().getTime() / 1000 ),\n\t\t\tmessage: null,\n\t\t\turl: null,\n\t\t\tline: null,\n\t\t\tcolumn: null,\n\t\t\tcustomFields: {}\n\t\t};\n\n\t\terrorStack.push( jQuery.extend( true, defaultParams, errorParams ) );\n\n\t\tself.sendErrors();\n\t};\n\n\tthis.sendErrors = function() {\n\t\t// Avoid recursions on errors in ajax\n\t\telements.$window.off( 'error', onError );\n\n\t\tjQuery.ajax( {\n\t\t\turl: QazanaConfig.ajaxurl,\n\t\t\tmethod: 'POST',\n\t\t\tdata: {\n\t\t\t\taction: 'qazana_debug_log',\n\t\t\t\tdata: errorStack\n\t\t\t},\n\t\t\tsuccess: function() {\n\t\t\t\terrorStack = [];\n\n\t\t\t\t// Restore error handler\n\t\t\t\telements.$window.on( 'error', onError );\n\t\t\t}\n\t\t} );\n\t};\n\n\tinit();\n};\n\nmodule.exports = new Debug();\n",
    "var heartbeat;\n\nheartbeat = {\n\n\tinit: function() {\n\t\tvar modal;\n\n\t\tthis.getModal = function() {\n\t\t\tif ( ! modal ) {\n\t\t\t\tmodal = this.initModal();\n\t\t\t}\n\n\t\t\treturn modal;\n\t\t};\n\n\t\tBackbone.$( document ).on( {\n\t\t\t'heartbeat-send': function( event, data ) {\n\t\t\t\tdata.qazana_post_lock = {\n\t\t\t\t\tpost_ID: qazana.config.post_id\n\t\t\t\t};\n\t\t\t},\n\t\t\t'heartbeat-tick': function( event, response ) {\n\t\t\t\tif ( response.locked_user ) {\n\t\t\t\t\tif ( qazana.isEditorChanged() ) {\n\t\t\t\t\t\tqazana.saveEditor( { status: 'autosave' } );\n\t\t\t\t\t}\n\n\t\t\t\t\theartbeat.showLockMessage( response.locked_user );\n\t\t\t\t} else {\n\t\t\t\t\theartbeat.getModal().hide();\n\t\t\t\t}\n\n\t\t\t\tqazana.config.nonce = response.qazanaNonce;\n\t\t\t},\n\t\t\t'heartbeat-tick.wp-refresh-nonces': function( event, response ) {\n\t\t\t\tvar nonces = response['qazana-refresh-nonces'];\n\n\t\t\t\tif ( nonces ) {\n\t\t\t\t\tif ( nonces.heartbeatNonce ) {\n\t\t\t\t\t\tqazana.config.nonce = nonces.qazanaNonce;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( nonces.heartbeatNonce ) {\n\t\t\t\t\t\twindow.heartbeatSettings.nonce = nonces.heartbeatNonce;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tif ( qazana.config.locked_user ) {\n\t\t\theartbeat.showLockMessage( qazana.config.locked_user );\n\t\t}\n    },\n\n\tinitModal: function() {\n\t\tvar modal = qazana.dialogsManager.createWidget( 'options', {\n\t\t\theaderMessage: qazana.translate( 'take_over' )\n\t\t} );\n\n\t\tmodal.addButton( {\n\t\t\tname: 'go_back',\n\t\t\ttext: qazana.translate( 'go_back' ),\n\t\t\tcallback: function() {\n\t\t\t\tparent.history.go( -1 );\n\t\t\t}\n\t\t} );\n\n\t\tmodal.addButton( {\n\t\t\tname: 'take_over',\n\t\t\ttext: qazana.translate( 'take_over' ),\n\t\t\tcallback: function() {\n\t\t\t\twp.heartbeat.enqueue( 'qazana_force_post_lock', true );\n\t\t\t\twp.heartbeat.connectNow();\n\t\t\t}\n\t\t} );\n\n\t\treturn modal;\n\t},\n\n\tshowLockMessage: function( lockedUser ) {\n\t\tvar modal = heartbeat.getModal();\n\n\t\tmodal\n\t\t\t.setMessage( qazana.translate( 'dialog_user_taken_over', [ lockedUser ] ) )\n\t\t    .show();\n\t}\n};\n\nmodule.exports = heartbeat;\n",
    "var helpers;\n\nhelpers = {\n\t_enqueuedFonts: [],\n\n\telementsHierarchy: {\n\t\tsection: {\n\t\t\tcolumn: {\n\t\t\t\twidget: null,\n\t\t\t\tsection: null\n\t\t\t}\n\t\t}\n\t},\n\n\tenqueueFont: function( font ) {\n\t\tif ( -1 !== this._enqueuedFonts.indexOf( font ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar fontType = qazana.config.controls.font.fonts[ font ],\n\t\t\tfontUrl,\n\n\t\t\tsubsets = {\n\t\t\t\t'ru_RU': 'cyrillic',\n\t\t\t\t'uk': 'cyrillic',\n\t\t\t\t'bg_BG': 'cyrillic',\n\t\t\t\t'vi': 'vietnamese',\n\t\t\t\t'el': 'greek',\n\t\t\t\t'he_IL': 'hebrew'\n\t\t\t};\n\n\t\tswitch ( fontType ) {\n\t\t\tcase 'googlefonts' :\n\t\t\t\tfontUrl = 'https://fonts.googleapis.com/css?family=' + font + ':100,100italic,200,200italic,300,300italic,400,400italic,500,500italic,600,600italic,700,700italic,800,800italic,900,900italic';\n\n\t\t\t\tif ( subsets[ qazana.config.locale ] ) {\n\t\t\t\t\tfontUrl += '&subset=' + subsets[ qazana.config.locale ];\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'earlyaccess' :\n\t\t\t\tvar fontLowerString = font.replace( /\\s+/g, '' ).toLowerCase();\n\t\t\t\tfontUrl = 'https://fonts.googleapis.com/earlyaccess/' + fontLowerString + '.css';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ( ! _.isEmpty( fontUrl ) ) {\n\t\t\tqazana.$previewContents.find( 'link:last' ).after( '<link href=\"' + fontUrl + '\" rel=\"stylesheet\" type=\"text/css\">' );\n\t\t}\n\t\tthis._enqueuedFonts.push( font );\n\t},\n\n\tgetElementChildType: function( elementType, container ) {\n\t\tif ( ! container ) {\n\t\t\tcontainer = this.elementsHierarchy;\n\t\t}\n\n\t\tif ( undefined !== container[ elementType ] ) {\n\n\t\t\tif ( Backbone.$.isPlainObject( container[ elementType ] ) ) {\n\t\t\t\treturn Object.keys( container[ elementType ] );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tfor ( var type in container ) {\n\n\t\t\tif ( ! container.hasOwnProperty( type ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( ! Backbone.$.isPlainObject( container[ type ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar result = this.getElementChildType( elementType, container[ type ] );\n\n\t\t\tif ( result ) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\tgetUniqueID: function() {\n\t\tvar id;\n\n\t\t// TODO: Check conflict models\n\t\t//while ( true ) {\n\t\t\tid = Math.random().toString( 36 ).substr( 2, 7 );\n\t\t\t//if ( 1 > $( 'li.item-id-' + id ).length ) {\n\t\t\t\treturn id;\n\t\t\t//}\n\t\t//}\n\t},\n\n\tstringReplaceAll: function( string, replaces ) {\n\t\tvar re = new RegExp( Object.keys( replaces ).join( '|' ), 'gi' );\n\n\t\treturn string.replace( re, function( matched ) {\n\t\t\treturn replaces[ matched ];\n\t\t} );\n\t},\n\n\tgetYoutubeIDFromURL: function( url ) {\n\t\tvar videoIDParts = url.match( /^.*(?:youtu.be\\/|v\\/|e\\/|u\\/\\w+\\/|embed\\/|v=)([^#\\&\\?]*).*/ );\n\n\t\treturn videoIDParts && videoIDParts[1];\n\t},\n\n\tytVidId : function ( url ) {\n \t\tvar p = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n \t\treturn (url.match(p)) ? RegExp.$1 : false;\n  \t},\n\n\tisActiveControl: function( controlModel, values ) {\n\t\tvar condition;\n\n\t\t// TODO: Better way to get this?\n\t\tif ( _.isFunction( controlModel.get ) ) {\n\t\t\tcondition = controlModel.get( 'condition' );\n\t\t} else {\n\t\t\tcondition = controlModel.condition;\n\t\t}\n\n\t\t// Repeater items conditions\n\t\tif ( controlModel.conditions ) {\n\t\t\treturn qazana.conditions.check( controlModel.conditions, values );\n\t\t}\n\n\t\tif ( _.isEmpty( condition ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar hasFields = _.filter( condition, function( conditionValue, conditionName ) {\n\n\t\t\tvar conditionNameParts = conditionName.match( /([a-z_0-9]+)(?:\\[([a-z_]+)])?(!?)$/i ),\n\t\t\t\tconditionRealName = conditionNameParts[1],\n\t\t\t\tconditionSubKey = conditionNameParts[2],\n\t\t\t\tisNegativeCondition = !! conditionNameParts[3],\n\t\t\t\tcontrolValue = values[ conditionRealName ];\n\n\t\t\tif ( undefined === controlValue ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( conditionSubKey ) {\n\t\t\t\tcontrolValue = controlValue[ conditionSubKey ];\n\t\t\t}\n\n\t\t\t// If it's a non empty array - check if the conditionValue contains the controlValue,\n\t\t\t// If the controlValue is a non empty array - check if the controlValue contains the conditionValue\n\t\t\t// otherwise check if they are equal. ( and give the ability to check if the value is an empty array )\n\t\t\tvar isContains;\n\t\t\tif ( _.isArray( conditionValue ) && ! _.isEmpty( conditionValue ) ) {\n\t\t\t\tisContains = _.contains( conditionValue, controlValue );\n\t\t\t} else if ( _.isArray( controlValue ) && ! _.isEmpty( controlValue ) ) {\n\t\t\t\tisContains = _.contains( controlValue, conditionValue );\n\t\t\t} else {\n\t\t\t\tisContains = _.isEqual( conditionValue, controlValue );\n\t\t\t}\n\n\t\t\treturn isNegativeCondition ? isContains : ! isContains;\n\t\t} );\n\n\t\treturn _.isEmpty( hasFields );\n\t},\n\n\tcloneObject: function( object ) {\n\t\treturn JSON.parse( JSON.stringify( object ) );\n\t},\n\n\tdisableElementEvents: function( $element ) {\n\t\t$element.each( function() {\n\t\t\tvar currentPointerEvents = this.style.pointerEvents;\n\n\t\t\tif ( 'none' === currentPointerEvents ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tBackbone.$( this )\n\t\t\t\t.data( 'backup-pointer-events', currentPointerEvents )\n\t\t\t\t.css( 'pointer-events', 'none' );\n\t\t} );\n\t},\n\n\tenableElementEvents: function( $element ) {\n\t\t$element.each( function() {\n\t\t\tvar $this = Backbone.$( this ),\n\t\t\t\tbackupPointerEvents = $this.data( 'backup-pointer-events' );\n\n\t\t\tif ( undefined === backupPointerEvents ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$this\n\t\t\t\t.removeData( 'backup-pointer-events' )\n\t\t\t\t.css( 'pointer-events', backupPointerEvents );\n\t\t} );\n\t},\n\n\tgetColorPickerPaletteIndex: function( paletteKey ) {\n\t\treturn [ '7', '8', '1', '5', '2', '3', '6', '4' ].indexOf( paletteKey );\n\t},\n\n\twpColorPicker: function( $element, options ) {\n\t\tvar self = this,\n\t\t\tcolorPickerScheme = qazana.schemes.getScheme( 'color-picker' ),\n\t\t\titems = _.sortBy( colorPickerScheme.items, function( item ) {\n\t\t\t\treturn self.getColorPickerPaletteIndex( item.key );\n\t\t\t} ),\n\t\t\tdefaultOptions = {\n\t\t\t\twidth: window.innerWidth >= 1440 ? 271 : 251,\n\t\t\t\tpalettes: _.pluck( items, 'value' )\n\t\t\t};\n\n\t\tif ( options ) {\n\t\t\t_.extend( defaultOptions, options );\n\t\t}\n\n\t\treturn $element.wpColorPicker( defaultOptions );\n\t},\n\n\tisInViewport: function( element, html ) {\n\t\tvar rect = element.getBoundingClientRect();\n\t\thtml = html || document.documentElement;\n\t\treturn (\n\t\t\trect.top >= 0 &&\n\t\t\trect.left >= 0 &&\n\t\t\trect.bottom <= ( window.innerHeight || html.clientHeight ) &&\n\t\t\trect.right <= ( window.innerWidth || html.clientWidth )\n\t\t);\n\t},\n\n\tscrollToView: function( view ) {\n\t\t// Timeout according to preview resize css animation duration\n\t\tsetTimeout( function() {\n\t\t\tqazana.$previewContents.find( 'html, body' ).animate( {\n\t\t\t\tscrollTop: view.$el.offset().top - qazana.$preview[0].contentWindow.innerHeight / 2\n\t\t\t} );\n\t\t}, 500 );\n\t}\n};\n\nmodule.exports = helpers;\n",
    "var HotKeys = function( $ ) {\n\tvar self = this,\n\t\thotKeysHandlers = {};\n\n\tvar keysDictionary = {\n\t\tdel: 46,\n\t\td: 68,\n\t\tl: 76,\n\t\tm: 77,\n\t\tp: 80,\n\t\ts: 83\n\t};\n\n\tvar isMac = function() {\n\t\treturn -1 !== navigator.userAgent.indexOf( 'Mac OS X' );\n\t};\n\n\tvar initHotKeysHandlers = function() {\n\n\t\thotKeysHandlers[ keysDictionary.del ] = {\n\t\t\tdeleteElement: {\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\tvar isEditorOpen = 'editor' === qazana.getPanelView().getCurrentPageName(),\n\t\t\t\t\t\tisInputTarget = $( event.target ).is( ':input, .qazana-input' );\n\n\t\t\t\t\treturn isEditorOpen && ! isInputTarget;\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tqazana.getPanelView().getCurrentPageView().getOption( 'editedElementView' ).confirmRemove();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\thotKeysHandlers[ keysDictionary.d ] = {\n\t\t\t/* Waiting for CTRL+Z / CTRL+Y\n\t\t\tduplicateElement: {\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\treturn self.isControlEvent( event );\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tvar panel = qazana.getPanelView();\n\n\t\t\t\t\tif ( 'editor' !== panel.getCurrentPageName() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tpanel.getCurrentPageView().getOption( 'editedElementView' ).duplicate();\n\t\t\t\t}\n\t\t\t}*/\n\t\t};\n\n\t\thotKeysHandlers[ keysDictionary.l ] = {\n\t\t\tshowTemplateLibrary: {\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\treturn self.isControlEvent( event ) && event.shiftKey;\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tqazana.templates.showTemplatesModal();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\thotKeysHandlers[ keysDictionary.m ] = {\n\t\t\tchangeDeviceMode: {\n\t\t\t\tdevices: [ 'desktop', 'tablet', 'mobile' ],\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\treturn self.isControlEvent( event ) && event.shiftKey;\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tvar currentDeviceMode = qazana.channels.deviceMode.request( 'currentMode' ),\n\t\t\t\t\t\tmodeIndex = this.devices.indexOf( currentDeviceMode );\n\n\t\t\t\t\tmodeIndex++;\n\n\t\t\t\t\tif ( modeIndex >= this.devices.length ) {\n\t\t\t\t\t\tmodeIndex = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tqazana.changeDeviceMode( this.devices[ modeIndex ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\thotKeysHandlers[ keysDictionary.p ] = {\n\t\t\tchangeEditMode: {\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\treturn self.isControlEvent( event );\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tqazana.getPanelView().modeSwitcher.currentView.toggleMode();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\thotKeysHandlers[ keysDictionary.s ] = {\n\t\t\tsaveEditor: {\n\t\t\t\tisWorthHandling: function( event ) {\n\t\t\t\t\treturn self.isControlEvent( event );\n\t\t\t\t},\n\t\t\t\thandle: function() {\n\t\t\t\t\tqazana.getPanelView().getFooterView()._publishBuilder();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tvar applyHotKey = function( event ) {\n\t\tvar handlers = hotKeysHandlers[ event.which ];\n\n\t\tif ( ! handlers ) {\n\t\t\treturn;\n\t\t}\n\n\t\t_.each( handlers, function( handler ) {\n\t\t\tif ( handler.isWorthHandling && ! handler.isWorthHandling( event ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Fix for some keyboard sources that consider alt key as ctrl key\n\t\t\tif ( ! handler.allowAltKey && event.altKey ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\thandler.handle( event );\n\t\t} );\n\t};\n\n\tvar bindEvents = function() {\n\t\tself.bindListener( qazana.$window );\n\t};\n\n\tthis.isControlEvent = function( event ) {\n\t\treturn event[ isMac() ? 'metaKey' : 'ctrlKey' ];\n\t};\n\n\tthis.addHotKeyHandler = function( keyCode, handlerName, handler ) {\n\t\tif ( ! hotKeysHandlers[ keyCode ] ) {\n\t\t\thotKeysHandlers[ keyCode ] = {};\n\t\t}\n\n\t\thotKeysHandlers[ keyCode ][ handlerName ] = handler;\n\t};\n\n\tthis.bindListener = function( $listener ) {\n\t\t$listener.on( 'keydown', applyHotKey );\n\t};\n\n\tthis.init = function() {\n\t\tinitHotKeysHandlers();\n\n\t\tbindEvents();\n\t};\n};\n\nmodule.exports = new HotKeys( jQuery );\n",
    "var ImagesManager;\n\nImagesManager = function() {\n\tvar self = this;\n\n\tvar cache = {};\n\n\tvar debounceDelay = 300;\n\n\tvar registeredItems = [];\n\n\tvar getNormalizedSize = function( image ) {\n\t\tvar size,\n\t\t\timageSize = image.size;\n\n\t\tif ( 'custom' === imageSize ) {\n\t\t\tvar customDimension = image.dimension;\n\n\t\t\tif ( customDimension.width || customDimension.height ) {\n\t\t\t\tsize = 'custom_' + customDimension.width + 'x' + customDimension.height;\n\t\t\t} else {\n\t\t\t\treturn 'full';\n\t\t\t}\n\t\t} else {\n\t\t\tsize = imageSize;\n\t\t}\n\n\t\treturn size;\n\t};\n\n\tself.onceTriggerChange = _.once( function( model ) {\n\t\twindow.setTimeout( function() {\n\t\t\tmodel.get( 'settings' ).trigger( 'change', model.get( 'settings' ) );\n\t\t}, 700 );\n\t} );\n\n\tself.getImageUrl = function( image ) {\n\t\t// Register for AJAX checking\n\t\tself.registerItem( image );\n\n\t\tvar imageUrl = self.getItem( image );\n\n\t\t// If it's not in cache, like a new dropped widget or a custom size - get from settings\n\t\tif ( ! imageUrl ) {\n\n\t\t\tif ( 'custom' === image.size ) {\n\n\t\t\t\tif ( qazana.getPanelView() && 'editor' === qazana.getPanelView().currentPageName && image.model ) {\n\t\t\t\t\t// Trigger change again, so it's will load from the cache\n\t\t\t\t\tself.onceTriggerChange( image.model );\n\t\t\t\t}\n\n\t\t\t\treturn ;\n\t\t\t}\n\n\t\t\t// If it's a new dropped widget\n\t\t\timageUrl = image.url;\n\t\t}\n\n\t\treturn imageUrl;\n\t};\n\n\tself.getItem = function( image ) {\n\t\tvar size = getNormalizedSize( image ),\n\t\t\tid =  image.id;\n\n\t\tif ( ! size ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( cache[ id ] && cache[ id ][ size ] ) {\n\t\t\treturn cache[ id ][ size ];\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tself.registerItem = function( image ) {\n\t\tif ( '' === image.id ) {\n\t\t\t// It's a new dropped widget\n\t\t\treturn;\n\t\t}\n\n\t\tif ( self.getItem( image ) ) {\n\t\t\t// It's already in cache\n\t\t\treturn;\n\t\t}\n\n\t\tregisteredItems.push( image );\n\n\t\tself.debounceGetRemoteItems();\n\t};\n\n\tself.getRemoteItems = function() {\n\t\tvar requestedItems = [],\n\t\tregisteredItemsLength = Object.keys( registeredItems ).length,\n\t\t\timage,\n\t\t\tindex;\n\n\t\t// It's one item, so we can render it from remote server\n\t\tif ( 0 === registeredItemsLength ) {\n\t\t\treturn;\n\t\t} else if ( 1 === registeredItemsLength ) {\n\t\t\tfor ( index in registeredItems ) {\n\t\t\t\timage = registeredItems[ index ];\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ( image && image.model ) {\n\t\t\t\timage.model.renderRemoteServer();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tfor ( index in registeredItems ) {\n\t\t\timage = registeredItems[ index ];\n\n\t\t\tvar size = getNormalizedSize( image ),\n\t\t\t\tid = image.id,\n\t\t\t\tisFirstTime = ! cache[ id ] || 0 === Object.keys( cache[ id ] ).length;\n\n\t\t\trequestedItems.push( {\n\t\t\t\tid: id,\n\t\t\t\tsize: size,\n\t\t\t\tis_first_time: isFirstTime\n\t\t\t} );\n\t\t}\n\n\t\twindow.qazana.ajax.send(\n\t\t\t'get_images_details', {\n\t\t\t\tdata: {\n\t\t\t\t\titems: requestedItems\n\t\t\t\t},\n\t\t\t\tsuccess: function( data ) {\n\t\t\t\t\tvar id,\n\t\t\t\t\t\tsize;\n\n\t\t\t\t\tfor ( id in data ) {\n\t\t\t\t\t\tif ( ! cache[ id ] ) {\n\t\t\t\t\t\t\tcache[ id ] = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( size in data[ id ] ) {\n\t\t\t\t\t\t\tcache[ id ][ size ] = data[ id ][ size ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tregisteredItems = [];\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tself.debounceGetRemoteItems = _.debounce( self.getRemoteItems, debounceDelay );\n};\n\nmodule.exports = new ImagesManager();\n",
    "/**\n * HTML5 - Drag and Drop\n */\n;(function( $ ) {\n\n\tvar hasFullDataTransferSupport = function( event ) {\n\t\ttry {\n\t\t\tevent.originalEvent.dataTransfer.setData( 'test', 'test' );\n\n\t\t\tevent.originalEvent.dataTransfer.clearData( 'test' );\n\n\t\t\treturn true;\n\t\t} catch ( e ) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tvar Draggable = function( userSettings ) {\n\t\tvar self = this,\n\t\t\tsettings = {},\n\t\t\telementsCache = {},\n\t\t\tdefaultSettings = {\n\t\t\t\telement: '',\n\t\t\t\tgroups: null,\n\t\t\t\tonDragStart: null,\n\t\t\t\tonDragEnd: null\n\t\t\t};\n\n\t\tvar initSettings = function() {\n\t\t\t$.extend( true, settings, defaultSettings, userSettings );\n\t\t};\n\n\t\tvar initElementsCache = function() {\n\t\t\telementsCache.$element = $( settings.element );\n\t\t};\n\n\t\tvar buildElements = function() {\n\t\t\telementsCache.$element.attr( 'draggable', true );\n\t\t};\n\n\t\tvar onDragEnd = function( event ) {\n\t\t\tif ( $.isFunction( settings.onDragEnd ) ) {\n\t\t\t\tsettings.onDragEnd.call( elementsCache.$element, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar onDragStart = function( event ) {\n\t\t\tvar groups = settings.groups || [],\n\t\t\t\tdataContainer = {\n\t\t\t\t\tgroups: groups\n\t\t\t\t};\n\n\t\t\tif ( hasFullDataTransferSupport( event ) ) {\n\t\t\t\tevent.originalEvent.dataTransfer.setData( JSON.stringify( dataContainer ), true );\n\t\t\t}\n\n\t\t\tif ( $.isFunction( settings.onDragStart ) ) {\n\t\t\t\tsettings.onDragStart.call( elementsCache.$element, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar attachEvents = function() {\n\t\t\telementsCache.$element\n\t\t\t\t.on( 'dragstart', onDragStart )\n\t\t\t\t.on( 'dragend', onDragEnd );\n\t\t};\n\n\t\tvar init = function() {\n\t\t\tinitSettings();\n\n\t\t\tinitElementsCache();\n\n\t\t\tbuildElements();\n\n\t\t\tattachEvents();\n\t\t};\n\n\t\tthis.destroy = function() {\n\t\t\telementsCache.$element.off( 'dragstart', onDragStart );\n\n\t\t\telementsCache.$element.removeAttr( 'draggable' );\n\t\t};\n\n\t\tinit();\n\t};\n\n\tvar Droppable = function( userSettings ) {\n\t\tvar self = this,\n\t\t\tsettings = {},\n\t\t\telementsCache = {},\n\t\t\tcurrentElement,\n\t\t\tcurrentSide,\n\t\t\tdefaultSettings = {\n\t\t\t\telement: '',\n\t\t\t\titems: '>',\n\t\t\t\thorizontalSensitivity: '10%',\n\t\t\t\taxis: [ 'vertical', 'horizontal' ],\n\t\t\t\tplaceholder: true,\n\t\t\t\tcurrentElementClass: 'html5dnd-current-element',\n\t\t\t\tplaceholderClass: 'html5dnd-placeholder',\n\t\t\t\thasDraggingOnChildClass: 'html5dnd-has-dragging-on-child',\n\t\t\t\tgroups: null,\n\t\t\t\tisDroppingAllowed: null,\n\t\t\t\tonDragEnter: null,\n\t\t\t\tonDragging: null,\n\t\t\t\tonDropping: null,\n\t\t\t\tonDragLeave: null\n\t\t\t};\n\n\t\tvar initSettings = function() {\n\t\t\t$.extend( settings, defaultSettings, userSettings );\n\t\t};\n\n\t\tvar initElementsCache = function() {\n\t\t\telementsCache.$element = $( settings.element );\n\n\t\t\telementsCache.$placeholder = $( '<div>', { 'class': settings.placeholderClass } );\n\t\t};\n\n\t\tvar hasHorizontalDetection = function() {\n\t\t\treturn -1 !== settings.axis.indexOf( 'horizontal' );\n\t\t};\n\n\t\tvar hasVerticalDetection = function() {\n\t\t\treturn -1 !== settings.axis.indexOf( 'vertical' );\n\t\t};\n\n\t\tvar checkHorizontal = function( offsetX, elementWidth ) {\n\t\t\tvar isPercentValue,\n\t\t\t\tsensitivity;\n\n\t\t\tif ( ! hasHorizontalDetection() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( ! hasVerticalDetection() ) {\n\t\t\t\treturn offsetX > elementWidth / 2 ? 'right' : 'left';\n\t\t\t}\n\n\t\t\tsensitivity = settings.horizontalSensitivity.match( /\\d+/ );\n\n\t\t\tif ( ! sensitivity ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tsensitivity = sensitivity[0];\n\n\t\t\tisPercentValue = /%$/.test( settings.horizontalSensitivity );\n\n\t\t\tif ( isPercentValue ) {\n\t\t\t\tsensitivity = elementWidth / sensitivity;\n\t\t\t}\n\n\t\t\tif ( offsetX > elementWidth - sensitivity ) {\n\t\t\t\treturn 'right';\n\t\t\t} else if ( offsetX < sensitivity ) {\n\t\t\t\treturn 'left';\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tvar setSide = function( event ) {\n\t\t\tvar $element = $( currentElement ),\n\t\t\t\telementHeight = $element.outerHeight() - elementsCache.$placeholder.outerHeight(),\n\t\t\t\telementWidth = $element.outerWidth();\n\n\t\t\tevent = event.originalEvent;\n\n\t\t\tif ( currentSide = checkHorizontal( event.offsetX, elementWidth ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( ! hasVerticalDetection() ) {\n\t\t\t\tcurrentSide = null;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar elementPosition = currentElement.getBoundingClientRect();\n\n\t\t\tcurrentSide = event.clientY > elementPosition.top + elementHeight / 2 ? 'bottom' : 'top';\n\t\t};\n\n\t\tvar insertPlaceholder = function() {\n\t\t\tif ( ! settings.placeholder ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar insertMethod = 'top' === currentSide ? 'prependTo' : 'appendTo';\n\n\t\t\telementsCache.$placeholder[ insertMethod ]( currentElement );\n\t\t};\n\n\t\tvar isDroppingAllowed = function( event ) {\n\t\t\tvar dataTransferTypes,\n\t\t\t\tdraggableGroups,\n\t\t\t\tisGroupMatch,\n\t\t\t\tisDroppingAllowed;\n\n\t\t\tif ( settings.groups && hasFullDataTransferSupport( event ) ) {\n\t\t\t\tdataTransferTypes = event.originalEvent.dataTransfer.types;\n\n\t\t\t\tisGroupMatch = false;\n\n\t\t\t\tdataTransferTypes = Array.prototype.slice.apply( dataTransferTypes ); // Convert to array, since Firefox hold it as DOMStringList\n\n\t\t\t\tdataTransferTypes.forEach( function( type ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdraggableGroups = JSON.parse( type );\n\n\t\t\t\t\t\tif ( ! draggableGroups.groups.slice ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsettings.groups.forEach( function( groupName ) {\n\n\t\t\t\t\t\t\tif ( -1 !== draggableGroups.groups.indexOf( groupName ) ) {\n\t\t\t\t\t\t\t\tisGroupMatch = true;\n\n\t\t\t\t\t\t\t\treturn false; // stops the forEach from extra loops\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tif ( ! isGroupMatch ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $.isFunction( settings.isDroppingAllowed ) ) {\n\n\t\t\t\tisDroppingAllowed = settings.isDroppingAllowed.call( currentElement, currentSide, event, self );\n\n\t\t\t\tif ( ! isDroppingAllowed ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tvar onDragEnter = function( event ) {\n\t\t\tevent.stopPropagation();\n\n\t\t\tif ( currentElement ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcurrentElement = this;\n\n\t\t\telementsCache.$element.parents().each( function() {\n\t\t\t\tvar droppableInstance = $( this ).data( 'html5Droppable' );\n\n\t\t\t\tif ( ! droppableInstance ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdroppableInstance.doDragLeave();\n\t\t\t} );\n\n\t\t\tsetSide( event );\n\n\t\t\tif ( ! isDroppingAllowed( event ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tinsertPlaceholder();\n\n\t\t\telementsCache.$element.addClass( settings.hasDraggingOnChildClass );\n\n\t\t\t$( currentElement ).addClass( settings.currentElementClass );\n\n\t\t\tif ( $.isFunction( settings.onDragEnter ) ) {\n\t\t\t\tsettings.onDragEnter.call( currentElement, currentSide, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar onDragOver = function( event ) {\n\t\t\tevent.stopPropagation();\n\n\t\t\tif ( ! currentElement ) {\n\t\t\t\tonDragEnter.call( this, event );\n\t\t\t}\n\n\t\t\tvar oldSide = currentSide;\n\n\t\t\tsetSide( event );\n\n\t\t\tif ( ! isDroppingAllowed( event ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( oldSide !== currentSide ) {\n\t\t\t\tinsertPlaceholder();\n\t\t\t}\n\n\t\t\tif ( $.isFunction( settings.onDragging ) ) {\n\t\t\t\tsettings.onDragging.call( this, currentSide, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar onDragLeave = function( event ) {\n\t\t\tvar elementPosition = this.getBoundingClientRect();\n\n\t\t\tif ( 'dragleave' === event.type && ! (\n\t\t\t\tevent.clientX < elementPosition.left ||\n\t\t\t\tevent.clientX >= elementPosition.right ||\n\t\t\t\tevent.clientY < elementPosition.top ||\n\t\t\t\tevent.clientY >= elementPosition.bottom\n\t\t\t) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$( currentElement ).removeClass( settings.currentElementClass );\n\n\t\t\tself.doDragLeave();\n\t\t};\n\n\t\tvar onDrop = function( event ) {\n\t\t\tsetSide( event );\n\n\t\t\tif ( ! isDroppingAllowed( event ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( $.isFunction( settings.onDropping ) ) {\n\t\t\t\tsettings.onDropping.call( this, currentSide, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar attachEvents = function() {\n\t\t\telementsCache.$element\n\t\t\t\t.on( 'dragenter', settings.items, onDragEnter )\n\t\t\t\t.on( 'dragover', settings.items, onDragOver )\n\t\t\t\t.on( 'drop', settings.items, onDrop )\n\t\t\t\t.on( 'dragleave drop', settings.items, onDragLeave );\n\t\t};\n\n\t\tvar init = function() {\n\t\t\tinitSettings();\n\n\t\t\tinitElementsCache();\n\n\t\t\tattachEvents();\n\t\t};\n\n\t\tthis.doDragLeave = function() {\n\t\t\tif ( settings.placeholder ) {\n\t\t\t\telementsCache.$placeholder.remove();\n\t\t\t}\n\n\t\t\telementsCache.$element.removeClass( settings.hasDraggingOnChildClass );\n\n\t\t\tif ( $.isFunction( settings.onDragLeave ) ) {\n\t\t\t\tsettings.onDragLeave.call( currentElement, event, self );\n\t\t\t}\n\n\t\t\tcurrentElement = currentSide = null;\n\t\t};\n\n\t\tthis.destroy = function() {\n\t\t\telementsCache.$element\n\t\t\t\t.off( 'dragenter', settings.items, onDragEnter )\n\t\t\t\t.off( 'dragover', settings.items, onDragOver )\n\t\t\t\t.off( 'drop', settings.items, onDrop )\n\t\t\t\t.off( 'dragleave drop', settings.items, onDragLeave );\n\t\t};\n\n\t\tinit();\n\t};\n\n\tvar plugins = {\n\t\thtml5Draggable: Draggable,\n\t\thtml5Droppable: Droppable\n\t};\n\n\t$.each( plugins, function( pluginName, Plugin ) {\n\t\t$.fn[ pluginName ] = function( options ) {\n\t\t\toptions = options || {};\n\n\t\t\tthis.each( function() {\n\t\t\t\tvar instance = $.data( this, pluginName ),\n\t\t\t\t\thasInstance = instance instanceof Plugin;\n\n\t\t\t\tif ( hasInstance ) {\n\n\t\t\t\t\tif ( 'destroy' === options ) {\n\n\t\t\t\t\t\tinstance.destroy();\n\n\t\t\t\t\t\t$.removeData( this, pluginName );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\toptions.element = this;\n\n\t\t\t\t$.data( this, pluginName, new Plugin( options ) );\n\t\t\t} );\n\n\t\t\treturn this;\n\t\t};\n\t} );\n})( jQuery );\n",
    "/*!\n * jQuery Serialize Object v1.0.1\n */\n(function( $ ) {\n\t$.fn.qazanaSerializeObject = function() {\n\t\tvar serializedArray = this.serializeArray(),\n\t\t\tdata = {};\n\n\t\tvar parseObject = function( dataContainer, key, value ) {\n\t\t\tvar isArrayKey = /^[^\\[\\]]+\\[]/.test( key ),\n\t\t\t\tisObjectKey = /^[^\\[\\]]+\\[[^\\[\\]]+]/.test( key ),\n\t\t\t\tkeyName = key.replace( /\\[.*/, '' );\n\n\t\t\tif ( isArrayKey ) {\n\t\t\t\tif ( ! dataContainer[ keyName ] ) {\n\t\t\t\t\tdataContainer[ keyName ] = [];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( ! isObjectKey ) {\n\t\t\t\t\tif ( dataContainer.push ) {\n\t\t\t\t\t\tdataContainer.push( value );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataContainer[ keyName ] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( ! dataContainer[ keyName ] ) {\n\t\t\t\t\tdataContainer[ keyName ] = {};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar nextKeys = key.match( /\\[[^\\[\\]]*]/g );\n\n\t\t\tnextKeys[ 0 ] = nextKeys[ 0 ].replace( /\\[|]/g, '' );\n\n\t\t\treturn parseObject( dataContainer[ keyName ], nextKeys.join( '' ), value );\n\t\t};\n\n\t\t$.each( serializedArray, function() {\n\t\t\tparseObject( data, this.name, this.value );\n\t\t} );\n\t\treturn data;\n\t};\n})( jQuery );\n",
    "var presetsFactory;\n\npresetsFactory = {\n\n\tgetPresetsDictionary: function() {\n\t\treturn {\n\t\t\t11: 100 / 9,\n\t\t\t12: 100 / 8,\n\t\t\t14: 100 / 7,\n\t\t\t16: 100 / 6,\n\t\t\t33: 100 / 3,\n\t\t\t66: 2 / 3 * 100,\n\t\t\t83: 5 / 6 * 100\n\t\t};\n\t},\n\n\tgetAbsolutePresetValues: function( preset ) {\n\t\tvar clonedPreset = qazana.helpers.cloneObject( preset ),\n\t\t\tpresetDictionary = this.getPresetsDictionary();\n\n\t\t_.each( clonedPreset, function( unitValue, unitIndex ) {\n\t\t\tif ( presetDictionary[ unitValue ] ) {\n\t\t\t\tclonedPreset[ unitIndex ] = presetDictionary[ unitValue ];\n\t\t\t}\n\t\t} );\n\n\t\treturn clonedPreset;\n\t},\n\n\tgetPresets: function( columnsCount, presetIndex ) {\n\t\tvar presets = qazana.helpers.cloneObject( qazana.config.elements.section.presets );\n\n\t\tif ( columnsCount ) {\n\t\t\tpresets = presets[ columnsCount ];\n\t\t}\n\n\t\tif ( presetIndex ) {\n\t\t\tpresets = presets[ presetIndex ];\n\t\t}\n\n\t\treturn presets;\n\t},\n\n\tgetPresetByStructure: function( structure ) {\n\t\tvar parsedStructure = this.getParsedStructure( structure );\n\n\t\treturn this.getPresets( parsedStructure.columnsCount, parsedStructure.presetIndex );\n\t},\n\n\tgetParsedStructure: function( structure ) {\n\t\tstructure += ''; // Make sure this is a string\n\n\t\treturn {\n\t\t\tcolumnsCount: structure.slice( 0, -1 ),\n\t\t\tpresetIndex: structure.substr( -1 )\n\t\t};\n\t},\n\n\tgetPresetSVG: function( preset, svgWidth, svgHeight, separatorWidth ) {\n\t\tsvgWidth = svgWidth || 100;\n\t\tsvgHeight = svgHeight || 50;\n\t\tseparatorWidth = separatorWidth || 2;\n\n\t\tvar absolutePresetValues = this.getAbsolutePresetValues( preset ),\n\t\t\tpresetSVGPath = this._generatePresetSVGPath( absolutePresetValues, svgWidth, svgHeight, separatorWidth );\n\n\t\treturn this._createSVGPreset( presetSVGPath, svgWidth, svgHeight );\n\t},\n\n\t_createSVGPreset: function( presetPath, svgWidth, svgHeight ) {\n\t\tvar svg = document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' );\n\n\t\tsvg.setAttributeNS( 'http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink' );\n\t\tsvg.setAttribute( 'viewBox', '0 0 ' + svgWidth + ' ' + svgHeight );\n\n\t\tvar path = document.createElementNS( 'http://www.w3.org/2000/svg', 'path' );\n\n\t\tpath.setAttribute( 'd', presetPath );\n\n\t\tsvg.appendChild( path );\n\n\t\treturn svg;\n\t},\n\n\t_generatePresetSVGPath: function( preset, svgWidth, svgHeight, separatorWidth ) {\n\t\tvar DRAW_SIZE = svgWidth - separatorWidth * ( preset.length - 1 );\n\n\t\tvar xPointer = 0,\n\t\t\tdOutput = '';\n\n\t\tfor ( var i = 0; i < preset.length; i++ ) {\n\t\t\tif ( i ) {\n\t\t\t\tdOutput += ' ';\n\t\t\t}\n\n\t\t\tvar increment = preset[ i ] / 100 * DRAW_SIZE;\n\n\t\t\txPointer += increment;\n\n\t\t\tdOutput += 'M' + ( +xPointer.toFixed( 4 ) ) + ',0';\n\n\t\t\tdOutput += 'V' + svgHeight;\n\n\t\t\tdOutput += 'H' + ( +( xPointer - increment ).toFixed( 4 ) );\n\n\t\t\tdOutput += 'V0Z';\n\n\t\t\txPointer += separatorWidth;\n\t\t}\n\n\t\treturn dOutput;\n\t}\n};\n\nmodule.exports = presetsFactory;\n",
    "var Schemes,\n\tStylesheet = require( 'qazana-editor-utils/stylesheet' ),\n\tControlsCSSParser = require( 'qazana-editor-utils/controls-css-parser' );\n\nSchemes = function() {\n\tvar self = this,\n\t\tstylesheet = new Stylesheet(),\n\t\tschemes = {},\n\t\tsettings = {\n\t\t\tselectorWrapperPrefix: '.qazana-widget-'\n\t\t},\n\t\telements = {};\n\n\tvar buildUI = function() {\n\t\telements.$previewHead.append( elements.$style );\n\t};\n\n\tvar initElements = function() {\n\t\telements.$style = Backbone.$( '<style>', {\n\t\t\tid: 'qazana-style-scheme'\n\t\t});\n\n\t\telements.$previewHead = qazana.$previewContents.find( 'head' );\n\t};\n\n\tvar initSchemes = function() {\n\t\tschemes = qazana.helpers.cloneObject( qazana.config.schemes.items );\n\t};\n\n\tvar fetchControlStyles = function( control, controlsStack, widgetType ) {\n\t\tControlsCSSParser.addControlStyleRules( stylesheet, control, controlsStack, function( control ) {\n\t\t\treturn self.getSchemeValue( control.scheme.type, control.scheme.value, control.scheme.key ).value;\n\t\t}, [ '{{WRAPPER}}' ], [ settings.selectorWrapperPrefix + widgetType ] );\n\t};\n\n\tvar fetchWidgetControlsStyles = function( widget ) {\n\t\tvar widgetSchemeControls = self.getWidgetSchemeControls( widget );\n\n\t\t_.each( widgetSchemeControls, function( control ) {\n\t\t\tfetchControlStyles( control, widgetSchemeControls, widget.widget_type );\n\t\t} );\n\t};\n\n\tvar fetchAllWidgetsSchemesStyle = function() {\n\t\t_.each( qazana.config.widgets, function( widget ) {\n\t\t\tfetchWidgetControlsStyles(  widget  );\n\t\t} );\n\t};\n\n\tthis.init = function() {\n\t\tinitElements();\n\t\tbuildUI();\n\t\tinitSchemes();\n\n\t\treturn self;\n\t};\n\n\tthis.getWidgetSchemeControls = function( widget ) {\n\t\treturn _.filter( widget.controls, function( control ) {\n\t\t\treturn _.isObject( control.scheme );\n\t\t} );\n\t};\n\n\tthis.getSchemes = function() {\n\t\treturn schemes;\n\t};\n\n\tthis.getEnabledSchemesTypes = function() {\n\t\treturn qazana.config.schemes.enabled_schemes;\n\t};\n\n\tthis.getScheme = function( schemeType ) {\n\t\treturn schemes[ schemeType ];\n\t};\n\n\tthis.getSchemeValue = function( schemeType, value, key ) {\n\t\tif ( this.getEnabledSchemesTypes().indexOf( schemeType ) < 0 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar scheme = self.getScheme( schemeType ),\n\t\t\tschemeValue = scheme.items[ value ];\n\n\t\tif ( key && _.isObject( schemeValue ) ) {\n\t\t\tvar clonedSchemeValue = qazana.helpers.cloneObject( schemeValue );\n\n\t\t\tclonedSchemeValue.value = schemeValue.value[ key ];\n\n\t\t\treturn clonedSchemeValue;\n\t\t}\n\n\t\treturn schemeValue;\n\t};\n\n\tthis.printSchemesStyle = function() {\n\t\tstylesheet.empty();\n\n\t\tfetchAllWidgetsSchemesStyle();\n\n\t\telements.$style.text( stylesheet );\n\t};\n\n\tthis.resetSchemes = function( schemeName ) {\n\t\tschemes[ schemeName ] = qazana.helpers.cloneObject( qazana.config.schemes.items[ schemeName ] );\n\t};\n\n\tthis.saveScheme = function( schemeName ) {\n\t\tqazana.config.schemes.items[ schemeName ].items = qazana.helpers.cloneObject( schemes[ schemeName ].items );\n\n\t\tvar itemsToSave = {};\n\n\t\t_.each( schemes[ schemeName ].items, function( item, key ) {\n\t\t\titemsToSave[ key ] = item.value;\n\t\t} );\n\n\t\tNProgress.start();\n\n\t\tqazana.ajax.send( 'apply_scheme', {\n\t\t\tdata: {\n\t\t\t\tscheme_name: schemeName,\n\t\t\t\tdata: JSON.stringify( itemsToSave )\n\t\t\t},\n\t\t\tsuccess: function() {\n\t\t\t\tNProgress.done();\n\t\t\t}\n\t\t} );\n\t};\n\n\tthis.setSchemeValue = function( schemeName, itemKey, value ) {\n\t\tschemes[ schemeName ].items[ itemKey ].value = value;\n\t};\n};\n\nmodule.exports = new Schemes();\n",
    "( function( $ ) {\n\n\tvar Stylesheet = function() {\n\t\tvar self = this,\n\t\t\trules = {},\n\t\t\trawCSS = {},\n\t\t\tdevices = {};\n\n\t\tvar getDeviceMaxValue = function( deviceName ) {\n\t\t\tvar deviceNames = Object.keys( devices ),\n\t\t\t\tdeviceNameIndex = deviceNames.indexOf( deviceName ),\n\t\t\t\tnextIndex = deviceNameIndex + 1;\n\n\t\t\tif ( nextIndex >= deviceNames.length ) {\n\t\t\t\tthrow new RangeError( 'Max value for this device is out of range.' );\n\t\t\t}\n\n\t\t\treturn devices[ deviceNames[ nextIndex ] ] - 1;\n\t\t};\n\n\t\tvar queryToHash = function( query ) {\n\t\t\tvar hash = [];\n\n\t\t\t$.each( query, function( endPoint ) {\n\t\t\t\thash.push( endPoint + '_' + this );\n\t\t\t} );\n\n\t\t\treturn hash.join( '-' );\n\t\t};\n\n\t\tvar hashToQuery = function( hash ) {\n\t\t\tvar query = {};\n\n\t\t\thash = hash.split( '-' ).filter( String );\n\n\t\t\thash.forEach( function( singleQuery ) {\n\t\t\t\tvar queryParts = singleQuery.split( '_' ),\n\t\t\t\t\tendPoint = queryParts[0],\n\t\t\t\t\tdeviceName = queryParts[1];\n\n\t\t\t\tquery[ endPoint ] = 'max' === endPoint ? getDeviceMaxValue( deviceName ) : devices[ deviceName ];\n\t\t\t} );\n\n\t\t\treturn query;\n\t\t};\n\n\t\tvar addQueryHash = function( queryHash ) {\n\t\t\trules[ queryHash ] = {};\n\n\t\t\tvar hashes = Object.keys( rules );\n\n\t\t\tif ( hashes.length < 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Sort the devices from narrowest to widest\n\t\t\thashes.sort( function( a, b ) {\n\t\t\t\tif ( 'all' === a ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif ( 'all' === b ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tvar aQuery = hashToQuery( a ),\n\t\t\t\t\tbQuery = hashToQuery( b );\n\n\t\t\t\treturn bQuery.max - aQuery.max;\n\t\t\t} );\n\n\t\t\tvar sortedRules = {};\n\n\t\t\thashes.forEach( function( deviceName ) {\n\t\t\t\tsortedRules[ deviceName ] = rules[ deviceName ];\n\t\t\t} );\n\n\t\t\trules = sortedRules;\n\t\t};\n\n\t\tvar getQueryHashStyleFormat = function( queryHash ) {\n\t\t\tvar query = hashToQuery( queryHash ),\n\t\t\t\tstyleFormat = [];\n\n\t\t\t$.each( query, function( endPoint ) {\n\t\t\t\tstyleFormat.push( '(' + endPoint + '-width:' + this + 'px)' );\n\t\t\t} );\n\n\t\t\treturn '@media' + styleFormat.join( ' and ' );\n\t\t};\n\n\t\tthis.addDevice = function( deviceName, deviceValue ) {\n\t\t\tdevices[ deviceName ] = deviceValue;\n\n\t\t\tvar deviceNames = Object.keys( devices );\n\n\t\t\tif ( deviceNames.length < 2 ) {\n\t\t\t\treturn self;\n\t\t\t}\n\n\t\t\t// Sort the devices from narrowest to widest\n\t\t\tdeviceNames.sort( function( a, b ) {\n\t\t\t\treturn devices[ a ] - devices[ b ];\n\t\t\t} );\n\n\t\t\tvar sortedDevices = {};\n\n\t\t\tdeviceNames.forEach( function( deviceName ) {\n\t\t\t\tsortedDevices[ deviceName ] = devices[ deviceName ];\n\t\t\t} );\n\n\t\t\tdevices = sortedDevices;\n\n\t\t\treturn self;\n\t\t};\n\n\t\tthis.addRawCSS = function( key, css ) {\n\t\t\trawCSS[ key ] = css;\n\t\t};\n\n\t\tthis.addRules = function( selector, styleRules, query ) {\n\t\t\tvar queryHash = 'all';\n\n\t\t\tif ( ! _.isEmpty( query ) ) {\n\t\t\t\tqueryHash = queryToHash( query );\n\t\t\t}\n\n\t\t\tif ( ! rules[ queryHash ] ) {\n\t\t\t\taddQueryHash( queryHash );\n\t\t\t}\n\n\t\t\tif ( ! styleRules ) {\n\t\t\t\tvar parsedRules = selector.match( /[^{]+\\{[^}]+}/g );\n\n\t\t\t\t$.each( parsedRules, function() {\n\t\t\t\t\tvar parsedRule = this.match( /([^{]+)\\{([^}]+)}/ );\n\n\t\t\t\t\tif ( parsedRule ) {\n\t\t\t\t\t\tself.addRules( parsedRule[1].trim(), parsedRule[2].trim(), query );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( ! rules[ queryHash ][ selector ] ) {\n\t\t\t\trules[ queryHash ][ selector ] = {};\n\t\t\t}\n\n\t\t\tif ( 'string' === typeof styleRules ) {\n\t\t\t\tstyleRules = styleRules.split( ';' ).filter( String );\n\n\t\t\t\tvar orderedRules = {};\n\n\t\t\t\ttry {\n\t\t\t\t\t$.each( styleRules, function() {\n\t\t\t\t\t\tvar property = this.split( /:(.*)?/ );\n\n\t\t\t\t\t\torderedRules[ property[0].trim() ] = property[1].trim().replace( ';', '' );\n\t\t\t\t\t} );\n\t\t\t\t} catch ( error ) { // At least one of the properties is incorrect\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstyleRules = orderedRules;\n\t\t\t}\n\n\t\t\t$.extend( rules[ queryHash ][ selector ], styleRules );\n\n\t\t\treturn self;\n\t\t};\n\n\t\tthis.getRules = function() {\n\t\t\treturn rules;\n\t\t};\n\n\t\tthis.empty = function() {\n\t\t\trules = {};\n\t\t\trawCSS = {};\n\t\t};\n\n\t\tthis.toString = function() {\n\t\t\tvar styleText = '';\n\n\t\t\t$.each( rules, function( queryHash ) {\n\t\t\t\tvar deviceText = Stylesheet.parseRules( this );\n\n\t\t\t\tif ( 'all' !== queryHash ) {\n\t\t\t\t\tdeviceText = getQueryHashStyleFormat( queryHash ) + '{' + deviceText + '}';\n\t\t\t\t}\n\n\t\t\t\tstyleText += deviceText;\n\t\t\t} );\n\n\t\t\t$.each( rawCSS, function() {\n\t\t\t\tstyleText += this;\n\t\t\t} );\n\n\t\t\treturn styleText;\n\t\t};\n\t};\n\n\tStylesheet.parseRules = function( rules ) {\n\t\tvar parsedRules = '';\n\n\t\t$.each( rules, function( selector ) {\n\t\t\tvar selectorContent = Stylesheet.parseProperties( this );\n\n\t\t\tif ( selectorContent ) {\n\t\t\t\tparsedRules += selector + '{' + selectorContent + '}';\n\t\t\t}\n\t\t} );\n\n\t\treturn parsedRules;\n\t};\n\n\tStylesheet.parseProperties = function( properties ) {\n\t\tvar parsedProperties = '';\n\n\t\t$.each( properties, function( propertyKey ) {\n\t\t\tif ( this ) {\n\t\t\t\tparsedProperties += propertyKey + ':' + this + ';';\n\t\t\t}\n\t\t} );\n\n\t\treturn parsedProperties;\n\t};\n\n\tmodule.exports = Stylesheet;\n} )( jQuery );\n",
    "var Module = require( 'qazana-utils/module' ),\n\tValidator;\n\nValidator = Module.extend( {\n\terrors: [],\n\n\t__construct: function( settings ) {\n\t\tvar customValidationMethod = settings.customValidationMethod;\n\n\t\tif ( customValidationMethod ) {\n\t\t\tthis.validationMethod = customValidationMethod;\n\t\t}\n\t},\n\n\tisValid: function() {\n\t\tvar validationErrors = this.validationMethod.apply( this, arguments );\n\n\t\tif ( validationErrors.length ) {\n\t\t\tthis.errors = validationErrors;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tvalidationMethod: function() {\n\t\treturn [];\n\t}\n} );\n\nmodule.exports = Validator;\n",
    "var AddSectionView;\n\nAddSectionView = Marionette.ItemView.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-qazana-add-section' ),\n\n\tattributes: {\n\t\t'data-view': 'choose-action'\n\t},\n\n\tui: {\n\t\taddNewSection: '.qazana-add-new-section',\n\t\tcloseButton: '.qazana-add-section-close',\n\t\taddSectionButton: '.qazana-add-section-button',\n\t\taddTemplateButton: '.qazana-add-template-button',\n\t\tselectPreset: '.qazana-select-preset',\n\t\tpresets: '.qazana-preset'\n\t},\n\n\tevents: {\n\t\t'click @ui.addSectionButton': 'onAddSectionButtonClick',\n\t\t'click @ui.addTemplateButton': 'onAddTemplateButtonClick',\n\t\t'click @ui.closeButton': 'onCloseButtonClick',\n\t\t'click @ui.presets': 'onPresetSelected'\n\t},\n\n\tclassName: function() {\n\t\treturn 'qazana-add-section qazana-visible-desktop';\n\t},\n\n\taddSection: function( properties, options ) {\n\t\treturn qazana.sections.currentView.addSection( properties, options );\n\t},\n\n\tsetView: function( view ) {\n\t\tthis.$el.attr( 'data-view', view );\n\t},\n\n\tshowSelectPresets: function() {\n\t\tthis.setView( 'select-preset' );\n\t},\n\n\tcloseSelectPresets: function() {\n\t\tthis.setView( 'choose-action' );\n\t},\n\n\tgetTemplatesModalOptions: function() {\n\t\treturn {\n\t\t\tonReady: function() {\n\t\t\t\tqazana.templates.showTemplates();\n\t\t\t}\n\t\t};\n\t},\n\n\tonAddSectionButtonClick: function() {\n\t\tthis.showSelectPresets();\n\t},\n\n\tonAddTemplateButtonClick: function() {\n\t\tqazana.templates.startModal( this.getTemplatesModalOptions() );\n\t},\n\n\tonRender: function() {\n\t\tthis.$el.html5Droppable( {\n\t\t\taxis: [ 'vertical' ],\n\t\t\tgroups: [ 'qazana-element' ],\n\t\t\tplaceholder: false,\n\t\t\tcurrentElementClass: 'qazana-html5dnd-current-element',\n\t\t\thasDraggingOnChildClass: 'qazana-dragging-on-child',\n\t\t\tonDropping: _.bind( this.onDropping, this )\n\t\t} );\n\t},\n\n\tonPresetSelected: function( event ) {\n\t\tthis.closeSelectPresets();\n\n\t\tvar selectedStructure = event.currentTarget.dataset.structure,\n\t\t\tparsedStructure = qazana.presetsFactory.getParsedStructure( selectedStructure ),\n\t\t\telements = [],\n\t\t\tloopIndex;\n\n\t\tfor ( loopIndex = 0; loopIndex < parsedStructure.columnsCount; loopIndex++ ) {\n\t\t\telements.push( {\n\t\t\t\tid: qazana.helpers.getUniqueID(),\n\t\t\t\telType: 'column',\n\t\t\t\tsettings: {},\n\t\t\t\telements: []\n\t\t\t} );\n\t\t}\n\n\t\tqazana.channels.data.trigger( 'element:before:add', {\n\t\t\telType: 'section'\n\t\t} );\n\n\t\tvar newSection = this.addSection( { elements: elements } );\n\n\t\tnewSection.setStructure( selectedStructure );\n\n\t\tqazana.channels.data.trigger( 'element:after:add' );\n\t},\n\n\tonDropping: function() {\n\t\tqazana.channels.data.trigger( 'section:before:drop' );\n\t\tthis.addSection().addElementFromPanel();\n\t\tqazana.channels.data.trigger( 'section:after:drop' );\n\t}\n} );\n\nmodule.exports = AddSectionView;\n",
    "var BaseAddSectionView = require( 'qazana-views/add-section/base' );\n\nmodule.exports = BaseAddSectionView.extend( {\n\tid: 'qazana-add-new-section',\n\n\tonCloseButtonClick: function() {\n\t\tthis.closeSelectPresets();\n\t}\n} );\n",
    "var BaseAddSectionView = require( 'qazana-views/add-section/base' );\n\nmodule.exports = BaseAddSectionView.extend( {\n\toptions: {\n\t\tatIndex: null\n\t},\n\n\tclassName: function() {\n\t\treturn BaseAddSectionView.prototype.className.apply( this, arguments ) + ' qazana-add-section-inline';\n\t},\n\n\taddSection: function( properties, options ) {\n\t\toptions = options || {};\n\n\t\toptions.at = this.getOption( 'atIndex' );\n\n\t\treturn BaseAddSectionView.prototype.addSection.call( this, properties, options );\n\t},\n\n\tgetTemplatesModalOptions: function() {\n\t\treturn _.extend( BaseAddSectionView.prototype.getTemplatesModalOptions.apply( this, arguments ), {\n\t\t\timportOptions: {\n\t\t\t\tat: this.getOption( 'atIndex' )\n\t\t\t}\n\t\t} );\n\t},\n\n\tfadeToDeath: function() {\n\t\tvar self = this;\n\n\t\tself.$el.slideUp( function() {\n\t\t\tself.destroy();\n\t\t} );\n\t},\n\n\tonCloseButtonClick: function() {\n\t\tthis.fadeToDeath();\n\t},\n\n\tonPresetSelected: function() {\n\t\tBaseAddSectionView.prototype.onPresetSelected.apply( this, arguments );\n\n\t\tthis.destroy();\n\t},\n\n\tonAddTemplateButtonClick: function() {\n\t\tBaseAddSectionView.prototype.onAddTemplateButtonClick.apply( this, arguments );\n\n\t\tthis.destroy();\n\t},\n\n\tonDropping: function() {\n\t\tBaseAddSectionView.prototype.onDropping.apply( this, arguments );\n\n\t\tthis.destroy();\n\t}\n} );\n",
    "module.exports = Marionette.CompositeView.extend( {\n\n\tgetBehavior: function( name ) {\n\t\treturn this._behaviors[ Object.keys( this.behaviors() ).indexOf( name ) ];\n\t},\n\n\taddChildModel: function( model, options ) {\n\t\treturn this.collection.add( model, options, true );\n\t},\n\n\taddChildElement: function( itemData, options ) {\n\t\toptions = options || {};\n\n\t\tvar myChildType = this.getChildType(),\n\t\t\telType = itemData.get ? itemData.get( 'elType' ) : itemData.elType;\n\n\t\tif ( -1 === myChildType.indexOf( elType ) ) {\n\t\t\tdelete options.at;\n\n\t\t\treturn this.children.last().addChildElement( itemData, options );\n\t\t}\n\n\t\tvar newModel = this.addChildModel( itemData, options ),\n\t\t\tnewView = this.children.findByModel( newModel );\n\n\t\tnewView.edit();\n\n\t\treturn newView;\n\t}\n} );\n",
    "var BaseSettingsModel = require( 'qazana-models/base-settings' ),\n\tControlsCSSParser = require( 'qazana-editor-utils/controls-css-parser' ),\n\tValidator = require( 'qazana-editor-utils/validator' ),\n\tBaseContainer = require( 'qazana-views/base-container' ),\n\tBaseElementView;\n\nBaseElementView = BaseContainer.extend( {\n\ttagName: 'div',\n\n\tcontrolsCSSParser: null,\n\n\ttoggleEditTools: true,\n\n\tclassName: function() {\n\t\treturn this.getElementUniqueID();\n\t},\n\n\tattributes: function() {\n\t\tvar type = this.model.get( 'elType' );\n\n\t\tif ( 'widget'  === type ) {\n\t\t\ttype = this.model.get( 'widgetType' );\n\t\t}\n\n\t\treturn {\n\t\t\t'data-id': this.getID(),\n\t\t\t'data-element_type': type\n\t\t};\n\t},\n\n\tui: function() {\n\t\treturn {\n\t\t\ttriggerButton: '> .qazana-element-overlay .qazana-editor-element-trigger',\n\t\t\tduplicateButton: '> .qazana-element-overlay .qazana-editor-element-duplicate',\n\t\t\tremoveButton: '> .qazana-element-overlay .qazana-editor-element-remove',\n\t\t\tsaveButton: '> .qazana-element-overlay .qazana-editor-element-save',\n\t\t\tsettingsList: '> .qazana-element-overlay .qazana-editor-element-settings',\n\t\t\taddButton: '> .qazana-element-overlay .qazana-editor-element-add'\n\t\t};\n\t},\n\n\tbehaviors: function() {\n\t\tvar behaviors = {};\n\n\t\treturn qazana.hooks.applyFilters( 'elements/base/behaviors', behaviors, this );\n\t},\n\n\tgetBehavior: function( name ) {\n\t\treturn this._behaviors[ Object.keys( this.behaviors() ).indexOf( name ) ];\n\t},\n\n\tevents: function() {\n\t\treturn {\n\t\t\t'click @ui.removeButton': 'onClickRemove',\n\t\t\t'click @ui.saveButton': 'onClickSave',\n\t\t\t'click @ui.duplicateButton': 'onClickDuplicate',\n\t\t\t'click @ui.triggerButton': 'onClickEdit'\n\t\t};\n\t},\n\n\tgetElementType: function() {\n\t\treturn this.model.get( 'elType' );\n\t},\n\n\tgetChildType: function() {\n\t\treturn qazana.helpers.getElementChildType( this.getElementType() );\n\t},\n\n\tgetChildView: function( model ) {\n\t\tvar ChildView,\n\t\t\telType = model.get( 'elType' );\n\n\t\tif ( 'section' === elType ) {\n\t\t\tChildView = require( 'qazana-views/section' );\n\t\t} else if ( 'column' === elType ) {\n\t\t\tChildView = require( 'qazana-views/column' );\n\t\t} else {\n\t\t\tChildView = qazana.modules.WidgetView;\n\t\t}\n\n\t\treturn qazana.hooks.applyFilters( 'element/view', ChildView, model, this );\n\t},\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\telementModel: this.model,\n\t\t\teditModel: this.getEditModel()\n\t\t};\n\t},\n\n\tgetTemplateType: function() {\n\t\treturn 'js';\n\t},\n\n\tgetEditModel: function() {\n\t\treturn this.model;\n\t},\n\n\tinitialize: function() {\n\t\t// grab the child collection from the parent model\n\t\t// so that we can render the collection as children\n\t\t// of this parent element\n\t\tthis.collection = this.model.get( 'elements' );\n\n\t\tif ( this.collection ) {\n\t\t\tthis.listenTo( this.collection, 'add remove reset', this.onCollectionChanged, this );\n\t\t\tthis.listenTo( this.collection, 'switch', this.handleElementHover, this );\n\t\t}\n\n\t\tvar editModel = this.getEditModel();\n\n\t\tthis.listenTo( editModel.get( 'settings' ), 'change', this.onSettingsChanged, this );\n\t\tthis.listenTo( editModel.get( 'editSettings' ), 'change', this.onEditSettingsChanged, this );\n\n\t\tthis.initControlsCSSParser();\n\t},\n\n    handleElementHover: function( ) {\n\n        var self = this;\n\n        var config = {\n            class : 'qazana-element-settings-active'\n        };\n\n        var hoverConfig = {\n            sensitivity: 1, // number = sensitivity threshold (must be 1 or higher)\n            interval: 10, // number = milliseconds for onMouseOver polling interval\n            timeout: 500, // number = milliseconds delay before onMouseOut\n            over: function() {\n                self.$el.addClass( config.class );\n            },\n            out: function() {\n                self.$el.removeClass(config.class );\n            }\n        };\n\n        self.$el.hoverIntent(hoverConfig);\n\n    },\n\n\tedit: function() {\n\t\tqazana.getPanelView().openEditor( this.getEditModel(), this );\n\t},\n\n\taddElementFromPanel: function( options ) {\n\t\tvar elementView = qazana.channels.panelElements.request( 'element:selected' );\n\n\t\tvar itemData = {\n\t\t\tid: qazana.helpers.getUniqueID(),\n\t\t\telType: elementView.model.get( 'elType' )\n\t\t};\n\n\t\tif ( 'widget' === itemData.elType ) {\n\t\t\titemData.widgetType = elementView.model.get( 'widgetType' );\n\t\t} else if ( 'section' === itemData.elType ) {\n\t\t\titemData.elements = [];\n\t\t\titemData.isInner = true;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tvar customData = elementView.model.get( 'custom' );\n\n\t\tif ( customData ) {\n\t\t\t_.extend( itemData, customData );\n\t\t}\n\n\t\tqazana.channels.data.trigger( 'element:before:add', itemData );\n\n\t\tvar newView = this.addChildElement( itemData, options );\n\n\t\tif ( 'section' === newView.getElementType() && newView.isInner() ) {\n\t\t\tnewView.addEmptyColumn();\n\t\t}\n\n\t\tqazana.channels.data.trigger( 'element:after:add', itemData );\n\n\t},\n\n\taddControlValidator: function( controlName, validationCallback ) {\n\t\tvalidationCallback = _.bind( validationCallback, this );\n\n\t\tvar validator = new Validator( { customValidationMethod: validationCallback } ),\n\t\t\tvalidators = this.getEditModel().get( 'settings' ).validators;\n\n\t\tif ( ! validators[ controlName ] ) {\n\t\t\tvalidators[ controlName ] = [];\n\t\t}\n\n\t\tvalidators[ controlName ].push( validator );\n\t},\n\n\tisCollectionFilled: function() {\n\t\treturn false;\n\t},\n\n\tisInner: function() {\n\t\treturn !! this.model.get( 'isInner' );\n\t},\n\n\tinitControlsCSSParser: function() {\n\t\tthis.controlsCSSParser = new ControlsCSSParser( { id: this.model.cid } );\n\t},\n\n\tenqueueFonts: function() {\n\t\tvar editModel = this.getEditModel(),\n\t\t\tsettings = editModel.get( 'settings' );\n\n\t\t_.each( settings.getFontControls(), _.bind( function( control ) {\n\t\t\tvar fontFamilyName = editModel.getSetting( control.name );\n\n\t\t\tif ( _.isEmpty( fontFamilyName ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tqazana.helpers.enqueueFont( fontFamilyName );\n\t\t}, this ) );\n\t},\n\n\trenderStyles: function( settings ) {\n\t\tif ( ! settings ) {\n\t\t\tsettings = this.getEditModel().get( 'settings' );\n\t\t}\n\t\t\n\t\tvar self = this,\n\t\t\tcustomCSS = settings.get( 'custom_css' ),\n\t\t\textraCSS = qazana.hooks.applyFilters( 'editor/style/styleText', '', this );\n\t\t\t\n\t\tself.controlsCSSParser.stylesheet.empty();\n\n\t\tself.controlsCSSParser.addStyleRules( settings.getStyleControls(), settings.attributes, self.getEditModel().get( 'settings' ).controls, [ /{{ID}}/g, /{{WRAPPER}}/g ], [ self.getID(), '#qazana .' + self.getElementUniqueID() ] );\n\n\t\tself.controlsCSSParser.addStyleToDocument();\n\n\t\tif ( customCSS ) {\n\t\t\tself.controlsCSSParser.elements.$stylesheetElement.append( customCSS.replace( /selector/g, '#qazana .' + self.getElementUniqueID() ) );\n\t\t}\n\t\t\n\t\tif ( extraCSS ) {\n\t\t\tself.controlsCSSParser.elements.$stylesheetElement.append( extraCSS );\n\t\t}\n\t},\n\n\trenderCustomClasses: function() {\n\t\tvar self = this;\n\n\t\tself.$el.addClass( 'qazana-element' );\n\n\t\tvar settings = self.getEditModel().get( 'settings' ),\n\t\t\tclassControls = settings.getClassControls();\n\n\t\t// Remove all previous classes\n\t\t_.each( classControls, function( control ) {\n\t\t\tvar previousClassValue = settings.previous( control.name );\n\n\t\t\tif ( control.classes_dictionary ) {\n\t\t\t\tif ( undefined !== control.classes_dictionary[ previousClassValue ] ) {\n\t\t\t\t\tpreviousClassValue = control.classes_dictionary[ previousClassValue ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.$el.removeClass( control.prefix_class + previousClassValue );\n\t\t} );\n\n\t\t// Add new classes\n\t\t_.each( classControls, function( control ) {\n\t\t\tvar value = settings.attributes[ control.name ],\n\t\t\t\tclassValue = value;\n\n\t\t\tif ( control.classes_dictionary ) {\n\t\t\t\tif ( undefined !== control.classes_dictionary[ value ] ) {\n\t\t\t\t\tclassValue = control.classes_dictionary[ value ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar isVisible = qazana.helpers.isActiveControl( control, settings.attributes );\n\n\t\t\tif ( isVisible && ! _.isEmpty( classValue ) ) {\n\t\t\t\tself.$el\n\t\t\t\t\t.addClass( control.prefix_class + classValue )\n\t\t\t\t\t.addClass( _.result( self, 'className' ) );\n\t\t\t}\n\t\t} );\n\t},\n\n\trenderCustomElementID: function() {\n\t\tvar customElementID = this.getEditModel().get( 'settings' ).get( '_element_id' );\n\n\t\tthis.$el.attr( 'id', customElementID );\n\t},\n\n\tgetModelForRender: function() {\n\t\treturn qazana.hooks.applyFilters( 'element/templateHelpers/editModel', this.getEditModel(), this );\n\t},\n\n\trenderUIOnly: function() {\n\t\tvar editModel = this.getModelForRender();\n\n\t\tthis.renderStyles( editModel.get( 'settings' ) );\n\t\tthis.renderCustomClasses();\n\t\tthis.renderCustomElementID();\n\t\tthis.enqueueFonts();\n\t},\n\n\trenderUI: function() {\n\t\tthis.renderStyles();\n\t\tthis.renderCustomClasses();\n\t\tthis.renderCustomElementID();\n\t\tthis.enqueueFonts();\n\t},\n\n\trunReadyTrigger: function() {\n\t\t_.defer( _.bind( function() {\n\t\t\tqazanaFrontend.elementsHandler.runReadyTrigger( this.$el );\n\t\t}, this ) );\n\t},\n\n\tgetID: function() {\n\t\treturn this.model.get( 'id' );\n\t},\n\n\tgetElementUniqueID: function() {\n\t\treturn 'qazana-element-' + this.getID();\n\t},\n\n\tduplicate: function() {\n\t\tthis.trigger( 'request:duplicate' );\n\t},\n\n\trenderOnChange: function( settings ) {\n\t\t// Make sure is correct model\n\t\tif ( settings instanceof BaseSettingsModel ) {\n\t\t\tvar hasChanged = settings.hasChanged(),\n\t\t\t\tisContentChanged = ! hasChanged,\n\t\t\t\tisRenderRequired = ! hasChanged;\n\n\t\t\t_.each( settings.changedAttributes(), function( settingValue, settingKey ) {\n\t\t\t\tvar control = settings.getControl( settingKey );\n\n\t\t\t\tif ( ! control ) {\n\t\t\t\t\tisRenderRequired = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( 'none' !== control.render_type ) {\n\t\t\t\t\tisRenderRequired = true;\n\t\t\t\t}\n\n\t\t\t\tif ( -1 !== [ 'none', 'ui' ].indexOf( control.render_type ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( 'template' === control.render_type || ! settings.isStyleControl( settingKey ) && ! settings.isClassControl( settingKey ) && '_element_id' !== settingKey ) {\n\t\t\t\t\tisContentChanged = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( ! isRenderRequired ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( ! isContentChanged ) {\n\t\t\t\tthis.renderUIOnly();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Re-render the template\n\t\tvar templateType = this.getTemplateType(),\n\t\t\teditModel = this.getEditModel();\n\n\t\tif ( 'js' === templateType ) {\n\t\t\tthis.getEditModel().setHtmlCache();\n\t\t\tthis.render();\n\t\t\teditModel.renderOnLeave = true;\n\t\t} else {\n\t\t\teditModel.renderRemoteServer();\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\tself.renderUI();\n\n\t\tself.runReadyTrigger();\n\n\t\tif ( self.toggleEditTools ) {\n\t\t\tself.ui.settingsList.hoverIntent( function() {\n\t\t\t\tself.ui.triggerButton.addClass( 'qazana-active' );\n\t\t\t}, function() {\n\t\t\t\tself.ui.triggerButton.removeClass( 'qazana-active' );\n\t\t\t}, { timeout: 500 } );\n\t\t}\n\t},\n\n\tonCollectionChanged: function() {\n\t\tqazana.setFlagEditorChange( true );\n\t},\n\n\tonEditSettingsChanged: function( changedModel ) {\n\t\tthis.renderOnChange( changedModel );\n\t},\n\n\tonSettingsChanged: function( changedModel ) {\n\t\tqazana.setFlagEditorChange( true );\n\n\t\tthis.renderOnChange( changedModel );\n\t},\n\n\tonClickEdit: function( event ) {\n\t\tif ( ! Backbone.$( event.target ).closest( '.qazana-clickable' ).length ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tevent.stopPropagation();\n\t\t}\n\n\t\tvar activeMode = qazana.channels.dataEditMode.request( 'activeMode' );\n\n\t\tif ( 'edit' !== activeMode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.edit();\n\t},\n\n\tonClickDuplicate: function( event ) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.duplicate();\n\t},\n\n\tremoveElement: function() {\n\t\tqazana.channels.data.trigger( 'element:before:remove', this.model );\n\n\t\tvar parent = this._parent;\n\n\t\tparent.isManualRemoving = true;\n\n\t\tthis.model.destroy();\n\n\t\tparent.isManualRemoving = false;\n\n\t\tqazana.channels.data.trigger( 'element:after:remove', this.model );\n\t},\n\n\tonClickRemove: function( event ) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tthis.removeElement();\n\t},\n\n\tonClickSave: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tvar model = this.model;\n\n\t\tqazana.templates.startModal( {\n\t\t\tonReady: function() {\n\t\t\t\tqazana.templates.getLayout().showSaveTemplateView( model );\n\t\t\t}\n\t\t} );\n\t},\n\n\tonDestroy: function() {\n\t\tthis.controlsCSSParser.removeStyleFromDocument();\n\t}\n} );\n\nmodule.exports = BaseElementView;\n",
    "var SectionView = require( 'qazana-views/section' ),\n\tBaseContainer = require( 'qazana-views/base-container' ),\n\tBaseSectionsContainerView;\n\nBaseSectionsContainerView = BaseContainer.extend( {\n\tchildView: SectionView,\n\n\tbehaviors: function() {\n\t\tvar behaviors = {\n\t\t\tSortable: {\n\t\t\t\tbehaviorClass: require( 'qazana-behaviors/sortable' ),\n\t\t\t\telChildType: 'section'\n\t\t\t},\n\t\t\tHandleDuplicate: {\n\t\t\t\tbehaviorClass: require( 'qazana-behaviors/handle-duplicate' )\n\t\t\t},\n\t\t\tHandleAddMode: {\n\t\t\t\tbehaviorClass: require( 'qazana-behaviors/duplicate' )\n\t\t\t}\n\t\t};\n\n\t\treturn qazana.hooks.applyFilters( 'elements/base-section-container/behaviors', behaviors, this );\n\t},\n\n\tgetSortableOptions: function() {\n\t\treturn {\n\t\t\thandle: '> .qazana-element-overlay .qazana-editor-section-settings .qazana-editor-element-trigger',\n\t\t\titems: '> .qazana-section'\n\t\t};\n\t},\n\n\tgetChildType: function() {\n\t\treturn [ 'section' ];\n\t},\n\n\tisCollectionFilled: function() {\n\t\treturn false;\n\t},\n\n\tinitialize: function() {\n\t\tthis\n\t\t\t.listenTo( this.collection, 'add remove reset', this.onCollectionChanged )\n\t\t\t.listenTo( qazana.channels.panelElements, 'element:drag:start', this.onPanelElementDragStart )\n\t\t\t.listenTo( qazana.channels.panelElements, 'element:drag:end', this.onPanelElementDragEnd );\n\t},\n\n\taddSection: function( properties, options ) {\n\t\tvar newSection = {\n\t\t\tid: qazana.helpers.getUniqueID(),\n\t\t\telType: 'section',\n\t\t\tsettings: {},\n\t\t\telements: []\n\t\t};\n\n\t\tif ( properties ) {\n\t\t\t_.extend( newSection, properties );\n\t\t}\n\n\t\tvar newModel = this.addChildModel( newSection, options );\n\n\t\treturn this.children.findByModelCid( newModel.cid );\n\t},\n\n\tonCollectionChanged: function() {\n\t\tqazana.setFlagEditorChange( true );\n\t},\n\n\tonPanelElementDragStart: function() {\n\t\tqazana.helpers.disableElementEvents( this.$el.find( 'iframe' ) );\n\t},\n\n\tonPanelElementDragEnd: function() {\n\t\tqazana.helpers.enableElementEvents( this.$el.find( 'iframe' ) );\n\t}\n} );\n\nmodule.exports = BaseSectionsContainerView;\n",
    "var BaseElementView = require( 'qazana-views/base-element' ),\n\tElementEmptyView = require( 'qazana-views/element-empty' ),\n\tColumnView;\n\nColumnView = BaseElementView.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-qazana-element-column-content' ),\n\n\temptyView: ElementEmptyView,\n\n\tchildViewContainer: '> .qazana-column-wrap > .qazana-widget-wrap',\n\n\tbehaviors: function() {\n\t\tvar behaviors = BaseElementView.prototype.behaviors.apply( this, arguments );\n\n\t\t_.extend( behaviors, {\n\t\t\tSortable: {\n\t\t\t\tbehaviorClass: require( 'qazana-behaviors/sortable' ),\n\t\t\t\telChildType: 'widget'\n\t\t\t},\n\t\t\tResizable: {\n\t\t\t\tbehaviorClass: require( 'qazana-behaviors/resizable' )\n\t\t\t},\n\t\t\tHandleDuplicate: {\n\t\t\t\tbehaviorClass: require( 'qazana-behaviors/handle-duplicate' )\n\t\t\t},\n\t\t\tHandleAddMode: {\n\t\t\t\tbehaviorClass: require( 'qazana-behaviors/duplicate' )\n\t\t\t}\n\t\t} );\n\n\t\treturn qazana.hooks.applyFilters( 'elements/column/behaviors', behaviors, this );\n\t},\n\n\tclassName: function() {\n\t\tvar classes = BaseElementView.prototype.className.apply( this, arguments ),\n\t\t\ttype = this.isInner() ? 'inner' : 'top';\n\n\t\treturn classes + ' qazana-column qazana-' + type + '-column';\n\t},\n\n\ttagName: function() {\n\t\treturn this.model.getSetting( 'html_tag' ) || 'div';\n\t},\n\n\tui: function() {\n\t\tvar ui = BaseElementView.prototype.ui.apply( this, arguments );\n\n\t\tui.columnInner = '> .qazana-column-wrap';\n\n\t\tui.percentsTooltip = '> .qazana-element-overlay .qazana-column-percents-tooltip';\n\n\t\treturn ui;\n\t},\n\n\ttriggers: {\n\t\t'click @ui.addButton': 'click:new'\n\t},\n\n\tinitialize: function() {\n\t\tBaseElementView.prototype.initialize.apply( this, arguments );\n\n\t\tthis.addControlValidator( '_inline_size', this.onEditorInlineSizeInputChange );\n\t},\n\n\tisDroppingAllowed: function() {\n\t\tvar elementView = qazana.channels.panelElements.request( 'element:selected' ),\n\t\t\telType = elementView.model.get( 'elType' );\n\n\t\tif ( 'section' === elType ) {\n\t\t\treturn ! this.isInner();\n\t\t}\n\n\t\treturn 'widget' === elType;\n\t},\n\n\tgetPercentsForDisplay: function() {\n\t\tvar inlineSize = +this.model.getSetting( '_inline_size' ) || this.getPercentSize();\n\n\t\treturn inlineSize.toFixed( 1 ) + '%';\n\t},\n\n\tchangeSizeUI: function() {\n\t\tvar self = this,\n\t\t\tcolumnSize = self.model.getSetting( '_column_size' );\n\n\t\tself.$el.attr( 'data-col', columnSize );\n\n\t\t_.defer( function() { // Wait for the column size to be applied\n\t\t\tif ( self.ui.percentsTooltip ) {\n\t\t\t\tself.ui.percentsTooltip.text( self.getPercentsForDisplay() );\n\t\t\t}\n\t\t} );\n\t},\n\n\tgetPercentSize: function( size ) {\n\t\tif ( ! size ) {\n\t\t\tsize = this.el.getBoundingClientRect().width;\n\t\t}\n\n\t\treturn +( size / this.$el.parent().width() * 100 ).toFixed( 3 );\n\t},\n\n\tgetSortableOptions: function() {\n\t\treturn {\n\t\t\tconnectWith: '.qazana-widget-wrap',\n\t\t\titems: '> .qazana-element'\n\t\t};\n\t},\n\n\tchangeChildContainerClasses: function() {\n\t\tvar emptyClass = 'qazana-element-empty',\n\t\t\tpopulatedClass = 'qazana-element-populated';\n\n\t\tif ( this.collection.isEmpty() ) {\n\t\t\tthis.ui.columnInner.removeClass( populatedClass ).addClass( emptyClass );\n\t\t} else {\n\t\t\tthis.ui.columnInner.removeClass( emptyClass ).addClass( populatedClass );\n\t\t}\n\t},\n\n\t// Events\n\tonCollectionChanged: function() {\n\t\tBaseElementView.prototype.onCollectionChanged.apply( this, arguments );\n\n\t\tthis.changeChildContainerClasses();\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\tBaseElementView.prototype.onRender.apply( self, arguments );\n\n\t\tself.changeChildContainerClasses();\n\n\t\tself.changeSizeUI();\n\n\t\tself.$el.html5Droppable( {\n\t\t\titems: ' > .qazana-column-wrap > .qazana-widget-wrap > .qazana-element, >.qazana-column-wrap > .qazana-widget-wrap > .qazana-empty-view > .qazana-first-add',\n\t\t\taxis: [ 'vertical' ],\n\t\t\tgroups: [ 'qazana-element' ],\n\t\t\tisDroppingAllowed: _.bind( self.isDroppingAllowed, self ),\n\t\t\tcurrentElementClass: 'qazana-html5dnd-current-element',\n\t\t\tplaceholderClass: 'qazana-sortable-placeholder qazana-widget-placeholder',\n\t\t\thasDraggingOnChildClass: 'qazana-dragging-on-child',\n\t\t\tonDropping: function( side, event ) {\n\t\t\t\tevent.stopPropagation();\n\n\t\t\t\tvar newIndex = Backbone.$( this ).index();\n\n\t\t\t\tif ( 'bottom' === side ) {\n\t\t\t\t\tnewIndex++;\n\t\t\t\t}\n\n\t\t\t\tself.addElementFromPanel( { at: newIndex } );\n\t\t\t}\n\t\t} );\n\t},\n\n\tonSettingsChanged: function( settings ) {\n\t\tBaseElementView.prototype.onSettingsChanged.apply( this, arguments );\n\n\t\tvar changedAttributes = settings.changedAttributes();\n\n\t\tif ( '_column_size' in changedAttributes || '_inline_size' in changedAttributes ) {\n\t\t\tthis.changeSizeUI();\n\t\t}\n\t},\n\n\tonEditorInlineSizeInputChange: function( newValue, oldValue ) {\n\t\tvar errors = [],\n\t\t\tcolumnSize = this.model.getSetting( '_column_size' );\n\n\t\t// If there's only one column\n\t\tif ( 100 === columnSize ) {\n\t\t\terrors.push( 'Could not resize one column' );\n\n\t\t\treturn errors;\n\t\t}\n\n\t\tif ( ! oldValue ) {\n\t\t\toldValue = columnSize;\n\t\t}\n\n\t\ttry {\n\t\t\tthis._parent.resizeChild( this, +oldValue, +newValue );\n\t\t} catch ( e ) {\n\t\t\tif ( e.message === this._parent.errors.columnWidthTooLarge ) {\n\t\t\t\terrors.push( e.message );\n\t\t\t}\n\t\t}\n\n\t\treturn errors;\n\t}\n} );\n\nmodule.exports = ColumnView;\n",
    "var ControlsStack;\n\nControlsStack = Marionette.CompositeView.extend( {\n\tclassName: 'qazana-panel-controls-stack',\n\n\tactiveTab: null,\n\n\tactiveSection: null,\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\telementData: qazana.getElementData( this.model )\n\t\t};\n\t},\n\n\tui: function() {\n\t\treturn {\n\t\t\ttabs: '.qazana-panel-navigation-tab',\n\t\t\treloadButton: '.qazana-update-preview-button'\n\t\t};\n\t},\n\n\tevents: function() {\n\t\treturn {\n\t\t\t'click @ui.tabs': 'onClickTabControl',\n\t\t\t'click @ui.reloadButton': 'onReloadButtonClick'\n\t\t};\n\t},\n\n\tmodelEvents: {\n\t\t'destroy': 'onModelDestroy'\n\t},\n\n\tbehaviors: {\n\t\tHandleInnerTabs: {\n\t\t\tbehaviorClass: require( 'qazana-behaviors/inner-tabs' )\n\t\t}\n\t},\n\n\tinitialize: function() {\n\t\tthis.listenTo( qazana.channels.deviceMode, 'change', this.onDeviceModeChange );\n\t},\n\n\tfilter: function( controlModel ) {\n\t\tif ( controlModel.get( 'tab' ) !== this.activeTab ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( 'section' === controlModel.get( 'type' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar section = controlModel.get( 'section' );\n\n\t\treturn ! section || section === this.activeSection;\n\t},\n\n\tisVisibleSectionControl: function( sectionControlModel ) {\n\t\treturn this.activeTab === sectionControlModel.get( 'tab' );\n\t},\n\n\tactivateTab: function( $tab ) {\n\t\tvar self = this,\n\t\t\tactiveTab = this.activeTab = $tab.data( 'tab' );\n\n\t\tthis.ui.tabs.removeClass( 'active' );\n\n\t\t$tab.addClass( 'active' );\n\n\t\tvar sectionControls = this.collection.filter( function( controlModel ) {\n\t\t\treturn 'section' === controlModel.get( 'type' ) && self.isVisibleSectionControl( controlModel );\n\t\t} );\n\n\t\tif ( sectionControls[0] ) {\n\t\t\tthis.activateSection( sectionControls[0].get( 'name' ) );\n\t\t}\n\t},\n\n\tactivateSection: function( sectionName ) {\n\t\tthis.activeSection = sectionName;\n\t},\n\n\tgetChildView: function( item ) {\n\t\tvar controlType = item.get( 'type' );\n\n\t\treturn qazana.getControlView( controlType );\n\t},\n\n\topenActiveSection: function() {\n\t\tvar activeSection = this.activeSection,\n\t\t\tactiveSectionView = this.children.filter( function( view ) {\n\t\t\t\treturn activeSection === view.model.get( 'name' );\n\t\t\t} );\n\n\t\tif ( activeSectionView[0] ) {\n\t\t\tactiveSectionView[0].ui.heading.addClass( 'qazana-open' );\n\t\t}\n\t},\n\n\tonRenderCollection: function() {\n\t\tthis.openActiveSection();\n\t},\n\n\tonRenderTemplate: function() {\n\t\tthis.activateTab( this.ui.tabs.eq( 0 ) );\n\t},\n\n\tonModelDestroy: function() {\n\t\tthis.destroy();\n\t},\n\n\tonClickTabControl: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tvar $tab = this.$( event.currentTarget );\n\n\t\tif ( this.activeTab === $tab.data( 'tab' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.activateTab( $tab );\n\n\t\tthis._renderChildren();\n\t},\n\n\tonReloadButtonClick: function() {\n\t\tqazana.reloadPreview();\n\t},\n\n\tonDeviceModeChange: function() {\n\t\tthis.$el.removeClass( 'qazana-responsive-switchers-open' );\n\t},\n\n\tonChildviewControlSectionClicked: function( childView ) {\n\t\tvar isSectionOpen = childView.ui.heading.hasClass( 'qazana-open' );\n\n\t\tthis.activateSection( isSectionOpen ? null : childView.model.get( 'name' ) );\n\n\t\tthis._renderChildren();\n\t},\n\n\tonChildviewResponsiveSwitcherClick: function( childView, device ) {\n\t\tif ( 'desktop' === device ) {\n\t\t\tthis.$el.toggleClass( 'qazana-responsive-switchers-open' );\n\t\t}\n\t}\n} );\n\nmodule.exports = ControlsStack;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlBaseMultipleItemView;\n\nControlBaseMultipleItemView = ControlBaseItemView.extend( {\n\n\tapplySavedValue: function() {\n\t\tvar values = this.getControlValue(),\n\t\t\t$inputs = this.$( '[data-setting]' ),\n\t\t\tself = this;\n\n\t\t_.each( values, function( value, key ) {\n\t\t\tvar $input = $inputs.filter( function() {\n\t\t\t\treturn key === this.dataset.setting;\n\t\t\t} );\n\n\t\t\tself.setInputValue( $input, value );\n\t\t} );\n\t},\n\n\tgetControlValue: function( key ) {\n\t\tvar values = this.elementSettingsModel.get( this.model.get( 'name' ) );\n\n\t\tif ( ! Backbone.$.isPlainObject( values ) ) {\n\t\t\treturn {};\n\t\t}\n\n\t\tif ( key ) {\n\t\t\treturn values[ key ] || '';\n\t\t}\n\n\t\treturn qazana.helpers.cloneObject( values );\n\t},\n\n\tsetValue: function( key, value ) {\n\t\tvar values = this.getControlValue();\n\n\t\tif ( 'object' === typeof key ) {\n\t\t\t_.each( key, function( internalValue, internalKey ) {\n\t\t\t\tvalues[ internalKey ] = internalValue;\n\t\t\t} );\n\t\t} else {\n\t\t\tvalues[ key ] = value;\n\t\t}\n\n\t\tthis.setSettingsModel( values );\n\t},\n\n\tupdateElementModel: function( value, input ) {\n\t\tvar key = input.dataset.setting;\n\n\t\tthis.setValue( key, value );\n\t}\n}, {\n\t// Static methods\n\tgetStyleValue: function( placeholder, controlValue ) {\n\t\tif ( ! _.isObject( controlValue ) ) {\n\t\t\treturn ''; // invalid\n\t\t}\n\n\t\treturn controlValue[ placeholder ];\n\t}\n} );\n\nmodule.exports = ControlBaseMultipleItemView;\n",
    "var ControlBaseMultipleItemView = require( 'qazana-views/controls/base-multiple' ),\n\tControlBaseUnitsItemView;\n\nControlBaseUnitsItemView = ControlBaseMultipleItemView.extend( {\n\n\tgetCurrentRange: function() {\n\t\treturn this.getUnitRange( this.getControlValue( 'unit' ) );\n\t},\n\n\tgetUnitRange: function( unit ) {\n\t\tvar ranges = this.model.get( 'range' );\n\n\t\tif ( ! ranges || ! ranges[ unit ] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ranges[ unit ];\n\t}\n} );\n\nmodule.exports = ControlBaseUnitsItemView;\n",
    "var ControlBaseItemView;\n\nControlBaseItemView = Marionette.CompositeView.extend( {\n\tui: function() {\n\t\treturn {\n\t\t\tinput: 'input[data-setting][type!=\"checkbox\"][type!=\"radio\"]',\n\t\t\tcheckbox: 'input[data-setting][type=\"checkbox\"]',\n\t\t\tradio: 'input[data-setting][type=\"radio\"]',\n\t\t\tselect: 'select[data-setting]',\n\t\t\ttextarea: 'textarea[data-setting]',\n\t\t\tcontrolTitle: '.qazana-control-title',\n\t\t\tresponsiveSwitchers: '.qazana-responsive-switcher'\n\t\t};\n\t},\n\n\tbehaviors: function() {\n\t\tvar behaviors = {};\n\n\t\treturn qazana.hooks.applyFilters( 'controls/base/behaviors', behaviors, this );\n\t},\n\n\tgetBehavior: function( name ) {\n\t\treturn this._behaviors[ Object.keys( this.behaviors() ).indexOf( name ) ];\n\t},\n\n\tclassName: function() {\n\n\t\t// TODO: Any better classes for that?\n\t\tvar classes = 'qazana-control qazana-control-' + this.model.get( 'name' ) + ' qazana-control-type-' + this.model.get( 'type' ),\n\t\t\tmodelClasses = this.model.get( 'classes' ),\n\t\t\tresponsive = this.model.get( 'responsive' );\n\n\t\tif ( ! _.isEmpty( modelClasses ) ) {\n\t\t\tclasses += ' ' + modelClasses;\n\t\t}\n\n\t\tif ( ! _.isEmpty( this.model.get( 'section' ) ) ) {\n\t\t\tclasses += ' qazana-control-under-section';\n\t\t}\n\n\t\tif ( ! _.isEmpty( responsive ) ) {\n\t\t\tclasses += ' qazana-control-responsive-' + responsive.max;\n\t\t}\n\n\t\treturn classes;\n\t},\n\n\tgetTemplate: function() {\n\t\treturn Marionette.TemplateCache.get( '#tmpl-qazana-control-' + this.model.get( 'type' ) + '-content' );\n\t},\n\n\ttemplateHelpers: function() {\n\t\tvar controlData = {\n\t\t\tcontrolValue: this.getControlValue(),\n\t\t\t_cid: this.model.cid\n\t\t};\n\n\t\treturn {\n\t\t\tdata: _.extend( {}, this.model.toJSON(), controlData )\n\t\t};\n\t},\n\n\tbaseEvents: {\n\t\t'input @ui.input': 'onBaseInputChange',\n\t\t'change @ui.checkbox': 'onBaseInputChange',\n\t\t'change @ui.radio': 'onBaseInputChange',\n\t\t'input @ui.textarea': 'onBaseInputChange',\n\t\t'change @ui.select': 'onBaseInputChange',\n\t\t'click @ui.responsiveSwitchers': 'onSwitcherClick'\n\t},\n\n\tchildEvents: {},\n\n\tevents: function() {\n\t\treturn _.extend( {}, this.baseEvents, this.childEvents );\n\t},\n\n\tinitialize: function( options ) {\n\n\t\tthis.elementSettingsModel = options.elementSettingsModel;\n\n\t\tvar controlType = this.model.get( 'type' ),\n\t\t\tcontrolSettings = Backbone.$.extend( true, {}, qazana.config.controls[ controlType ], this.model.attributes );\n\n\t\tthis.model.set( controlSettings );\n\n\t\tthis.listenTo( this.elementSettingsModel, 'change', this.toggleControlVisibility )\n\t\t\t.listenTo( this.elementSettingsModel, 'change:external:' + this.model.get( 'name' ), this.onSettingsExternalChange );\n\t},\n\n\tgetControlValue: function() {\n\t\treturn this.elementSettingsModel.get( this.model.get( 'name' ) );\n\t},\n\n\tsetValue: function( value ) {\n\t\tthis.setSettingsModel( value );\n\t},\n\n\tsetSettingsModel: function( value ) {\n\t\tthis.elementSettingsModel.set( this.model.get( 'name' ), value );\n\n\t\tthis.triggerMethod( 'settings:change' );\n\t},\n\n\tapplySavedValue: function() {\n\t\tthis.setInputValue( '[data-setting=\"' + this.model.get( 'name' ) + '\"]', this.getControlValue() );\n\t},\n\n\tgetEditSettings: function( setting ) {\n\t\tvar settings = this.getOption( 'elementEditSettings' ).toJSON();\n\n\t\tif ( setting ) {\n\t\t\treturn settings[ setting ];\n\t\t}\n\n\t\treturn settings;\n\t},\n\n\tsetEditSetting: function( settingKey, settingValue ) {\n\t\tvar settings = this.getOption( 'elementEditSettings' );\n\n\t\tsettings.set( settingKey, settingValue );\n\t},\n\n\tgetInputValue: function( input ) {\n\t\tvar $input = this.$( input ),\n\t\t\tinputValue = $input.val(),\n\t\t\tinputType = $input.attr( 'type' );\n\n\t\tif ( -1 !== [ 'radio', 'checkbox' ].indexOf( inputType ) ) {\n\t\t\treturn $input.prop( 'checked' ) ? inputValue : '';\n\t\t}\n\n\t\tif ( 'number' === inputType && _.isFinite( inputValue ) ) {\n\t\t\treturn +inputValue;\n\t\t}\n\n\t\t// Temp fix for jQuery (< 3.0) that return null instead of empty array\n\t\tif ( 'SELECT' === input.tagName && $input.prop( 'multiple' ) && null === inputValue ) {\n\t\t\tinputValue = [];\n\t\t}\n\n\t\treturn inputValue;\n\t},\n\n\tsetInputValue: function( input, value ) {\n\t\tvar $input = this.$( input ),\n\t\t\tinputType = $input.attr( 'type' );\n\n\t\tif ( 'checkbox' === inputType ) {\n\t\t\t$input.prop( 'checked', !! value );\n\t\t} else if ( 'radio' === inputType ) {\n\t\t\t$input.filter( '[value=\"' + value + '\"]' ).prop( 'checked', true );\n\t\t} else {\n\t\t\t$input.val( value );\n\t\t}\n\t},\n\n\tonSettingsError: function() {\n\t\tthis.$el.addClass( 'qazana-error' );\n\t},\n\n\tonSettingsChange: function() {\n\t\tthis.$el.removeClass( 'qazana-error' );\n\t},\n\n\tonRender: function() {\n\t\tthis.applySavedValue();\n\n\t\tvar layoutType = this.model.get( 'label_block' ) ? 'block' : 'inline',\n\t\t\tshowLabel = this.model.get( 'show_label' ),\n\t\t\telClasses = 'qazana-label-' + layoutType;\n\n\t\telClasses += ' qazana-control-separator-' + this.model.get( 'separator' );\n\n\t\tif ( ! showLabel ) {\n\t\t\telClasses += ' qazana-control-hidden-label';\n\t\t}\n\n\t\tthis.$el.addClass( elClasses );\n\t\tthis.renderResponsiveSwitchers();\n\n\t\tthis.triggerMethod( 'ready' );\n\t\tthis.toggleControlVisibility();\n\t\tthis.addTooltip();\n\t},\n\n\tonBaseInputChange: function( event ) {\n\t\tvar input = event.currentTarget,\n\t\t\tvalue = this.getInputValue( input ),\n\t\t\tvalidators = this.elementSettingsModel.validators[ this.model.get( 'name' ) ];\n\n\t\tif ( validators ) {\n\t\t\tvar oldValue = this.getControlValue();\n\n\t\t\tvar isValidValue = validators.every( function( validator ) {\n\t\t\t\treturn validator.isValid( value, oldValue );\n\t\t\t} );\n\n\t\t\tif ( ! isValidValue ) {\n\t\t\t\tthis.setInputValue( input, oldValue );\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.updateElementModel( value, input );\n\n\t\tthis.triggerMethod( 'input:change', event );\n\t},\n\n\tonSwitcherClick: function( event ) {\n\t\tvar device = Backbone.$( event.currentTarget ).data( 'device' );\n\n\t\tqazana.changeDeviceMode( device );\n\n\t\tthis.triggerMethod( 'responsive:switcher:click', device );\n\t},\n\n\tonSettingsExternalChange: function() {\n\t\tthis.applySavedValue();\n\t\tthis.triggerMethod( 'after:external:change' );\n\t},\n\n\trenderResponsiveSwitchers: function() {\n\t\tif ( _.isEmpty( this.model.get( 'responsive' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar templateHtml = Marionette.Renderer.render( '#tmpl-qazana-control-responsive-switchers', this.model.attributes );\n\n\t\tthis.ui.controlTitle.after( templateHtml );\n\t},\n\n\ttoggleControlVisibility: function() {\n\t\tvar isVisible = qazana.helpers.isActiveControl( this.model, this.elementSettingsModel.attributes );\n\n\t\tthis.$el.toggleClass( 'qazana-hidden-control', ! isVisible );\n\n\t\tqazana.channels.data.trigger( 'scrollbar:update' );\n\t},\n\n\tonReady: function() {},\n\n\tonAfterExternalChange: function() {\n\t\tthis.hideTooltip();\n\t\tthis.render();\n\t},\n\n\taddTooltip: function() {\n\t\t// Create tooltip on controls\n\t\tthis.$( '.tooltip-target' ).tipsy( {\n\t\t\tgravity: function() {\n\t\t\t\t// `n` for down, `s` for up\n\t\t\t\tvar gravity = Backbone.$( this ).data( 'tooltip-pos' );\n\n\t\t\t\tif ( undefined !== gravity ) {\n\t\t\t\t\treturn gravity;\n\t\t\t\t} else {\n\t\t\t\t\treturn 'n';\n\t\t\t\t}\n\t\t\t},\n\t\t\ttitle: function() {\n\t\t\t\treturn this.getAttribute( 'data-tooltip' );\n\t\t\t}\n\t\t} );\n\t},\n\n\thideTooltip: function() {\n\t\tjQuery( '.tipsy' ).hide();\n\t},\n\n\tupdateElementModel: function( value ) {\n\t\tthis.setValue( value );\n\t}\n}, {\n\t// Static methods\n\tgetStyleValue: function( placeholder, controlValue ) {\n\t\treturn controlValue;\n\t}\n} );\n\nmodule.exports = ControlBaseItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlChooseItemView;\n\nControlChooseItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.inputs = '[type=\"radio\"]';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'mousedown label': 'onMouseDownLabel',\n\t\t'click @ui.inputs': 'onClickInput',\n\t\t'change @ui.inputs': 'onBaseInputChange'\n\t},\n\n\tonMouseDownLabel: function( event ) {\n\t\tvar $clickedLabel = this.$( event.currentTarget ),\n\t\t\t$selectedInput = this.$( '#' + $clickedLabel.attr( 'for' ) );\n\n\t\t$selectedInput.data( 'checked', $selectedInput.prop( 'checked' ) );\n\t},\n\n\tonClickInput: function( event ) {\n\t\tif ( ! this.model.get( 'toggle' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $selectedInput = this.$( event.currentTarget );\n\n\t\tif ( $selectedInput.data( 'checked' ) ) {\n\t\t\t$selectedInput.prop( 'checked', false ).trigger( 'change' );\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tControlBaseItemView.prototype.onRender.apply( this, arguments );\n\n\t\tvar currentValue = this.getControlValue();\n\n\t\tif ( currentValue ) {\n\t\t\tthis.ui.inputs.filter( '[value=\"' + currentValue + '\"]' ).prop( 'checked', true );\n\t\t} else if ( ! this.model.get( 'toggle' ) ) {\n\t\t\tthis.ui.inputs.first().prop( 'checked', true ).trigger( 'change' );\n\t\t}\n\t}\n} );\n\nmodule.exports = ControlChooseItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlCodeEditorItemView;\n\nControlCodeEditorItemView = ControlBaseItemView.extend( {\n\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.editor = '.qazana-code-editor';\n\n\t\treturn ui;\n\t},\n\n\tonReady: function() {\n\t\tvar self = this;\n\n\t\tif ( 'undefined' === typeof ace ) {\n\t\t\treturn;\n\t\t}\n\n\t\tself.editor = ace.edit( this.ui.editor[0] );\n\n\t\tBackbone.$( self.editor.container ).addClass( 'qazana-input-style qazana-code-editor' );\n\n\t\tself.editor.setOptions( {\n\t\t\tmode: 'ace/mode/' + self.model.attributes.language,\n\t\t\tminLines: 10,\n\t\t\tmaxLines: Infinity,\n\t\t\tshowGutter: true,\n\t\t\tuseWorker: true\n\t\t} );\n\n\t\tself.editor.setValue( self.getControlValue(), -1 ); // -1 =  move cursor to the start\n\n\t\tself.editor.on( 'change', function() {\n\t\t\tself.setValue( self.editor.getValue() );\n\t\t} );\n\n\t\tif ( 'html' === self.model.attributes.language ) {\n\t\t\t// Remove the `doctype` annotation\n\t\t\tvar session = self.editor.getSession();\n\n\t\t\tsession.on( 'changeAnnotation', function() {\n\t\t\t\tvar annotations = session.getAnnotations() || [],\n\t\t\t\t\tannotationsLength = annotations.length,\n\t\t\t\t\tindex = annotations.length;\n\n\t\t\t\twhile ( index-- ) {\n\t\t\t\t\tif ( /doctype first\\. Expected/.test( annotations[ index ].text ) ) {\n\t\t\t\t\t\tannotations.splice( index, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( annotationsLength > annotations.length ) {\n\t\t\t\t\tsession.setAnnotations( annotations );\n\t\t\t\t}\n\t\t\t}) ;\n\t\t}\n\t}\n} );\n\nmodule.exports = ControlCodeEditorItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlColorItemView;\n\nControlColorItemView = ControlBaseItemView.extend( {\n\tonReady: function() {\n\t\tvar self = this;\n\n\t\tqazana.helpers.wpColorPicker( self.ui.input, {\n\t\t\tchange: function() {\n\t\t\t\tself.ui.input.val( self.ui.input.wpColorPicker( 'color' ) ).trigger( 'input' );\n\t\t\t},\n\t\t\tclear: function() {\n\t\t\t\tself.setValue( '' );\n\t\t\t}\n\t\t} ).wpColorPicker( 'instance' )\n\t\t\t.wrap.find( '> .wp-picker-input-wrap > .wp-color-picker' )\n\t\t\t.removeAttr( 'maxlength' );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tif ( this.ui.input.wpColorPicker( 'instance' ) ) {\n\t\t\tthis.ui.input.wpColorPicker( 'close' );\n\t\t}\n\n\t\tthis.$el.remove();\n\t}\n} );\n\nmodule.exports = ControlColorItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlDateTimePickerItemView;\n\nControlDateTimePickerItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.picker = '.qazana-date-time-picker';\n\n\t\treturn ui;\n\t},\n\n\tonReady: function() {\n\t\tvar self = this;\n\n\t\tvar options = _.extend( this.model.get( 'picker_options' ), {\n\t\t\tonHide: function() {\n\t\t\t\tself.saveValue();\n\t\t\t}\n\t\t} );\n\n\t\tthis.ui.picker.appendDtpicker( options ).handleDtpicker( 'setDate', new Date( this.getControlValue() ) );\n\t},\n\n\tsaveValue: function() {\n\t\tthis.setValue( this.ui.input.val() );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tthis.saveValue();\n\t\tthis.ui.picker.dtpicker( 'destroy' );\n\t}\n} );\n\nmodule.exports = ControlDateTimePickerItemView;\n",
    "var ControlBaseUnitsItemView = require( 'qazana-views/controls/base-units' ),\n\tControlDimensionsItemView;\n\nControlDimensionsItemView = ControlBaseUnitsItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseUnitsItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.controls = '.qazana-control-dimension > input:enabled';\n\t\tui.link = 'button.qazana-link-dimensions';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'click @ui.link': 'onLinkDimensionsClicked'\n\t},\n\n\tdefaultDimensionValue: 0,\n\n\tinitialize: function() {\n\t\tControlBaseUnitsItemView.prototype.initialize.apply( this, arguments );\n\n\t\t// TODO: Need to be in helpers, and not in variable\n\t\tthis.model.set( 'allowed_dimensions', this.filterDimensions( this.model.get( 'allowed_dimensions' ) ) );\n\t},\n\n\tgetPossibleDimensions: function() {\n\t\treturn [\n\t\t\t'top',\n\t\t\t'right',\n\t\t\t'bottom',\n\t\t\t'left'\n\t\t];\n\t},\n\n\tfilterDimensions: function( filter ) {\n\t\tfilter = filter || 'all';\n\n\t\tvar dimensions = this.getPossibleDimensions();\n\n\t\tif ( 'all' === filter ) {\n\t\t\treturn dimensions;\n\t\t}\n\n\t\tif ( ! _.isArray( filter ) ) {\n\t\t\tif ( 'horizontal' === filter ) {\n\t\t\t\tfilter = [ 'right', 'left' ];\n\t\t\t} else if ( 'vertical' === filter ) {\n\t\t\t\tfilter = [ 'top', 'bottom' ];\n\t\t\t}\n\t\t}\n\n\t\treturn filter;\n\t},\n\n\tonReady: function() {\n\t\tvar currentValue = this.getControlValue();\n\n\t\tif ( ! this.isLinkedDimensions() ) {\n\t\t\tthis.ui.link.addClass( 'unlinked' );\n\n\t\t\tthis.ui.controls.each( _.bind( function( index, element ) {\n\t\t\t\tvar value = currentValue[ element.dataset.setting ];\n\n\t\t\t\tif ( _.isEmpty( value ) ) {\n\t\t\t\t\tvalue = this.defaultDimensionValue;\n\t\t\t\t}\n\n\t\t\t\tthis.$( element ).val( value );\n\t\t\t}, this ) );\n\t\t}\n\n\t\tthis.fillEmptyDimensions();\n\t},\n\n\tupdateDimensionsValue: function() {\n\t\tvar currentValue = {},\n\t\t\tdimensions = this.getPossibleDimensions(),\n\t\t\t$controls = this.ui.controls;\n\n\t\tdimensions.forEach( _.bind( function( dimension ) {\n\t\t\tvar $element = $controls.filter( '[data-setting=\"' + dimension + '\"]' );\n\n\t\t\tcurrentValue[ dimension ] = $element.length ? $element.val() : this.defaultDimensionValue;\n\t\t}, this ) );\n\n\t\tthis.setValue( currentValue );\n\t},\n\n\tfillEmptyDimensions: function() {\n\t\tvar dimensions = this.getPossibleDimensions(),\n\t\t\tallowedDimensions = this.model.get( 'allowed_dimensions' ),\n\t\t\t$controls = this.ui.controls;\n\n\t\tif ( this.isLinkedDimensions() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdimensions.forEach( _.bind( function( dimension ) {\n\t\t\tvar $element = $controls.filter( '[data-setting=\"' + dimension + '\"]' ),\n\t\t\t\tisAllowedDimension = -1 !== _.indexOf( allowedDimensions, dimension );\n\n\t\t\tif ( isAllowedDimension && $element.length && _.isEmpty( $element.val() ) ) {\n\t\t\t\t$element.val( this.defaultDimensionValue );\n\t\t\t}\n\n\t\t}, this ) );\n\t},\n\n\tupdateDimensions: function() {\n\t\tthis.fillEmptyDimensions();\n\t\tthis.updateDimensionsValue();\n\t},\n\n\tresetDimensions: function() {\n\t\tthis.ui.controls.val( '' );\n\n\t\tthis.updateDimensionsValue();\n\t},\n\n\tonInputChange: function( event ) {\n\t\tvar inputSetting = event.target.dataset.setting;\n\n\t\tif ( 'unit' === inputSetting ) {\n\t\t\tthis.resetDimensions();\n\t\t}\n\n\t\tif ( ! _.contains( this.getPossibleDimensions(), inputSetting ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.isLinkedDimensions() ) {\n\t\t\tvar $thisControl = this.$( event.target );\n\n\t\t\tthis.ui.controls.val( $thisControl.val() );\n\t\t}\n\n\t\tthis.updateDimensions();\n\t},\n\n\tonLinkDimensionsClicked: function( event ) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.ui.link.toggleClass( 'unlinked' );\n\n\t\tthis.setValue( 'isLinked', ! this.ui.link.hasClass( 'unlinked' ) );\n\n\t\tif ( this.isLinkedDimensions() ) {\n\t\t\t// Set all controls value from the first control.\n\t\t\tthis.ui.controls.val( this.ui.controls.eq( 0 ).val() );\n\t\t}\n\n\t\tthis.updateDimensions();\n\t},\n\n\tisLinkedDimensions: function() {\n\t\treturn this.getControlValue( 'isLinked' );\n\t}\n} );\n\nmodule.exports = ControlDimensionsItemView;\n",
    "var ControlSelect2View = require( 'qazana-views/controls/select2' );\n\nmodule.exports = ControlSelect2View.extend( {\n\tgetSelect2Options: function() {\n\t\treturn {\n\t\t\tdir: qazana.config.is_rtl ? 'rtl' : 'ltr'\n\t\t};\n\t},\n\n\ttemplateHelpers: function() {\n\t\tvar helpers = ControlSelect2View.prototype.templateHelpers.apply( this, arguments );\n\n\t\thelpers.getFontsByGroups = _.bind( function( groups ) {\n\t\t\tvar fonts = this.model.get( 'fonts' ),\n\t\t\t\tfilteredFonts = {};\n\n\t\t\t_.each( fonts, function( fontType, fontName ) {\n\t\t\t\tif ( _.isArray( groups ) && _.contains( groups, fontType ) || fontType === groups ) {\n\t\t\t\t\tfilteredFonts[ fontName ] = fontType;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn filteredFonts;\n\t\t}, this );\n\n\t\treturn helpers;\n\t}\n} );\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlMediaItemView;\n\nControlMediaItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.addImages = '.qazana-control-gallery-add';\n\t\tui.clearGallery = '.qazana-control-gallery-clear';\n\t\tui.galleryThumbnails = '.qazana-control-gallery-thumbnails';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'click @ui.addImages': 'onAddImagesClick',\n\t\t'click @ui.clearGallery': 'onClearGalleryClick',\n\t\t'click @ui.galleryThumbnails': 'onGalleryThumbnailsClick'\n\t},\n\n\tonReady: function() {\n\t\tvar hasImages = this.hasImages();\n\n\t\tthis.$el\n\t\t    .toggleClass( 'qazana-gallery-has-images', hasImages )\n\t\t    .toggleClass( 'qazana-gallery-empty', ! hasImages );\n\n\t\tthis.initRemoveDialog();\n\t},\n\n\thasImages: function() {\n\t\treturn !! this.getControlValue().length;\n\t},\n\n\topenFrame: function( action ) {\n\t\tthis.initFrame( action );\n\n\t\tthis.frame.open();\n\t},\n\n\tinitFrame: function( action ) {\n\t\tvar frameStates = {\n\t\t\tcreate: 'gallery',\n\t\t\tadd: 'gallery-library',\n\t\t\tedit: 'gallery-edit'\n\t\t};\n\n\t\tvar options = {\n\t\t\tframe:  'post',\n\t\t\tmultiple: true,\n\t\t\tstate: frameStates[ action ],\n\t\t\tbutton: {\n\t\t\t\ttext: qazana.translate( 'insert_media' )\n\t\t\t}\n\t\t};\n\n\t\tif ( this.hasImages() ) {\n\t\t\toptions.selection = this.fetchSelection();\n\t\t}\n\n\t\tthis.frame = wp.media( options );\n\n\t\t// When a file is selected, run a callback.\n\t\tthis.frame.on( {\n\t\t\t'update': this.select,\n\t\t\t'menu:render:default': this.menuRender,\n\t\t\t'content:render:browse': this.gallerySettings\n\t\t}, this );\n\t},\n\n\tmenuRender: function( view ) {\n\t\tview.unset( 'insert' );\n\t\tview.unset( 'featured-image' );\n\t},\n\n\tgallerySettings: function( browser ) {\n\t\tbrowser.sidebar.on( 'ready', function() {\n\t\t\tbrowser.sidebar.unset( 'gallery' );\n\t\t} );\n\t},\n\n\tfetchSelection: function() {\n\t\tvar attachments = wp.media.query( {\n\t\t\torderby: 'post__in',\n\t\t\torder: 'ASC',\n\t\t\ttype: 'image',\n\t\t\tperPage: -1,\n\t\t\tpost__in: _.pluck( this.getControlValue(), 'id' )\n\t\t} );\n\n\t\treturn new wp.media.model.Selection( attachments.models, {\n\t\t\tprops: attachments.props.toJSON(),\n\t\t\tmultiple: true\n\t\t} );\n\t},\n\n\t/**\n\t * Callback handler for when an attachment is selected in the media modal.\n\t * Gets the selected image information, and sets it within the control.\n\t */\n\tselect: function( selection ) {\n\t\tvar images = [];\n\n\t\tselection.each( function( image ) {\n\t\t\timages.push( {\n\t\t\t\tid: image.get( 'id' ),\n\t\t\t\turl: image.get( 'url' )\n\t\t\t} );\n\t\t} );\n\n\t\tthis.setValue( images );\n\n\t\tthis.render();\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tif ( this.frame ) {\n\t\t\tthis.frame.off();\n\t\t}\n\n\t\tthis.$el.remove();\n\t},\n\n\tresetGallery: function() {\n\t\tthis.setValue( '' );\n\n\t\tthis.render();\n\t},\n\n\tinitRemoveDialog: function() {\n\t\tvar removeDialog;\n\n\t\tthis.getRemoveDialog = function() {\n\t\t\tif ( ! removeDialog ) {\n\t\t\t\tremoveDialog = qazana.dialogsManager.createWidget( 'confirm', {\n\t\t\t\t\tmessage: qazana.translate( 'dialog_confirm_gallery_delete' ),\n\t\t\t\t\theaderMessage: qazana.translate( 'delete_gallery' ),\n\t\t\t\t\tstrings: {\n\t\t\t\t\t\tconfirm: qazana.translate( 'delete' ),\n\t\t\t\t\t\tcancel: qazana.translate( 'cancel' )\n\t\t\t\t\t},\n\t\t\t\t\tdefaultOption: 'confirm',\n\t\t\t\t\tonConfirm: _.bind( this.resetGallery, this )\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn removeDialog;\n\t\t};\n\t},\n\n\tonAddImagesClick: function() {\n\t\tthis.openFrame( this.hasImages() ? 'add' : 'create' );\n\t},\n\n\tonClearGalleryClick: function() {\n\t\tthis.getRemoveDialog().show();\n\t},\n\n\tonGalleryThumbnailsClick: function() {\n\t\tthis.openFrame( 'edit' );\n\t}\n} );\n\nmodule.exports = ControlMediaItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlIconItemView;\n\nControlIconItemView = ControlBaseItemView.extend( {\n\n\tinitialize: function() {\n\t\tControlBaseItemView.prototype.initialize.apply( this, arguments );\n\n\t\tthis.filterIcons();\n\t},\n\n\tfilterIcons: function() {\n\t\tvar icons = this.model.get( 'icons' ),\n\t\t\tinclude = this.model.get( 'include' ),\n\t\t\texclude = this.model.get( 'exclude' );\n\n\t\tif ( include ) {\n\t\t\tvar filteredIcons = {};\n\n\t\t\t_.each( include, function( iconKey ) {\n\t\t\t\tfilteredIcons[ iconKey ] = icons[ iconKey ];\n\t\t\t} );\n\n\t\t\tthis.model.set( 'icons', filteredIcons );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( exclude ) {\n\t\t\t_.each( exclude, function( iconKey ) {\n\t\t\t\tdelete icons[ iconKey ];\n\t\t\t} );\n\t\t}\n\t},\n\n\ticonsList: function( icon ) {\n\t\tif ( ! icon.id ) {\n\t\t\treturn icon.text;\n\t\t}\n\n\t\treturn Backbone.$(\n\t\t\t'<span><i class=\"' + icon.id + '\"></i> ' + icon.text + '</span>'\n\t\t);\n\t},\n\n\tonReady: function() {\n\t\tthis.ui.select.fontIconPicker({\n\t       theme: 'fip-grey'\n        }); // Load with default options\n\t},\n\n\ttemplateHelpers: function() {\n\t\tvar helpers = ControlBaseItemView.prototype.templateHelpers.apply( this, arguments );\n\n\t\thelpers.getIconsByGroups = _.bind( function( groups ) {\n\t\t\tvar icons = this.model.get( 'icons' ),\n\t\t\t\tfilterIcons = {};\n\n\t\t\t_.each( icons, function( iconType, iconName ) {\n\t\t\t\tif ( _.isArray( groups ) && _.contains( groups, iconType ) || iconType === groups ) {\n\t\t\t\t\tfilterIcons[ iconName ] = iconType;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn filterIcons;\n\t\t}, this );\n\n\t\treturn helpers;\n\t}\n\n} );\n\nmodule.exports = ControlIconItemView;\n",
    "var ControlMultipleBaseItemView = require( 'qazana-views/controls/base-multiple' ),\n\tControlImageDimensionsItemView;\n\nControlImageDimensionsItemView = ControlMultipleBaseItemView.extend( {\n\tui: function() {\n\t\treturn {\n\t\t\tinputWidth: 'input[data-setting=\"width\"]',\n\t\t\tinputHeight: 'input[data-setting=\"height\"]',\n\n\t\t\tbtnApply: 'button.qazana-image-dimensions-apply-button'\n\t\t};\n\t},\n\n\t// Override the base events\n\tbaseEvents: {\n\t\t'click @ui.btnApply': 'onApplyClicked'\n\t},\n\n\tonApplyClicked: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tthis.setValue( {\n\t\t\twidth: this.ui.inputWidth.val(),\n\t\t\theight: this.ui.inputHeight.val()\n\t\t} );\n\t}\n} );\n\nmodule.exports = ControlImageDimensionsItemView;\n",
    "var ControlMultipleBaseItemView = require( 'qazana-views/controls/base-multiple' ),\n\tControlMediaItemView;\n\nControlMediaItemView = ControlMultipleBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlMultipleBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.controlMedia = '.qazana-control-media';\n\t\tui.frameOpeners = '.qazana-control-media-upload-button, .qazana-control-media-image';\n\t\tui.deleteButton = '.qazana-control-media-delete';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'click @ui.frameOpeners': 'openFrame',\n\t\t'click @ui.deleteButton': 'deleteImage'\n\t},\n\n\tonReady: function() {\n\t\tif ( _.isEmpty( this.getControlValue( 'url' ) ) ) {\n\t\t\tthis.ui.controlMedia.addClass( 'media-empty' );\n\t\t}\n\t},\n\n\topenFrame: function() {\n\t\tif ( ! this.frame ) {\n\t\t\tthis.initFrame();\n\t\t}\n\n\t\tthis.frame.open();\n\t},\n\n\tdeleteImage: function() {\n\t\tthis.setValue( {\n\t\t\turl: '',\n\t\t\tid: ''\n\t\t} );\n\n\t\tthis.render();\n\t},\n\n\t/**\n\t * Create a media modal select frame, and store it so the instance can be reused when needed.\n\t */\n\tinitFrame: function() {\n\t\tthis.frame = wp.media( {\n\t\t\tbutton: {\n\t\t\t\ttext: qazana.translate( 'insert_media' )\n\t\t\t},\n\t\t\tstates: [\n\t\t\t\tnew wp.media.controller.Library( {\n\t\t\t\t\ttitle: qazana.translate( 'insert_media' ),\n\t\t\t\t\tlibrary: wp.media.query( { type: 'image' } ),\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tdate: false\n\t\t\t\t} )\n\t\t\t]\n\t\t} );\n\n\t\t// When a file is selected, run a callback.\n\t\tthis.frame.on( 'insert select', _.bind( this.select, this ) );\n\t},\n\n\t/**\n\t * Callback handler for when an attachment is selected in the media modal.\n\t * Gets the selected image information, and sets it within the control.\n\t */\n\tselect: function() {\n\t\t// Get the attachment from the modal frame.\n\t\tvar attachment = this.frame.state().get( 'selection' ).first().toJSON();\n\n\t\tif ( attachment.url ) {\n\t\t\tthis.setValue( {\n\t\t\t\turl: attachment.url,\n\t\t\t\tid: attachment.id\n\t\t\t} );\n\n\t\t\tthis.render();\n\t\t}\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tthis.$el.remove();\n\t}\n} );\n\nmodule.exports = ControlMediaItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlNumberItemView;\n\nControlNumberItemView = ControlBaseItemView.extend( {\n\tcorrectionTimeOut: 0,\n\n\tgetInputValue: function( input ) {\n\t\tvar self = this,\n\t\t\tinputValue = ControlBaseItemView.prototype.getInputValue.apply( self, arguments ),\n\t\t\tvalidValue = inputValue,\n\t\t\tmin = self.model.get( 'min' ),\n\t\t\tmax = self.model.get( 'max' );\n\n\t\tif ( ! _.isFinite( inputValue ) && self.model.get( 'nullable' ) ) {\n\t\t\treturn inputValue;\n\t\t}\n\n\t\tif ( _.isFinite( min ) && inputValue < min ) {\n\t\t\tvalidValue = min;\n\t\t}\n\n\t\tif ( _.isFinite( max ) && inputValue > max ) {\n\t\t\tvalidValue = max;\n\t\t}\n\n\t\treturn validValue;\n\t},\n\n\tupdateElementModel: function( value, input ) {\n\t\tvar self = this,\n\t\t\toriginalInputValue = ControlBaseItemView.prototype.getInputValue.call( self, input );\n\n\t\tif ( originalInputValue !== value ) {\n\t\t\tself.correctionTimeOut = setTimeout( function() {\n\t\t\t\tself.setInputValue( input, value );\n\t\t\t}, 1200 );\n\t\t}\n\n\t\tControlBaseItemView.prototype.updateElementModel.apply( this, arguments );\n\t},\n\n\tonBaseInputChange: function() {\n\t\tif ( this.correctionTimeOut ) {\n\t\t\tclearTimeout( this.correctionTimeOut );\n\t\t}\n\n\t\tControlBaseItemView.prototype.onBaseInputChange.apply( this, arguments );\n\t}\n} );\n\nmodule.exports = ControlNumberItemView;\n",
    "var ControlMultipleBaseItemView = require( 'qazana-views/controls/base-multiple' ),\n\tControlOrderItemView;\n\nControlOrderItemView = ControlMultipleBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlMultipleBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.reverseOrderLabel = '.qazana-control-order-label';\n\n\t\treturn ui;\n\t},\n\n\tchangeLabelTitle: function() {\n\t\tvar reverseOrder = this.getControlValue( 'reverse_order' );\n\n\t\tthis.ui.reverseOrderLabel.attr( 'title', qazana.translate( reverseOrder ? 'asc' : 'desc' ) );\n\t},\n\n\tonRender: function() {\n\t\tControlMultipleBaseItemView.prototype.onRender.apply( this, arguments );\n\n\t\tthis.changeLabelTitle();\n\t},\n\n\tonInputChange: function() {\n\t\tthis.changeLabelTitle();\n\t}\n} );\n\nmodule.exports = ControlOrderItemView;\n",
    "var RepeaterRowView;\n\nRepeaterRowView = Marionette.CompositeView.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-qazana-repeater-row' ),\n\n\tclassName: 'repeater-fields',\n\n\tui: {\n\t\tduplicateButton: '.qazana-repeater-tool-duplicate',\n\t\teditButton: '.qazana-repeater-tool-edit',\n\t\tremoveButton: '.qazana-repeater-tool-remove',\n\t\titemTitle: '.qazana-repeater-row-item-title'\n\t},\n\n\tbehaviors: {\n\t\tHandleInnerTabs: {\n\t\t\tbehaviorClass: require( 'qazana-behaviors/inner-tabs' )\n\t\t}\n\t},\n\n\ttriggers: {\n\t\t'click @ui.removeButton': 'click:remove',\n\t\t'click @ui.duplicateButton': 'click:duplicate',\n\t\t'click @ui.itemTitle': 'click:edit'\n\t},\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\titemIndex: this.getOption( 'itemIndex' )\n\t\t};\n\t},\n\n\tchildViewContainer: '.qazana-repeater-row-controls',\n\n\tgetChildView: function( item ) {\n\t\tvar controlType = item.get( 'type' );\n\n\t\treturn qazana.getControlView( controlType );\n\t},\n\n\tchildViewOptions: function() {\n\t\treturn {\n\t\t\telementSettingsModel: this.model\n\t\t};\n\t},\n\n\tcheckConditions: function() {\n\t\tvar self = this;\n\n\t\tself.collection.each( function( model ) {\n\t\t\tvar conditions = model.get( 'conditions' ),\n\t\t\t\tparentConditions = model.get( 'parent_conditions' ),\n\t\t\t\tisVisible = true;\n\n\t\t\tif ( conditions ) {\n\t\t\t\tisVisible = qazana.conditions.check( conditions, self.model.attributes );\n\t\t\t}\n\n\t\t\tif ( parentConditions ) {\n\t\t\t\tisVisible = qazana.conditions.check( parentConditions, self.getOption( 'parentModel' ).attributes );\n\t\t\t}\n\n\t\t\tvar child = self.children.findByModelCid( model.cid );\n\n\t\t\tchild.$el.toggleClass( 'qazana-panel-hide', ! isVisible );\n\t\t} );\n\t},\n\n\tupdateIndex: function( newIndex ) {\n\t\tthis.itemIndex = newIndex;\n\t\tthis.setTitle();\n\t},\n\n\tsetTitle: function() {\n\t\tvar self = this,\n\t\t\ttitleField = self.getOption( 'titleField' ),\n\t\t\ttitle = '';\n\n\t\tif ( titleField ) {\n\t\t\tvar values = {};\n\n\t\t\tself.children.each( function( child ) {\n\t\t\t\tvalues[ child.model.get( 'name' ) ] = child.getControlValue();\n\t\t\t} );\n\n\t\t\ttitle = Marionette.TemplateCache.prototype.compileTemplate( titleField )( values );\n\t\t}\n\n\t\tif ( ! title ) {\n\t\t\ttitle = qazana.translate( 'Item #{0}', [ self.getOption( 'itemIndex' ) ] );\n\t\t}\n\n\t\tself.ui.itemTitle.html( title );\n\t},\n\n\tinitialize: function( options ) {\n\t\tvar self = this;\n\n\t\tself.elementSettingsModel = options.elementSettingsModel;\n\n\t\tself.itemIndex = 0;\n\n\t\t// Collection for Controls list\n\t\tself.collection = new Backbone.Collection( options.controlFields );\n\n\t\tself.listenTo( self.model, 'change', self.checkConditions );\n\t\tself.listenTo( self.getOption( 'parentModel' ), 'change', self.checkConditions );\n\n\t\tif ( options.titleField ) {\n\t\t\tself.listenTo( self.model, 'change', self.setTitle );\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tthis.setTitle();\n\t\tthis.checkConditions();\n\t},\n\n\tonChildviewResponsiveSwitcherClick: function( childView, device ) {\n\t\tif ( 'desktop' === device ) {\n\t\t\tqazana.getPanelView().getCurrentPageView().$el.toggleClass( 'qazana-responsive-switchers-open' );\n\t\t}\n\t}\n} );\n\nmodule.exports = RepeaterRowView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tRepeaterRowView = require( 'qazana-views/controls/repeater-row' ),\n\tBaseSettingsModel = require( 'qazana-models/base-settings' ),\n\tControlRepeaterItemView;\n\t\nControlRepeaterItemView = ControlBaseItemView.extend( {\n\tui: {\n\t\tbtnAddRow: '.qazana-repeater-add',\n\t\tfieldContainer: '.qazana-repeater-fields'\n\t},\n\n\tevents: {\n\t\t'click @ui.btnAddRow': 'onButtonAddRowClick',\n\t\t'sortstart @ui.fieldContainer': 'onSortStart',\n\t\t'sortupdate @ui.fieldContainer': 'onSortUpdate',\n\t\t'sortstop @ui.fieldContainer': 'onSortStop'\n\t},\n\n\tchildView: RepeaterRowView,\n\n\tchildViewContainer: '.qazana-repeater-fields',\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\tdata: _.extend( {}, this.model.toJSON(), { controlValue: [] } )\n\t\t};\n\t},\n\n\tchildViewOptions: function() {\n\t\treturn {\n\t\t\tcontrolFields: this.model.get( 'fields' ),\n\t\t\ttitleField: this.model.get( 'title_field' ),\n\t\t\tparentModel: this.elementSettingsModel // For parentConditions in repeaterRow\n\t\t};\n\t},\n\n\tcreateItemModel: function( attrs, options, controlView ) {\n\t\toptions = options || {};\n\n\t\toptions.controls = controlView.model.get( 'fields' );\n\n\t\tif ( ! attrs._id ) {\n\t\t\tattrs._id = qazana.helpers.getUniqueID();\n\t\t}\n\n\t\treturn new BaseSettingsModel( attrs, options );\n\t},\n\n\tfillCollection: function() {\n\t\tvar controlName = this.model.get( 'name' );\n\t\tthis.collection = this.elementSettingsModel.get( controlName );\n\n\t\tif ( ! ( this.collection instanceof Backbone.Collection ) ) {\n\t\t\tthis.collection = new Backbone.Collection( this.collection, {\n\t\t\t\t// Use `partial` to supply the `this` as an argument, but not as context\n\t\t\t\t// the `_` i sa place holder for original arguments: `attrs` & `options`\n\t\t\t\tmodel: _.partial( this.createItemModel, _, _, this )\n\t\t\t} );\n\n\t\t\t// Set the value silent\n\t\t\tthis.elementSettingsModel.set( controlName, this.collection, { silent: true } );\n\t\t\tthis.listenTo( this.collection, 'change', this.onRowControlChange );\n\t\t\tthis.listenTo( this.collection, 'update', this.onRowUpdate, this );\n\t\t}\n\t},\n\n\tinitialize: function( options ) {\n\t\tControlBaseItemView.prototype.initialize.apply( this, arguments );\n\n\t\tthis.fillCollection();\n\n\t\tthis.listenTo( this.collection, 'change', this.onRowControlChange );\n\t\tthis.listenTo( this.collection, 'update', this.onRowUpdate, this );\n\t},\n\n\taddRow: function( data, options ) {\n\t\tvar id = qazana.helpers.getUniqueID();\n\n\t\tif ( data instanceof Backbone.Model ) {\n\t\t\tdata.set( '_id', id );\n\t\t} else {\n\t\t\tdata._id = id;\n\t\t}\n\n\t\treturn this.collection.add( data, options );\n\t},\n\n\teditRow: function( rowView ) {\n\t\tif ( this.currentEditableChild ) {\n\t\t\tvar currentEditable = this.currentEditableChild.getChildViewContainer( this.currentEditableChild );\n\t\t\tcurrentEditable.removeClass( 'editable' );\n\n\t\t\t// If the repeater contains TinyMCE editors, fire the `hide` trigger to hide floated toolbars\n\t\t\tcurrentEditable.find( '.qazana-wp-editor' ).each( function() {\n\t\t\t\ttinymce.get( this.id ).fire( 'hide' );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.currentEditableChild === rowView ) {\n\t\t\tdelete this.currentEditableChild;\n\t\t\treturn;\n\t\t}\n\n\t\trowView.getChildViewContainer( rowView ).addClass( 'editable' );\n\n\t\tthis.currentEditableChild = rowView;\n\n\t\tthis.updateActiveRow();\n\t},\n\n\ttoggleMinRowsClass: function() {\n\t\tif ( ! this.model.get( 'prevent_empty' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$el.toggleClass( 'qazana-repeater-has-minimum-rows', 1 >= this.collection.length );\n\t},\n\n\tupdateActiveRow: function() {\n\t\tvar activeItemIndex = 0;\n\n\t\tif ( this.currentEditableChild ) {\n\t\t\tactiveItemIndex = this.currentEditableChild.itemIndex;\n\t\t}\n\n\t\tthis.setEditSetting( 'activeItemIndex', activeItemIndex );\n\t},\n\n\tupdateChildIndexes: function() {\n\t\tthis.children.each( _.bind( function( view ) {\n\t\t\tview.updateIndex( this.collection.indexOf( view.model ) + 1 );\n\t\t}, this ) );\n\t},\n\n\tonRender: function() {\n\t\tControlBaseItemView.prototype.onRender.apply( this, arguments );\n\n\t\tthis.ui.fieldContainer.sortable( { axis: 'y', handle: '.qazana-repeater-row-tools' } );\n\n\t\tthis.toggleMinRowsClass();\n\t},\n\n\tonSortStart: function( event, ui ) {\n\t\tui.item.data( 'oldIndex', ui.item.index() );\n\t},\n\n\tonSortStop: function( event, ui ) {\n\t\t// Reload TinyMCE editors (if exist), it's a bug that TinyMCE content is missing after stop dragging\n\t\tui.item.find( '.qazana-wp-editor' ).each( function() {\n\t\t\tvar editor = tinymce.get( this.id ),\n\t\t\t\tsettings = editor.settings;\n\n\t\t\tsettings.height = Backbone.$( editor.getContainer() ).height();\n\t\t\ttinymce.execCommand( 'mceRemoveEditor', true, this.id );\n\t\t\ttinymce.init( settings );\n\t\t} );\n\t},\n\n\tonSortUpdate: function( event, ui ) {\n\t\tvar oldIndex = ui.item.data( 'oldIndex' ),\n\t\t\tmodel = this.collection.at( oldIndex ),\n\t\t\tnewIndex = ui.item.index();\n\n\t\tthis.collection.remove( model );\n\n\t\tthis.addRow( model, { at: newIndex } );\n\t},\n\n\tonAddChild: function() {\n\t\tthis.updateChildIndexes();\n\t\tthis.updateActiveRow();\n\t},\n\n\tonRemoveChild: function( childView ) {\n\t\tif ( childView === this.currentEditableChild ) {\n\t\t\tdelete this.currentEditableChild;\n\t\t}\n\n\t\tthis.updateChildIndexes();\n\t\tthis.updateActiveRow();\n\t},\n\n\tonRowUpdate: function( collection, event ) {\n\t\t// Simulate `changed` and `_previousAttributes` values\n\t\tvar settings = this.elementSettingsModel,\n\t\t\tcollectionCloned = collection.clone(),\n\t\t\tcontrolName = this.model.get( 'name' );\n\n\t\tif ( event.add ) {\n\t\t\tcollectionCloned.remove( event.changes.added[0] );\n\t\t} else {\n\t\t\tcollectionCloned.add( event.changes.removed[0], { at: event.index } );\n\t\t}\n\n\t\tsettings.changed = {};\n\t\tsettings.changed[ controlName ] = collection;\n\n\t\tsettings._previousAttributes = {};\n\t\tsettings._previousAttributes[ controlName ] = collectionCloned.toJSON();\n\n\t\tsettings.trigger( 'change', settings,  settings._pending );\n\n\t\tdelete settings.changed;\n\t\tdelete settings._previousAttributes;\n\n\t\tthis.toggleMinRowsClass();\n\t},\n\n\tonRowControlChange: function( model ) {\n\t\t// Simulate `changed` and `_previousAttributes` values\n\t\tvar changed = Object.keys( model.changed );\n\n\t\tif ( ! changed.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar collectionCloned = model.collection.toJSON(),\n\t\t\tmodelIndex = model.collection.findIndex( model ),\n\t\t\telement = this._parent.model,\n\t\t\tsettings = element.get( 'settings' ),\n\t\t\tcontrolName = this.model.get( 'name' );\n\n\t\t// Save it with old values\n\t\tcollectionCloned[ modelIndex ] = model._previousAttributes;\n\n\t\tsettings.changed = {};\n\t\tsettings.changed[ controlName ] =  model.collection;\n\n\t\tsettings._previousAttributes = {};\n\t\tsettings._previousAttributes[ controlName ] = collectionCloned;\n\n\t\tsettings.trigger( 'change', settings );\n\n\t\tdelete settings.changed;\n\t\tdelete settings._previousAttributes;\n\t},\n\n\tonButtonAddRowClick: function() {\n\t\tvar defaults = {};\n\t\t_.each( this.model.get( 'fields' ), function( field ) {\n\t\t\tdefaults[ field.name ] = field['default'];\n\t\t} );\n\n\t\tvar newModel = this.addRow( defaults ),\n\t\t\tnewChildView = this.children.findByModel( newModel );\n\n\t\tthis.editRow( newChildView );\n\t\tthis.render();\n\t},\n\n\tonChildviewClickRemove: function( childView ) {\n\t\tchildView.model.destroy();\n\t\tthis.render();\n\t},\n\n\tonChildviewClickDuplicate: function( childView ) {\n\t\tvar newModel = this.createItemModel( childView.model.toJSON(), {}, this );\n\t\tthis.addRow( newModel, { at: childView.itemIndex } );\n\t\tthis.render();\n\t},\n\n\tonChildviewClickEdit: function( childView ) {\n\t\tthis.editRow( childView );\n\t},\n\n\tonAfterExternalChange: function() {\n\t\t// Update the collection with current value\n\t\tthis.fillCollection();\n\n\t\tControlBaseItemView.prototype.onAfterExternalChange.apply( this, arguments );\n\t}\n} );\n\nmodule.exports = ControlRepeaterItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlSectionItemView;\n\nControlSectionItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.heading = '.qazana-panel-heading';\n\n\t\treturn ui;\n\t},\n\n\ttriggers: {\n\t\t'click': 'control:section:clicked'\n\t}\n} );\n\nmodule.exports = ControlSectionItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlSelect2ItemView;\n\nControlSelect2ItemView = ControlBaseItemView.extend( {\n\tgetSelect2Options: function() {\n\t\tvar placeholder = this.ui.select.children( 'option:first[value=\"\"]' ).text();\n\n\t\treturn {\n\t\t\tallowClear: true,\n\t\t\tplaceholder: placeholder\n\t\t};\n\t},\n\n\tonReady: function() {\n\t\tthis.ui.select.select2( this.getSelect2Options() );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tif ( this.ui.select.data( 'select2' ) ) {\n\t\t\tthis.ui.select.select2( 'destroy' );\n\t\t}\n\n\t\tthis.$el.remove();\n\t}\n} );\n\nmodule.exports = ControlSelect2ItemView;\n",
    "var ControlMultipleBaseItemView = require( 'qazana-views/controls/base-multiple' ),\n\tControlShadowItemView;\n\nControlShadowItemView = ControlMultipleBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlMultipleBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.sliders = '.qazana-slider';\n\t\tui.colors = '.qazana-shadow-color-picker';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'slide @ui.sliders': 'onSlideChange'\n\t},\n\n\tinitSliders: function() {\n\t\tvar value = this.getControlValue();\n\n\t\tthis.ui.sliders.each( function() {\n\t\t\tvar $slider = Backbone.$( this ),\n\t\t\t\t$input = $slider.next( '.qazana-slider-input' ).find( 'input' );\n\n\t\t\t$slider.slider( {\n\t\t\t\tvalue: value[ this.dataset.input ],\n\t\t\t\tmin: +$input.attr( 'min' ),\n\t\t\t\tmax: +$input.attr( 'max' )\n\t\t\t} );\n\t\t} );\n\t},\n\n\tinitColors: function() {\n\t\tvar self = this;\n\n\t\tqazana.helpers.wpColorPicker( this.ui.colors, {\n\t\t\tchange: function() {\n\t\t\t\tvar $this = Backbone.$( this ),\n\t\t\t\t\ttype = $this.data( 'setting' );\n\n\t\t\t\tself.setValue( type, $this.wpColorPicker( 'color' ) );\n\t\t\t},\n\n\t\t\tclear: function() {\n\t\t\t\tself.setValue( this.dataset.setting, '' );\n\t\t\t}\n\t\t} );\n\t},\n\n\tonInputChange: function( event ) {\n\t\tvar type = event.currentTarget.dataset.setting,\n\t\t\t$slider = this.ui.sliders.filter( '[data-input=\"' + type + '\"]' );\n\n\t\t$slider.slider( 'value', this.getControlValue( type ) );\n\t},\n\n\tonReady: function() {\n\t\tthis.initSliders();\n\t\tthis.initColors();\n\t},\n\n\tonSlideChange: function( event, ui ) {\n\t\tvar type = event.currentTarget.dataset.input,\n\t\t\t$input = this.ui.input.filter( '[data-setting=\"' + type + '\"]' );\n\n\t\t$input.val( ui.value );\n\t\tthis.setValue( type, ui.value );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tthis.ui.colors.each( function() {\n\t\t\tvar $color = Backbone.$( this );\n\n\t\t\tif ( $color.wpColorPicker( 'instance' ) ) {\n\t\t\t\t$color.wpColorPicker( 'close' );\n\t\t\t}\n\t\t} );\n\n\t\tthis.$el.remove();\n\t}\n} );\n\nmodule.exports = ControlShadowItemView;\n",
    "var ControlBaseUnitsItemView = require( 'qazana-views/controls/base-units' ),\n\tControlSliderItemView;\n\nControlSliderItemView = ControlBaseUnitsItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseUnitsItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.slider = '.qazana-slider';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'slide @ui.slider': 'onSlideChange'\n\t},\n\n\tinitSlider: function() {\n\t\tvar size = this.getControlValue( 'size' ),\n\t\t\tunitRange = this.getCurrentRange();\n\n\t\tthis.ui.input.attr( unitRange ).val( size );\n\n\t\tthis.ui.slider.slider( _.extend( {}, unitRange, { value: size } ) );\n\t},\n\n\tresetSize: function() {\n\t\tthis.setValue( 'size', '' );\n\n\t\tthis.initSlider();\n\t},\n\n\tonReady: function() {\n\t\tthis.initSlider();\n\t},\n\n\tonSlideChange: function( event, ui ) {\n\t\tthis.setValue( 'size', ui.value );\n\n\t\tthis.ui.input.val( ui.value );\n\t},\n\n\tonInputChange: function( event ) {\n\t\tvar dataChanged = event.currentTarget.dataset.setting;\n\n\t\tif ( 'size' === dataChanged ) {\n\t\t\tthis.ui.slider.slider( 'value', this.getControlValue( 'size' ) );\n\t\t} else if ( 'unit' === dataChanged ) {\n\t\t\tthis.resetSize();\n\t\t}\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tif ( this.ui.slider.data( 'uiSlider' ) ) {\n\t\t\tthis.ui.slider.slider( 'destroy' );\n\t\t}\n\n\t\tthis.$el.remove();\n\t}\n} );\n\nmodule.exports = ControlSliderItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlStructureItemView;\n\nControlStructureItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.resetStructure = '.qazana-control-structure-reset';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'click @ui.resetStructure': 'onResetStructureClick'\n\t},\n\n\ttemplateHelpers: function() {\n\t\tvar helpers = ControlBaseItemView.prototype.templateHelpers.apply( this, arguments );\n\n\t\thelpers.getMorePresets = _.bind( this.getMorePresets, this );\n\n\t\treturn helpers;\n\t},\n\n\tgetCurrentEditedSection: function() {\n\t\tvar editor = qazana.getPanelView().getCurrentPageView();\n\n\t\treturn editor.getOption( 'editedElementView' );\n\t},\n\n\tgetMorePresets: function() {\n\t\tvar parsedStructure = qazana.presetsFactory.getParsedStructure( this.getControlValue() );\n\n\t\treturn qazana.presetsFactory.getPresets( parsedStructure.columnsCount );\n\t},\n\n\tonInputChange: function() {\n\t\tthis.getCurrentEditedSection().redefineLayout();\n\n\t\tthis.render();\n\t},\n\n\tonResetStructureClick: function() {\n\t\tthis.getCurrentEditedSection().resetColumnsCustomSize();\n\t}\n} );\n\nmodule.exports = ControlStructureItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' );\n\nmodule.exports = ControlBaseItemView.extend( {\n\tsetInputValue: function( input, value ) {\n\t\t// Make sure is string value\n\t\t// TODO: Remove in v1.6\n\t\tvalue = '' + value;\n\n\t\tthis.$( input ).prop( 'checked', this.model.get( 'return_value' ) === value );\n\t}\n} );\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlTabItemView;\n\nControlTabItemView = ControlBaseItemView.extend( {\n\ttriggers: {\n\t\t'click': 'control:tab:clicked'\n\t}\n} );\n\nmodule.exports = ControlTabItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlWPWidgetItemView;\n\nControlWPWidgetItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.form = 'form';\n\t\tui.loading = '.wp-widget-form-loading';\n\n\t\treturn ui;\n\t},\n\n\tevents: {\n\t\t'keyup @ui.form :input': 'onFormChanged',\n\t\t'change @ui.form :input': 'onFormChanged'\n\t},\n\n\tonFormChanged: function() {\n\t\tvar idBase = 'widget-' + this.model.get( 'id_base' ),\n\t\t\tsettings = this.ui.form.qazanaSerializeObject()[ idBase ].REPLACE_TO_ID;\n\n\t\tthis.setValue( settings );\n\t},\n\n\tonReady: function() {\n\t\tqazana.ajax.send( 'editor_get_wp_widget_form', {\n\t\t\tdata: {\n\t\t\t\t// Fake Widget ID\n\t\t\t\tid: this.model.cid,\n\t\t\t\twidget_type: this.model.get( 'widget' ),\n\t\t\t\tdata: JSON.stringify( this.elementSettingsModel.toJSON() )\n\t\t\t},\n\t\t\tsuccess: _.bind( function( data ) {\n\t\t\t\tthis.ui.form.html( data );\n\t\t\t\t// WP >= 4.8\n\t\t\t\tif ( wp.textWidgets ) {\n\t\t\t\t\tvar event = new jQuery.Event( 'widget-added' );\n\t\t\t\t\twp.textWidgets.handleWidgetAdded( event, this.ui.form );\n\t\t\t\t\twp.mediaWidgets.handleWidgetAdded( event, this.ui.form );\n\t\t\t\t}\n\n\t\t\t\tqazana.hooks.doAction( 'panel/widgets/' + this.model.get( 'widget' ) + '/controls/wp_widget/loaded', this );\n\t\t\t}, this )\n\t\t} );\n\t}\n} );\n\nmodule.exports = ControlWPWidgetItemView;\n",
    "var ControlBaseItemView = require( 'qazana-views/controls/base' ),\n\tControlWysiwygItemView;\n\nControlWysiwygItemView = ControlBaseItemView.extend( {\n\tchildEvents: {\n\t\t'keyup textarea.qazana-wp-editor': 'onBaseInputChange'\n\t},\n\n\t// List of buttons to move {buttonToMove: afterButton}\n\tbuttons: {\n\t\tmoveToAdvanced: {\n\t\t\tblockquote: 'removeformat',\n\t\t\talignleft: 'blockquote',\n\t\t\taligncenter: 'alignleft',\n\t\t\talignright: 'aligncenter'\n\t\t},\n\t\tmoveToBasic: {},\n\t\tremoveFromBasic: [ 'unlink', 'wp_more' ],\n\t\tremoveFromAdvanced: []\n\t},\n\n\tinitialize: function() {\n\t\tControlBaseItemView.prototype.initialize.apply( this, arguments );\n\n\t\tvar self = this;\n\n\t\tself.editorID = 'qazanawpeditor' + self.cid;\n\n\t\t// Wait a cycle before initializing the editors.\n\t\t_.defer( function() {\n\t\t\t// Initialize QuickTags, and set as the default mode.\n\t\t\tquicktags( {\n\t\t\t\tbuttons: 'strong,em,del,link,img,close',\n\t\t\t\tid: self.editorID\n\t\t\t} );\n\n\t\t\tif ( qazana.config.rich_editing_enabled ) {\n\t\t\t\tswitchEditors.go( self.editorID, 'tmce' );\n\t\t\t}\n\n\t\t\tdelete QTags.instances[ 0 ];\n\t\t} );\n\n\t\tif ( ! qazana.config.rich_editing_enabled ) {\n\t\t\tself.$el.addClass( 'qazana-rich-editing-disabled' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar editorConfig = {\n\t\t\tid: self.editorID,\n\t\t\tselector: '#' + self.editorID,\n\t\t\tsetup: function( editor ) {\n\t\t\t\t// Save the bind callback to allow overwrite it externally\n\t\t\t\tself.saveEditor = _.bind( self.saveEditor, self, editor );\n\t\t\t\teditor.on( 'keyup change undo redo SetContent', self.saveEditor );\n\t\t\t}\n\t\t};\n\n\t\ttinyMCEPreInit.mceInit[ self.editorID ] = _.extend( _.clone( tinyMCEPreInit.mceInit.qazanawpeditor ), editorConfig );\n\n\t\tif ( ! qazana.config.tinymceHasCustomConfig ) {\n\t\t\tself.rearrangeButtons();\n\t\t}\n\t},\n\n\tsaveEditor: function( editor ) {\n\t\teditor.save();\n\n\t\tthis.setValue( editor.getContent() );\n\t},\n\n\tattachElContent: function() {\n\t\tvar editorTemplate = qazana.config.wp_editor.replace( /qazanawpeditor/g, this.editorID ).replace( '%%EDITORCONTENT%%', this.getControlValue() );\n\n\t\tthis.$el.html( editorTemplate );\n\n\t\treturn this;\n\t},\n\n\tmoveButtons: function( buttonsToMove, from, to ) {\n\t\t_.each( buttonsToMove, function( afterButton, button ) {\n\t\t\tvar buttonIndex = from.indexOf( button ),\n\t\t\t\tafterButtonIndex = to.indexOf( afterButton );\n\n\t\t\tif ( -1 === buttonIndex ) {\n\t\t\t\tthrow new ReferenceError( 'Trying to move non-existing button `' + button + '`' );\n\t\t\t}\n\n\t\t\tif ( -1 === afterButtonIndex ) {\n\t\t\t\tthrow new ReferenceError( 'Trying to move button after non-existing button `' + afterButton + '`' );\n\t\t\t}\n\n\t\t\tfrom.splice( buttonIndex, 1 );\n\n\t\t\tto.splice( afterButtonIndex + 1, 0, button );\n\t\t} );\n\t},\n\n\trearrangeButtons: function() {\n\t\tvar editorProps = tinyMCEPreInit.mceInit[ this.editorID ],\n\t\t\teditorBasicToolbarButtons = editorProps.toolbar1.split( ',' ),\n\t\t\teditorAdvancedToolbarButtons = editorProps.toolbar2.split( ',' );\n\n\t\teditorBasicToolbarButtons = _.difference( editorBasicToolbarButtons, this.buttons.removeFromBasic );\n\n\t\teditorAdvancedToolbarButtons = _.difference( editorAdvancedToolbarButtons, this.buttons.removeFromAdvanced );\n\n\t\tthis.moveButtons( this.buttons.moveToBasic, editorAdvancedToolbarButtons, editorBasicToolbarButtons );\n\n\t\tthis.moveButtons( this.buttons.moveToAdvanced, editorBasicToolbarButtons, editorAdvancedToolbarButtons );\n\n\t\teditorProps.toolbar1 = editorBasicToolbarButtons.join( ',' );\n\t\teditorProps.toolbar2 = editorAdvancedToolbarButtons.join( ',' );\n\t},\n\n\tonAfterExternalChange: function() {\n\t\ttinymce.get( this.editorID ).setContent( this.getControlValue() );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\t// Remove TinyMCE and QuickTags instances\n\t\tdelete QTags.instances[ this.editorID ];\n\n\t\tif ( ! qazana.config.rich_editing_enabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttinymce.EditorManager.execCommand( 'mceRemoveEditor', true, this.editorID );\n\n\t\t// Cleanup PreInit data\n\t\tdelete tinyMCEPreInit.mceInit[ this.editorID ];\n\t\tdelete tinyMCEPreInit.qtInit[ this.editorID ];\n\t}\n} );\n\nmodule.exports = ControlWysiwygItemView;\n",
    "var ElementEmptyView;\n\nElementEmptyView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-empty-preview',\n\n\tclassName: 'qazana-empty-view',\n\n\tevents: {\n\t\t'click': 'onClickAdd'\n\t},\n\n\tonClickAdd: function() {\n\t\tqazana.getPanelView().setPage( 'elements' );\n\t}\n} );\n\nmodule.exports = ElementEmptyView;\n",
    "var BaseSectionsContainerView = require( 'qazana-views/base-sections-container' ),\n\tAddSectionView = require( 'qazana-views/add-section/independent' ),\n\tPreview;\n\nPreview = BaseSectionsContainerView.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-qazana-preview' ),\n\n\tclassName: 'qazana-inner',\n\n\tchildViewContainer: '.qazana-section-wrap',\n\n\tonRender: function() {\n\t\tvar addNewSectionView = new AddSectionView();\n\n\t\taddNewSectionView.render();\n\n\t\tthis.$el.append( addNewSectionView.$el );\n\t}\n} );\n\nmodule.exports = Preview;\n",
    "var BaseElementView = require( 'qazana-views/base-element' ),\n\tAddSectionView = require( 'qazana-views/add-section/inline' ),\n\tSectionView;\n\nSectionView = BaseElementView.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-qazana-element-section-content' ),\n\n\taddSectionView: null,\n\n\ttoggleEditTools: false,\n\n\tclassName: function() {\n\t\tvar classes = BaseElementView.prototype.className.apply( this, arguments ),\n\t\t\ttype = this.isInner() ? 'inner' : 'top';\n\n\t\treturn classes + ' qazana-section qazana-' + type + '-section';\n\t},\n\n\ttagName: function() {\n\t\treturn this.model.getSetting( 'html_tag' ) || 'section';\n\t},\n\n\tchildViewContainer: '> .qazana-container > .qazana-row',\n\n\tbehaviors: function() {\n\t\tvar behaviors = BaseElementView.prototype.behaviors.apply( this, arguments );\n\n\t\t_.extend( behaviors, {\n\t\t\tSortable: {\n\t\t\t\tbehaviorClass: require( 'qazana-behaviors/sortable' ),\n\t\t\t\telChildType: 'column'\n\t\t\t},\n\t\t\tHandleDuplicate: {\n\t\t\t\tbehaviorClass: require( 'qazana-behaviors/handle-duplicate' )\n\t\t\t},\n\t\t\tHandleAddMode: {\n\t\t\t\tbehaviorClass: require( 'qazana-behaviors/duplicate' )\n\t\t\t}\n\t\t} );\n\n\t\treturn qazana.hooks.applyFilters( 'elements/section/behaviors', behaviors, this );\n\t},\n\n\terrors: {\n\t\tcolumnWidthTooLarge: 'New column width is too large',\n\t\tcolumnWidthTooSmall: 'New column width is too small'\n\t},\n\n\tevents: function() {\n\t\tvar events = BaseElementView.prototype.events.apply( this, arguments );\n\n\t\tevents[ 'click @ui.addButton' ] = 'onClickAdd';\n\n\t\treturn events;\n\t},\n\n\tinitialize: function() {\n\t\tBaseElementView.prototype.initialize.apply( this, arguments );\n\n\t\tthis.listenTo( this.collection, 'add remove reset', this._checkIsFull );\n\n\t\tthis._checkIsEmpty();\n\t},\n\n\taddEmptyColumn: function() {\n\t\tthis.addChildModel( {\n\t\t\tid: qazana.helpers.getUniqueID(),\n\t\t\telType: 'column',\n\t\t\tsettings: {},\n\t\t\telements: []\n\t\t} );\n\t},\n\n\taddChildModel: function( model, options ) {\n\t\tvar isModelInstance = model instanceof Backbone.Model,\n\t\t\tisInner = this.isInner();\n\n\t\tif ( isModelInstance ) {\n\t\t\tmodel.set( 'isInner', isInner );\n\t\t} else {\n\t\t\tmodel.isInner = isInner;\n\t\t}\n\n\t\treturn BaseElementView.prototype.addChildModel.apply( this, arguments );\n\t},\n\n\tgetSortableOptions: function() {\n\t\tvar sectionConnectClass = this.isInner() ? '.qazana-inner-section' : '.qazana-top-section';\n\n\t\treturn {\n\t\t\tconnectWith: sectionConnectClass + ' > .qazana-container > .qazana-row',\n\t\t\thandle: '> .qazana-element-overlay .qazana-editor-column-settings .qazana-editor-element-trigger',\n\t\t\titems: '> .qazana-column',\n\t\t\tforcePlaceholderSize: true,\n\t\t\ttolerance: 'pointer'\n\t\t};\n\t},\n\n\tonSettingsChanged: function( settingsModel ) {\n\t\tBaseElementView.prototype.onSettingsChanged.apply( this, arguments );\n\n\t\tif ( settingsModel.changed.structure ) {\n\t\t\tthis.redefineLayout();\n\t\t}\n\t},\n\n\tgetColumnPercentSize: function( element, size ) {\n\t\treturn +( size / element.parent().width() * 100 ).toFixed( 3 );\n\t},\n\n\tgetDefaultStructure: function() {\n\t\treturn this.collection.length + '0';\n\t},\n\n\tgetStructure: function() {\n\t\treturn this.model.getSetting( 'structure' );\n\t},\n\n\tsetStructure: function( structure ) {\n\t\tvar parsedStructure = qazana.presetsFactory.getParsedStructure( structure );\n\n\t\tif ( +parsedStructure.columnsCount !== this.collection.length ) {\n\t\t\tthrow new TypeError( 'The provided structure doesn\\'t match the columns count.' );\n\t\t}\n\n\t\tthis.model.setSetting( 'structure', structure );\n\t},\n\n\tredefineLayout: function() {\n\t\tvar preset = qazana.presetsFactory.getPresetByStructure( this.getStructure() );\n\n\t\tthis.collection.each( function( model, index ) {\n\t\t\tmodel.setSetting( '_column_size', preset.preset[ index ] );\n\t\t\tmodel.setSetting( '_inline_size', null );\n\t\t} );\n\t},\n\n\tresetLayout: function() {\n\t\tthis.setStructure( this.getDefaultStructure() );\n\t},\n\n\tresetColumnsCustomSize: function() {\n\t\tthis.collection.each( function( model ) {\n\t\t\tmodel.setSetting( '_inline_size', null );\n\t\t} );\n\t},\n\n\tisCollectionFilled: function() {\n\t\tvar MAX_SIZE = 10,\n\t\t\tcolumnsCount = this.collection.length;\n\n\t\treturn ( MAX_SIZE <= columnsCount );\n\t},\n\n\t_checkIsFull: function() {\n\t\tthis.$el.toggleClass( 'qazana-section-filled', this.isCollectionFilled() );\n\t},\n\n\t_checkIsEmpty: function() {\n\t\tif ( ! this.collection.length && ! this.model.get( 'dontFillEmpty' ) ) {\n\t\t\tthis.addEmptyColumn();\n\t\t}\n\t},\n\n\tgetColumnAt: function( index ) {\n\t\tvar model = this.collection.at( index );\n\n\t\treturn model ? this.children.findByModelCid( model.cid ) : null;\n\t},\n\n\tgetNextColumn: function( columnView ) {\n\t\treturn this.getColumnAt( this.collection.indexOf( columnView.model ) + 1 );\n\t},\n\n\tgetPreviousColumn: function( columnView ) {\n\t\treturn this.getColumnAt( this.collection.indexOf( columnView.model ) - 1 );\n\t},\n\n\tshowChildrenPercentsTooltip: function( columnView, nextColumnView ) {\n\t\tcolumnView.ui.percentsTooltip.show();\n\n\t\tcolumnView.ui.percentsTooltip.attr( 'data-side', qazana.config.is_rtl ? 'right' : 'left' );\n\n\t\tnextColumnView.ui.percentsTooltip.show();\n\n\t\tnextColumnView.ui.percentsTooltip.attr( 'data-side', qazana.config.is_rtl ? 'left' : 'right' );\n\t},\n\n\thideChildrenPercentsTooltip: function( columnView, nextColumnView ) {\n\t\tcolumnView.ui.percentsTooltip.hide();\n\n\t\tnextColumnView.ui.percentsTooltip.hide();\n\t},\n\n\tresizeChild: function( childView, currentSize, newSize ) {\n\t\tvar nextChildView = this.getNextColumn( childView ) || this.getPreviousColumn( childView );\n\n\t\tif ( ! nextChildView ) {\n\t\t\tthrow new ReferenceError( 'There is not any next column' );\n\t\t}\n\n\t\tvar minColumnSize = 10,\n\t\t\t$nextElement = nextChildView.$el,\n\t\t\tnextElementCurrentSize = +nextChildView.model.getSetting( '_inline_size' ) || this.getColumnPercentSize( $nextElement, $nextElement[0].getBoundingClientRect().width ),\n\t\t\tnextElementNewSize = +( currentSize + nextElementCurrentSize - newSize ).toFixed( 3 );\n\n\t\tif ( nextElementNewSize < minColumnSize ) {\n\t\t\tthrow new RangeError( this.errors.columnWidthTooLarge );\n\t\t}\n\n\t\tif ( newSize < minColumnSize ) {\n\t\t\tthrow new RangeError( this.errors.columnWidthTooSmall );\n\t\t}\n\n\t\tnextChildView.model.setSetting( '_inline_size', nextElementNewSize );\n\n\t\treturn true;\n\t},\n\n\tdestroyAddSectionView: function() {\n\t\tif ( this.addSectionView && ! this.addSectionView.isDestroyed ) {\n\t\t\tthis.addSectionView.destroy();\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tBaseElementView.prototype.onRender.apply( this, arguments );\n\n\t\tthis._checkIsFull();\n\t},\n\n\tonClickAdd: function() {\n\t\tif ( this.addSectionView && ! this.addSectionView.isDestroyed ) {\n\t\t\tthis.addSectionView.fadeToDeath();\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar myIndex = this.model.collection.indexOf( this.model ),\n\t\t\taddSectionView = new AddSectionView( {\n\t\t\t\tatIndex: myIndex\n\t\t\t} );\n\n\t\taddSectionView.render();\n\n\t\tthis.$el.before( addSectionView.$el );\n\n\t\taddSectionView.$el.hide();\n\n\t\t// Delaying the slide down for slow-render browsers (such as FF)\n\t\tsetTimeout( function() {\n\t\t\taddSectionView.$el.slideDown();\n\t\t} );\n\n\t\tthis.addSectionView = addSectionView;\n\t},\n\n\tonAddChild: function() {\n\t\tif ( ! this.isBuffering && ! this.model.get( 'dontFillEmpty' ) ) {\n\t\t\t// Reset the layout just when we have really add/remove element.\n\t\t\tthis.resetLayout();\n\t\t}\n\t},\n\n\tonRemoveChild: function() {\n\t\tif ( ! this.isManualRemoving ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If it's the last column, please create new one.\n\t\tthis._checkIsEmpty();\n\n\t\tthis.resetLayout();\n\t},\n\n\tonChildviewRequestResizeStart: function( columnView ) {\n\t\tvar nextColumnView = this.getNextColumn( columnView );\n\n\t\tif ( ! nextColumnView ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.showChildrenPercentsTooltip( columnView, nextColumnView );\n\n\t\tvar $iframes = columnView.$el.find( 'iframe' ).add( nextColumnView.$el.find( 'iframe' ) );\n\n\t\tqazana.helpers.disableElementEvents( $iframes );\n\t},\n\n\tonChildviewRequestResizeStop: function( columnView ) {\n\t\tvar nextColumnView = this.getNextColumn( columnView );\n\n\t\tif ( ! nextColumnView ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hideChildrenPercentsTooltip( columnView, nextColumnView );\n\n\t\tvar $iframes = columnView.$el.find( 'iframe' ).add( nextColumnView.$el.find( 'iframe' ) );\n\n\t\tqazana.helpers.enableElementEvents( $iframes );\n\t},\n\n\tonChildviewRequestResize: function( columnView, ui, event ) {\n\t\t// Get current column details\n\t\tvar currentSize = +columnView.model.getSetting( '_inline_size' ) || this.getColumnPercentSize( columnView.$el, columnView.$el.data( 'originalWidth' ) );\n\n\t\tui.element.css( {\n\t\t\twidth: '',\n\t\t\tleft: 'initial' // Fix for RTL resizing\n\t\t} );\n\n\t\tvar newSize = this.getColumnPercentSize( ui.element, ui.size.width );\n\n\t\ttry {\n\t\t\tthis.resizeChild( columnView, currentSize, newSize );\n\t\t} catch ( e ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumnView.model.setSetting( '_inline_size', newSize );\n\t},\n\n\tonDestroy: function() {\n\t\tBaseElementView.prototype.onDestroy.apply( this, arguments );\n\n\t\tthis.destroyAddSectionView();\n\t}\n} );\n\nmodule.exports = SectionView;\n",
    "var BaseElementView = require( 'qazana-views/base-element' ),\n\tWidgetView;\n\nWidgetView = BaseElementView.extend( {\n\t_templateType: null,\n\n\tgetTemplate: function() {\n\t\tvar editModel = this.getEditModel();\n\n\t\tif ( 'remote' !== this.getTemplateType() ) {\n\t\t\treturn Marionette.TemplateCache.get( '#tmpl-qazana-' + editModel.get( 'elType' ) + '-' + editModel.get( 'widgetType' ) + '-content' );\n\t\t} else {\n\t\t\treturn _.template( '' );\n\t\t}\n\t},\n\n\tclassName: function() {\n\t\treturn BaseElementView.prototype.className.apply( this, arguments ) + ' qazana-widget';\n\t},\n\n\tevents: function() {\n\t\tvar events = BaseElementView.prototype.events.apply( this, arguments );\n\n\t\tevents.click = 'onClickEdit';\n\n\t\treturn events;\n\t},\n\n\tinitialize: function() {\n\t\tBaseElementView.prototype.initialize.apply( this, arguments );\n\n\t\tvar editModel = this.getEditModel();\n\n\t\teditModel.on( {\n\t\t\t'before:remote:render': _.bind( this.onModelBeforeRemoteRender, this ),\n\t\t\t'remote:render': _.bind( this.onModelRemoteRender, this )\n\t\t} );\n\n\t\tif ( 'remote' === this.getTemplateType() && ! this.getEditModel().getHtmlCache() ) {\n\t\t\teditModel.renderRemoteServer();\n\t\t}\n\n\t\tvar onRenderMethod = this.onRender;\n\n\t\tthis.render = _.throttle( this.render, 300 );\n\n\t\tthis.onRender = function() {\n\t\t\t_.defer( _.bind( onRenderMethod, this ) );\n\t\t};\n\t},\n\n\trender: function() {\n\t\tif ( this.model.isRemoteRequestActive() ) {\n\t\t\tthis.handleEmptyWidget();\n\n\t\t\tthis.$el.addClass( 'qazana-element' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tMarionette.CompositeView.prototype.render.apply( this, arguments );\n\t},\n\n\thandleEmptyWidget: function() {\n\t\t// TODO: REMOVE THIS !!\n\t\t// TEMP CODING !!\n\t\tthis.$el\n\t\t\t.addClass( 'qazana-widget-empty' )\n\t\t\t.append( '<i class=\"qazana-widget-empty-icon ' + this.getEditModel().getIcon() + '\"></i>' );\n\t},\n\n\tgetTemplateType: function() {\n\t\tif ( null === this._templateType ) {\n\t\t\tvar editModel = this.getEditModel(),\n\t\t\t\t$template = Backbone.$( '#tmpl-qazana-' + editModel.get( 'elType' ) + '-' + editModel.get( 'widgetType' ) + '-content' );\n\n\t\t\tthis._templateType = $template.length ? 'js' : 'remote';\n\t\t}\n\n\t\treturn this._templateType;\n\t},\n\n\tonModelBeforeRemoteRender: function() {\n\t\tthis.$el.addClass( 'qazana-loading' );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\t// Remove old style from the DOM.\n\t\tqazana.$previewContents.find( '#qazana-style-' + this.model.cid ).remove();\n\t},\n\n\tonModelRemoteRender: function() {\n\t\tif ( this.isDestroyed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$el.removeClass( 'qazana-loading' );\n\t\tthis.render();\n\t},\n\n\tgetHTMLContent: function( html ) {\n\t\tvar htmlCache = this.getEditModel().getHtmlCache();\n\n\t\treturn htmlCache || html;\n\t},\n\n\tattachElContent: function( html ) {\n\t\tvar self = this,\n\t\t\thtmlContent = self.getHTMLContent( html );\n\n\t\t_.defer( function() {\n\t\t\tqazanaFrontend.getElements( 'window' ).jQuery( self.el ).html( htmlContent );\n\n\t\t\tself.bindUIElements(); // Build again the UI elements since the content attached just now\n\t\t} );\n\n\t\treturn this;\n\t},\n\n\tonRender: function() {\n        var self = this;\n\n\t\tBaseElementView.prototype.onRender.apply( self, arguments );\n\n\t    var editModel = self.getEditModel(),\n\t        skinType = editModel.getSetting( '_skin' ) || 'default';\n\n        self.$el\n\t        .attr( 'data-element_type', editModel.get( 'widgetType' ) + '.' + skinType )\n            .removeClass( 'qazana-widget-empty' )\n\t        .addClass( 'qazana-widget-' + editModel.get( 'widgetType' ) + ' qazana-widget-can-edit' )\n            .children( '.qazana-widget-empty-icon' )\n            .remove();\n\n\t\t// TODO: Find better way to detect if all images are loaded\n\t\tself.$el.imagesLoaded().always( function() {\n\t\t\tsetTimeout( function() {\n\t\t\t\tif ( 1 > self.$el.height() ) {\n\t\t\t\t\tself.handleEmptyWidget();\n\t\t\t\t}\n\t\t\t}, 200 );\n\t\t\t// Is element empty?\n\t\t} );\n\t}\n} );\n\nmodule.exports = WidgetView;\n",
    "'use strict';\n\n/**\n * Handles managing all events for whatever you plug it into. Priorities for hooks are based on lowest to highest in\n * that, lowest priority hooks are fired first.\n */\nvar EventManager = function() {\n\tvar slice = Array.prototype.slice,\n\t\tMethodsAvailable;\n\n\t/**\n\t * Contains the hooks that get registered with this EventManager. The array for storage utilizes a \"flat\"\n\t * object literal such that looking up the hook utilizes the native object literal hash.\n\t */\n\tvar STORAGE = {\n\t\tactions: {},\n\t\tfilters: {}\n\t};\n\n\t/**\n\t * Removes the specified hook by resetting the value of it.\n\t *\n\t * @param type Type of hook, either 'actions' or 'filters'\n\t * @param hook The hook (namespace.identifier) to remove\n\t *\n\t * @private\n\t */\n\tfunction _removeHook( type, hook, callback, context ) {\n\t\tvar handlers, handler, i;\n\n\t\tif ( ! STORAGE[ type ][ hook ] ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( ! callback ) {\n\t\t\tSTORAGE[ type ][ hook ] = [];\n\t\t} else {\n\t\t\thandlers = STORAGE[ type ][ hook ];\n\t\t\tif ( ! context ) {\n\t\t\t\tfor ( i = handlers.length; i--; ) {\n\t\t\t\t\tif ( handlers[ i ].callback === callback ) {\n\t\t\t\t\t\thandlers.splice( i, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i = handlers.length; i--; ) {\n\t\t\t\t\thandler = handlers[ i ];\n\t\t\t\t\tif ( handler.callback === callback && handler.context === context ) {\n\t\t\t\t\t\thandlers.splice( i, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Use an insert sort for keeping our hooks organized based on priority. This function is ridiculously faster\n\t * than bubble sort, etc: http://jsperf.com/javascript-sort\n\t *\n\t * @param hooks The custom array containing all of the appropriate hooks to perform an insert sort on.\n\t * @private\n\t */\n\tfunction _hookInsertSort( hooks ) {\n\t\tvar tmpHook, j, prevHook;\n\t\tfor ( var i = 1, len = hooks.length; i < len; i++ ) {\n\t\t\ttmpHook = hooks[ i ];\n\t\t\tj = i;\n\t\t\twhile ( ( prevHook = hooks[ j - 1 ] ) && prevHook.priority > tmpHook.priority ) {\n\t\t\t\thooks[ j ] = hooks[ j - 1 ];\n\t\t\t\t--j;\n\t\t\t}\n\t\t\thooks[ j ] = tmpHook;\n\t\t}\n\n\t\treturn hooks;\n\t}\n\n\t/**\n\t * Adds the hook to the appropriate storage container\n\t *\n\t * @param type 'actions' or 'filters'\n\t * @param hook The hook (namespace.identifier) to add to our event manager\n\t * @param callback The function that will be called when the hook is executed.\n\t * @param priority The priority of this hook. Must be an integer.\n\t * @param [context] A value to be used for this\n\t * @private\n\t */\n\tfunction _addHook( type, hook, callback, priority, context ) {\n\t\tvar hookObject = {\n\t\t\tcallback: callback,\n\t\t\tpriority: priority,\n\t\t\tcontext: context\n\t\t};\n\n\t\t// Utilize 'prop itself' : http://jsperf.com/hasownproperty-vs-in-vs-undefined/19\n\t\tvar hooks = STORAGE[ type ][ hook ];\n\t\tif ( hooks ) {\n\t\t\t// TEMP FIX BUG\n\t\t\tvar hasSameCallback = false;\n\t\t\tjQuery.each( hooks, function() {\n\t\t\t\tif ( this.callback === callback ) {\n\t\t\t\t\thasSameCallback = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( hasSameCallback ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// END TEMP FIX BUG\n\n\t\t\thooks.push( hookObject );\n\t\t\thooks = _hookInsertSort( hooks );\n\t\t} else {\n\t\t\thooks = [ hookObject ];\n\t\t}\n\n\t\tSTORAGE[ type ][ hook ] = hooks;\n\t}\n\n\t/**\n\t * Runs the specified hook. If it is an action, the value is not modified but if it is a filter, it is.\n\t *\n\t * @param type 'actions' or 'filters'\n\t * @param hook The hook ( namespace.identifier ) to be ran.\n\t * @param args Arguments to pass to the action/filter. If it's a filter, args is actually a single parameter.\n\t * @private\n\t */\n\tfunction _runHook( type, hook, args ) {\n\t\tvar handlers = STORAGE[ type ][ hook ], i, len;\n\n\t\tif ( ! handlers ) {\n\t\t\treturn ( 'filters' === type ) ? args[ 0 ] : false;\n\t\t}\n\n\t\tlen = handlers.length;\n\t\tif ( 'filters' === type ) {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\targs[ 0 ] = handlers[ i ].callback.apply( handlers[ i ].context, args );\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\thandlers[ i ].callback.apply( handlers[ i ].context, args );\n\t\t\t}\n\t\t}\n\n\t\treturn ( 'filters' === type ) ? args[ 0 ] : true;\n\t}\n\n\t/**\n\t * Adds an action to the event manager.\n\t *\n\t * @param action Must contain namespace.identifier\n\t * @param callback Must be a valid callback function before this action is added\n\t * @param [priority=10] Used to control when the function is executed in relation to other callbacks bound to the same hook\n\t * @param [context] Supply a value to be used for this\n\t */\n\tfunction addAction( action, callback, priority, context ) {\n\t\tif ( 'string' === typeof action && 'function' === typeof callback ) {\n\t\t\tpriority = parseInt( ( priority || 10 ), 10 );\n\t\t\t_addHook( 'actions', action, callback, priority, context );\n\t\t}\n\n\t\treturn MethodsAvailable;\n\t}\n\n\t/**\n\t * Performs an action if it exists. You can pass as many arguments as you want to this function; the only rule is\n\t * that the first argument must always be the action.\n\t */\n\tfunction doAction( /* action, arg1, arg2, ... */ ) {\n\t\tvar args = slice.call( arguments );\n\t\tvar action = args.shift();\n\n\t\tif ( 'string' === typeof action ) {\n\t\t\t_runHook( 'actions', action, args );\n\t\t}\n\n\t\treturn MethodsAvailable;\n\t}\n\n\t/**\n\t * Removes the specified action if it contains a namespace.identifier & exists.\n\t *\n\t * @param action The action to remove\n\t * @param [callback] Callback function to remove\n\t */\n\tfunction removeAction( action, callback ) {\n\t\tif ( 'string' === typeof action ) {\n\t\t\t_removeHook( 'actions', action, callback );\n\t\t}\n\n\t\treturn MethodsAvailable;\n\t}\n\n\t/**\n\t * Adds a filter to the event manager.\n\t *\n\t * @param filter Must contain namespace.identifier\n\t * @param callback Must be a valid callback function before this action is added\n\t * @param [priority=10] Used to control when the function is executed in relation to other callbacks bound to the same hook\n\t * @param [context] Supply a value to be used for this\n\t */\n\tfunction addFilter( filter, callback, priority, context ) {\n\t\tif ( 'string' === typeof filter && 'function' === typeof callback ) {\n\t\t\tpriority = parseInt( ( priority || 10 ), 10 );\n\t\t\t_addHook( 'filters', filter, callback, priority, context );\n\t\t}\n\n\t\treturn MethodsAvailable;\n\t}\n\n\t/**\n\t * Performs a filter if it exists. You should only ever pass 1 argument to be filtered. The only rule is that\n\t * the first argument must always be the filter.\n\t */\n\tfunction applyFilters( /* filter, filtered arg, arg2, ... */ ) {\n\t\tvar args = slice.call( arguments );\n\t\tvar filter = args.shift();\n\n\t\tif ( 'string' === typeof filter ) {\n\t\t\treturn _runHook( 'filters', filter, args );\n\t\t}\n\n\t\treturn MethodsAvailable;\n\t}\n\n\t/**\n\t * Removes the specified filter if it contains a namespace.identifier & exists.\n\t *\n\t * @param filter The action to remove\n\t * @param [callback] Callback function to remove\n\t */\n\tfunction removeFilter( filter, callback ) {\n\t\tif ( 'string' === typeof filter ) {\n\t\t\t_removeHook( 'filters', filter, callback );\n\t\t}\n\n\t\treturn MethodsAvailable;\n\t}\n\n\t/**\n\t * Maintain a reference to the object scope so our public methods never get confusing.\n\t */\n\tMethodsAvailable = {\n\t\tremoveFilter: removeFilter,\n\t\tapplyFilters: applyFilters,\n\t\taddFilter: addFilter,\n\t\tremoveAction: removeAction,\n\t\tdoAction: doAction,\n\t\taddAction: addAction\n\t};\n\n\t// return all of the publicly available methods\n\treturn MethodsAvailable;\n};\n\nmodule.exports = EventManager;\n",
    "var Module = function() {\n\tvar $ = jQuery,\n\t\tinstanceParams = arguments,\n\t\tself = this,\n\t\tsettings,\n\t\tevents = {};\n\n\tvar ensureClosureMethods = function() {\n\t\t$.each( self, function( methodName ) {\n\t\t\tvar oldMethod = self[ methodName ];\n\n\t\t\tif ( 'function' !== typeof oldMethod ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself[ methodName ] = function() {\n\t\t\t\treturn oldMethod.apply( self, arguments );\n\t\t\t};\n\t\t});\n\t};\n\n\tvar initSettings = function() {\n\t\tsettings = self.getDefaultSettings();\n\n\t\tvar instanceSettings = instanceParams[0];\n\n\t\tif ( instanceSettings ) {\n\t\t\t$.extend( settings, instanceSettings );\n\t\t}\n\t};\n\n\tvar init = function() {\n\t\tself.__construct.apply( self, instanceParams );\n\n\t\tensureClosureMethods();\n\n\t\tinitSettings();\n\n\t\tself.trigger( 'init' );\n\t};\n\n\tthis.getItems = function( items, itemKey ) {\n\t\tif ( itemKey ) {\n\t\t\tvar keyStack = itemKey.split( '.' ),\n\t\t\t\tcurrentKey = keyStack.splice( 0, 1 );\n\n\t\t\tif ( ! keyStack.length ) {\n\t\t\t\treturn items[ currentKey ];\n\t\t\t}\n\n\t\t\tif ( ! items[ currentKey ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn this.getItems(  items[ currentKey ], keyStack.join( '.' ) );\n\t\t}\n\n\t\treturn items;\n\t};\n\n\tthis.getSettings = function( setting ) {\n\t\treturn this.getItems( settings, setting );\n\t};\n\n\tthis.setSettings = function( settingKey, value, settingsContainer ) {\n\t\tif ( ! settingsContainer ) {\n\t\t\tsettingsContainer = settings;\n\t\t}\n\n\t\tif ( 'object' === typeof settingKey ) {\n\t\t\t$.extend( settingsContainer, settingKey );\n\n\t\t\treturn self;\n\t\t}\n\n\t\tvar keyStack = settingKey.split( '.' ),\n\t\t\tcurrentKey = keyStack.splice( 0, 1 );\n\n\t\tif ( ! keyStack.length ) {\n\t\t\tsettingsContainer[ currentKey ] = value;\n\n\t\t\treturn self;\n\t\t}\n\n\t\tif ( ! settingsContainer[ currentKey ] ) {\n\t\t\tsettingsContainer[ currentKey ] = {};\n\t\t}\n\n\t\treturn self.setSettings( keyStack.join( '.' ), value, settingsContainer[ currentKey ] );\n\t};\n\n\tthis.forceMethodImplementation = function( methodArguments ) {\n\t\tvar functionName = methodArguments.callee.name;\n\n\t\tthrow new ReferenceError( 'The method ' + functionName + ' must to be implemented in the inheritor child.' );\n\t};\n\n\tthis.on = function( eventName, callback ) {\n\t\tif ( ! events[ eventName ] ) {\n\t\t\tevents[ eventName ] = [];\n\t\t}\n\n\t\tevents[ eventName ].push( callback );\n\n\t\treturn self;\n\t};\n\n\tthis.off = function( eventName, callback ) {\n\t\tif ( ! events[ eventName ] ) {\n\t\t\treturn self;\n\t\t}\n\n\t\tif ( ! callback ) {\n\t\t\tdelete events[ eventName ];\n\n\t\t\treturn self;\n\t\t}\n\n\t\tvar callbackIndex = events[ eventName ].indexOf( callback );\n\n\t\tif ( -1 !== callbackIndex ) {\n\t\t\tdelete events[ eventName ][ callbackIndex ];\n\t\t}\n\n\t\treturn self;\n\t};\n\n\tthis.trigger = function( eventName ) {\n\t\tvar methodName = 'on' + eventName[ 0 ].toUpperCase() + eventName.slice( 1 ),\n\t\t\tparams = Array.prototype.slice.call( arguments, 1 );\n\n\t\tif ( self[ methodName ] ) {\n\t\t\tself[ methodName ].apply( self, params );\n\t\t}\n\n\t\tvar callbacks = events[ eventName ];\n\n\t\tif ( ! callbacks ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$.each( callbacks, function( index, callback ) {\n\t\t\tcallback.apply( self, params );\n\t\t} );\n\t};\n\n\tinit();\n};\n\nModule.prototype.__construct = function() {};\n\nModule.prototype.getDefaultSettings = function() {\n\treturn {};\n};\n\nModule.extendsCount = 0;\n\nModule.extend = function( properties ) {\n\tvar $ = jQuery,\n\t\tparent = this;\n\n\tvar child = function() {\n\t\treturn parent.apply( this, arguments );\n\t};\n\n\t$.extend( child, parent );\n\n\tchild.prototype = Object.create( $.extend( {}, parent.prototype, properties ) );\n\n\tchild.prototype.constructor = child;\n\n\t/*\n\t * Constructor ID is used to set an unique ID\n     * to every extend of the Module.\n     *\n\t * It's useful in some cases such as unique\n\t * listener for frontend handlers.\n\t */\n\tvar constructorID = ++Module.extendsCount;\n\n\tchild.prototype.getConstructorID = function() {\n\t\treturn constructorID;\n\t};\n\n\tchild.__super__ = parent.prototype;\n\n\treturn child;\n};\n\nmodule.exports = Module;\n",
    "var Module = require( 'qazana-utils/module' ),\n\tViewModule;\n\nViewModule = Module.extend( {\n\telements: null,\n\n\tgetDefaultElements: function() {\n\t\treturn {};\n\t},\n\n\tbindEvents: function() {},\n\n\tonInit: function() {\n\t\tthis.initElements();\n\n\t\tthis.bindEvents();\n\t},\n\n\tinitElements: function() {\n\t\tthis.elements = this.getDefaultElements();\n\t}\n} );\n\nmodule.exports = ViewModule;\n",
    "module.exports = Marionette.Behavior.extend( {\n\tlistenerAttached: false,\n\n\t// use beforeRender that runs after the collection is exist\n\tonBeforeRender: function() {\n\t\tif ( this.view.collection && ! this.listenerAttached ) {\n\t\t\tthis.view.collection.on( 'update', this.saveCollectionHistory, this );\n\t\t\tthis.listenerAttached = true;\n\t\t}\n\t},\n\n\tsaveCollectionHistory: function( collection, event ) {\n\t\tif ( ! qazana.history.history.getActive() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar historyItem,\n\t\t\tmodels,\n\t\t\tfirstModel,\n\t\t\ttype;\n\n\t\tif ( event.add ) {\n\t\t\tmodels = event.changes.added;\n\t\t\tfirstModel = models[0];\n\t\t\ttype = 'add';\n\t\t} else {\n\t\t\tmodels = event.changes.removed;\n\t\t\tfirstModel = models[0];\n\t\t\ttype = 'remove';\n\t\t}\n\n\t\tvar title = qazana.history.history.getModelLabel( firstModel );\n\n\t\t// If it's an unknown model - don't save\n\t\tif ( ! title ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar modelsJSON = [];\n\n\t\t_.each( models, function( model ) {\n\t\t\tmodelsJSON.push( model.toJSON( { copyHtmlCache: true } ) );\n\t\t} );\n\n\t\thistoryItem = {\n\t\t\ttype: type,\n\t\t\telementType: firstModel.get( 'elType' ),\n\t\t\telementID: firstModel.get( 'id' ),\n\t\t\ttitle: title,\n\t\t\thistory: {\n\t\t\t\tbehavior: this,\n\t\t\t\tcollection: collection,\n\t\t\t\tevent: event,\n\t\t\t\tmodels: modelsJSON\n\t\t\t}\n\t\t};\n\n\t\tqazana.history.history.addItem( historyItem );\n\t},\n\n\tadd: function( models, toView, position ) {\n\t\tif ( 'section' === models[0].elType ) {\n\t\t\t_.each( models, function( model ) {\n\t\t\t\tmodel.dontFillEmpty = true;\n\t\t\t} );\n\t\t}\n\n\t\ttoView.addChildModel( models, { at: position, silent: 0 } );\n\t},\n\n\tremove: function( models, fromCollection ) {\n\t\tfromCollection.remove( models, { silent: 0 } );\n\t},\n\n\trestore: function( historyItem, isRedo ) {\n\t\tvar\ttype = historyItem.get( 'type' ),\n\t\t\thistory = historyItem.get( 'history' ),\n\t\t\tdidAction = false,\n\t\t\tbehavior;\n\n\t\t// Find the new behavior and work with him\n\t\tif ( history.behavior.view.model ) {\n\t\t\tvar modelID = history.behavior.view.model.get( 'id' ),\n\t\t\t\tview = qazana.history.history.findView( modelID );\n\t\t\tif ( view ) {\n\t\t\t\tbehavior = view.getBehavior( 'CollectionHistory' );\n\t\t\t}\n\t\t}\n\n\t\t// Container or new Elements - Doesn't have a new behavior\n\t\tif ( ! behavior ) {\n\t\t\tbehavior = history.behavior;\n\t\t}\n\n\t\t// Stop listen to undo actions\n\t\tbehavior.view.collection.off( 'update', behavior.saveCollectionHistory );\n\n\t\tswitch ( type ) {\n\t\t\tcase 'add':\n\t\t\t\tif ( isRedo ) {\n\t\t\t\t\tthis.add( history.models, behavior.view, history.event.index );\n\t\t\t\t} else {\n\t\t\t\t\tthis.remove( history.models, behavior.view.collection );\n\t\t\t\t}\n\n\t\t\t\tdidAction = true;\n\t\t\t\tbreak;\n\t\t\tcase 'remove':\n\t\t\t\tif ( isRedo ) {\n\t\t\t\t\tthis.remove( history.models, behavior.view.collection );\n\t\t\t\t} else {\n\t\t\t\t\tthis.add( history.models, behavior.view, history.event.index );\n\t\t\t\t}\n\n\t\t\t\tdidAction = true;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Listen again\n\t\tbehavior.view.collection.on( 'update', behavior.saveCollectionHistory, history.behavior );\n\n\t\treturn didAction;\n\t}\n} );\n\n",
    "var ItemModel = require( './item' );\n\nmodule.exports = Backbone.Collection.extend( {\n\tmodel: ItemModel\n} );\n",
    "module.exports = Marionette.Behavior.extend( {\n\toldValues: [],\n\n\tlistenerAttached: false,\n\n\tinitialize: function() {\n\t\tthis.lazySaveTextHistory = _.debounce( _.bind( this.saveTextHistory, this ), 800 );\n\t},\n\n\t// use beforeRender that runs after the settingsModel is exist\n\tonBeforeRender: function() {\n\t\tif ( ! this.listenerAttached ) {\n\t\t\tthis.listenTo( this.view.getEditModel().get( 'settings' ), 'change', this.saveHistory );\n\t\t\tthis.listenerAttached = true;\n\t\t}\n\t},\n\n\tsaveTextHistory: function( model, changed, control ) {\n\t\tvar changedAttributes = {},\n\t\t\tcurrentValue = model.get( control.name ),\n\t\t\tnewValue;\n\n\t\tif ( currentValue instanceof Backbone.Collection ) {\n\t\t\t// Deep clone.\n\t\t\tnewValue = currentValue.toJSON();\n\t\t} else {\n\t\t\tnewValue = currentValue;\n\t\t}\n\n\t\tchangedAttributes[ control.name ] = {\n\t\t\told: this.oldValues[ control.name ],\n\t\t\t'new': newValue\n\t\t};\n\n\t\tvar historyItem = {\n\t\t\ttype: 'change',\n\t\t\telementType: 'control',\n\t\t\ttitle: qazana.history.history.getModelLabel( model ),\n\t\t\tsubTitle: model.controls[ changed[0] ].label,\n\t\t\thistory: {\n\t\t\t\tbehavior: this,\n\t\t\t\tchanged: changedAttributes,\n\t\t\t\tmodel: this.view.getEditModel().toJSON()\n\t\t\t}\n\t\t};\n\n\t\tqazana.history.history.addItem( historyItem );\n\n\t\tdelete this.oldValues[ control.name ];\n\t},\n\n\tsaveHistory: function( model ) {\n\t\tif ( ! qazana.history.history.getActive() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar self = this,\n\t\t\tchanged = Object.keys( model.changed );\n\n\t\tif ( ! changed.length || ! model.controls[ changed[0] ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 1 === changed.length ) {\n\t\t\tvar control = model.controls[ changed[0] ];\n\n\t\t\tif ( _.isUndefined( self.oldValues[ control.name ] ) ) {\n\t\t\t\tself.oldValues[ control.name ] = model.previous( control.name );\n\t\t\t}\n\n\t\t\tif ( qazana.history.history.isItemStarted() ) {\n\t\t\t\t// Do not delay the execution\n\t\t\t\tself.saveTextHistory( model, changed, control );\n\t\t\t} else {\n\t\t\t\tself.lazySaveTextHistory( model, changed, control );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar changedAttributes = {};\n\n\t\t_.each( changed, function( controlName ) {\n\t\t\tchangedAttributes[ controlName ] = {\n\t\t\t\told: model.previous( controlName ),\n\t\t\t\t'new': model.get( controlName )\n\t\t\t};\n\t\t} );\n\n\t\tvar historyItem = {\n\t\t\ttype: 'change',\n\t\t\telementType: 'control',\n\t\t\ttitle: qazana.history.history.getModelLabel( model ),\n\t\t\thistory: {\n\t\t\t\tbehavior: this,\n\t\t\t\tchanged: changedAttributes,\n\t\t\t\tmodel: this.view.getEditModel().toJSON()\n\t\t\t}\n\t\t};\n\n\t\tif ( 1 === changed.length ) {\n\t\t\thistoryItem.subTitle = model.controls[ changed[0] ].label;\n\t\t}\n\n\t\tqazana.history.history.addItem( historyItem );\n\t},\n\n\trestore: function( historyItem, isRedo ) {\n\t\tvar\thistory = historyItem.get( 'history' ),\n\t\t\tmodelID = history.model.id,\n\t\t\tview = qazana.history.history.findView( modelID );\n\n\t\tif ( ! view ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar model = view.getEditModel ? view.getEditModel() : view.model,\n\t\t\tsettings = model.get( 'settings' ),\n\t\t\tbehavior = view.getBehavior( 'ElementHistory' );\n\n\t\t// Stop listen to restore actions\n\t\tbehavior.stopListening( settings, 'change', this.saveHistory );\n\n\t\t_.each( history.changed, function( values, key ) {\n\t\t\tif ( isRedo ) {\n\t\t\t\tsettings.setExternalChange( key, values['new'] );\n\t\t\t} else {\n\t\t\t\tsettings.setExternalChange( key, values.old );\n\t\t\t}\n\t\t} );\n\n\t\thistoryItem.set( 'status', isRedo ? 'not_applied' : 'applied' );\n\n\t\t// Listen again\n\t\tbehavior.listenTo( settings, 'change', this.saveHistory );\n\t}\n} );\n",
    "module.exports = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-panel-history-no-items',\n\tid: 'qazana-panel-history-no-items',\n\tclassName: 'qazana-panel-nerd-box'\n} );\n",
    "module.exports = Backbone.Model.extend( {\n\tdefaults: {\n\t\tid: 0,\n\t\ttype: '',\n\t\telementType: '',\n\t\tstatus: 'not_applied',\n\t\ttitle: '',\n\t\tsubTitle: '',\n\t\taction: '',\n\t\thistory: {}\n\t},\n\n\tinitialize: function() {\n\t\tthis.set( 'items', new Backbone.Collection() );\n\t}\n} );\n",
    "var HistoryCollection = require( './collection' ),\n\tHistoryItem = require( './item' ),\n\tElementHistoryBehavior = require( './element-behavior' ),\n\tCollectionHistoryBehavior = require( './collection-behavior' );\n\nvar\tManager = function() {\n\tvar self = this,\n\t\tcurrentItemID = null,\n\t\titems = new HistoryCollection(),\n\t\teditorSaved = false,\n\t\tactive = true;\n\n\tvar translations = {\n\t\tadd: qazana.translate( 'added' ),\n\t\tremove: qazana.translate( 'removed' ),\n\t\tchange: qazana.translate( 'edited' ),\n\t\tmove: qazana.translate( 'moved' ),\n\t\tduplicate: qazana.translate( 'duplicated' )\n\t};\n\n\tvar addBehaviors = function( behaviors ) {\n\t\tbehaviors.ElementHistory = {\n\t\t\tbehaviorClass: ElementHistoryBehavior\n\t\t};\n\n\t\tbehaviors.CollectionHistory = {\n\t\t\tbehaviorClass: CollectionHistoryBehavior\n\t\t};\n\n\t\treturn behaviors;\n\t};\n\n\tvar addCollectionBehavior = function( behaviors ) {\n\t\tbehaviors.CollectionHistory = {\n\t\t\tbehaviorClass: CollectionHistoryBehavior\n\t\t};\n\n\t\treturn behaviors;\n\t};\n\n\tvar getActionLabel = function( itemData ) {\n\t\tif ( translations[ itemData.type ] ) {\n\t\t\treturn translations[ itemData.type ];\n\t\t}\n\n\t\treturn itemData.type;\n\t};\n\n\tvar navigate = function( isRedo ) {\n\t\tvar currentItem = items.find( function( model ) {\n\t\t\t\treturn 'not_applied' ===  model.get( 'status' );\n\t\t\t} ),\n\t\t\tcurrentItemIndex = items.indexOf( currentItem ),\n\t\t\trequiredIndex = isRedo ? currentItemIndex - 1 : currentItemIndex + 1;\n\n\t\tif ( ( ! isRedo && ! currentItem ) || requiredIndex < 0  || requiredIndex >= items.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tself.doItem( requiredIndex );\n\t};\n\n\tvar addHotKeys = function() {\n\t\tvar H_KEY = 72,\n\t\t\tZ_KEY = 90;\n\n\t\tqazana.hotKeys.addHotKeyHandler( Z_KEY, 'historyNavigation', {\n\t\t\tisWorthHandling: function( event ) {\n\t\t\t\treturn items.length && ! jQuery( event.target ).is( 'input, textarea, [contenteditable=true]' );\n\t\t\t},\n\t\t\thandle: function( event ) {\n\t\t\t\tnavigate( Z_KEY === event.which && event.shiftKey );\n\t\t\t}\n\t\t} );\n\n\t\tqazana.hotKeys.addHotKeyHandler( H_KEY, 'showHistoryPage', {\n\t\t\tisWorthHandling: function( event ) {\n\t\t\t\treturn qazana.hotKeys.isControlEvent( event ) && event.shiftKey;\n\t\t\t},\n\t\t\thandle: function() {\n\t\t\t\tqazana.getPanelView().setPage( 'historyPage' );\n\t\t\t}\n\t\t} );\n\t};\n\n\tvar onPanelSave = function() {\n\t\tif ( items.length >= 2 ) {\n\t\t\t// Check if it's a save after made changes, `items.length - 1` is the `Editing Started Item\n\t\t\tvar firstEditItem = items.at( items.length - 2 );\n\t\t\teditorSaved = ( 'not_applied' === firstEditItem.get( 'status' ) );\n\t\t}\n\t};\n\n\tvar init = function() {\n\t\taddHotKeys();\n\n\t\tqazana.hooks.addFilter( 'elements/base/behaviors', addBehaviors );\n\t\tqazana.hooks.addFilter( 'elements/base-section-container/behaviors', addCollectionBehavior );\n\n\t\tqazana.channels.data\n\t\t\t.on( 'drag:before:update', self.startMovingItem )\n\t\t\t.on( 'drag:after:update', self.endItem )\n\n\t\t\t.on( 'element:before:add', self.startAddElement )\n\t\t\t.on( 'element:after:add', self.endItem )\n\n\t\t\t.on( 'element:before:remove', self.startRemoveElement )\n\t\t\t.on( 'element:after:remove', self.endItem )\n\n\t\t\t.on( 'element:before:duplicate', self.startDuplicateElement )\n\t\t\t.on( 'element:after:duplicate', self.endItem )\n\n\t\t\t.on( 'section:before:drop', self.startDropElement )\n\t\t\t.on( 'section:after:drop', self.endItem )\n\n\t\t\t.on( 'template:before:insert', self.startInsertTemplate )\n\t\t\t.on( 'template:after:insert', self.endItem );\n\n\t\tqazana.channels.editor.on( 'saved', onPanelSave );\n\t};\n\n\tthis.setActive = function( value ) {\n\t\tactive = value;\n\t};\n\n\tthis.getActive = function() {\n\t\treturn active;\n\t};\n\n\tthis.getItems = function() {\n\t\treturn items;\n\t};\n\n\tthis.startItem = function( itemData ) {\n\t\tcurrentItemID = this.addItem( itemData );\n\t};\n\n\tthis.endItem = function() {\n\t\tcurrentItemID = null;\n\t};\n\n\tthis.isItemStarted = function() {\n\t\treturn null !== currentItemID;\n\t};\n\n\tthis.addItem = function( itemData ) {\n\t\tif ( ! this.getActive() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! items.length ) {\n\t\t\titems.add( {\n\t\t\t\tstatus: 'not_applied',\n\t\t\t\ttitle: qazana.translate( 'editing_started' ),\n\t\t\t\tsubTitle: '',\n\t\t\t\taction: '',\n\t\t\t\tediting_started: true\n\t\t\t} );\n\t\t}\n\n\t\t// Remove old applied items from top of list\n\t\twhile ( items.length && 'applied' === items.first().get( 'status' ) ) {\n\t\t\titems.shift();\n\t\t}\n\n\t\tvar id = currentItemID ? currentItemID : new Date().getTime();\n\n\t\tvar\tcurrentItem = items.findWhere( {\n\t\t\tid: id\n\t\t} );\n\n\t\tif ( ! currentItem ) {\n\t\t\tcurrentItem = new HistoryItem( {\n\t\t\t\tid: id,\n\t\t\t\ttitle: itemData.title,\n\t\t\t\tsubTitle: itemData.subTitle,\n\t\t\t\taction: getActionLabel( itemData ),\n\t\t\t\ttype: itemData.type,\n\t\t\t\telementType: itemData.elementType\n\t\t\t} );\n\n\t\t\tself.startItemTitle = '';\n\t\t\tself.startItemAction = '';\n\t\t}\n\n\t\tvar position = 0;\n\n\t\t// Temp fix. On move a column - insert the `remove` subItem before the section changes subItem.\n\t\t// In a multi columns section - the structure has been changed,\n\t\t// In a one column section - it's filled with an empty column,\n\t\t// The order is important for the `redoItem`, that needed to change the section first\n\t\t// and only after that - to remove the column.\n\t\tif ( 'column' === itemData.elementType && 'remove' === itemData.type && 'column' === currentItem.get( 'elementType' ) ) {\n\t\t\tposition = 1;\n\t\t}\n\n\t\tcurrentItem.get( 'items' ).add( itemData, { at: position } );\n\n\t\titems.add( currentItem, { at: 0 } );\n\n\t\tvar panel = qazana.getPanelView();\n\n\t\tif ( 'historyPage' === panel.getCurrentPageName() ) {\n\t\t\tpanel.getCurrentPageView().render();\n\t\t}\n\n\t\treturn id;\n\t};\n\n\tthis.doItem = function( index ) {\n\t\t// Don't track while restore the item\n\t\tthis.setActive( false );\n\n\t\tvar item = items.at( index );\n\n\t\tif ( 'not_applied' === item.get( 'status' ) ) {\n\t\t\tthis.undoItem( index );\n\t\t} else {\n\t\t\tthis.redoItem( index );\n\t\t}\n\n\t\tthis.setActive( true );\n\n\t\tvar panel = qazana.getPanelView(),\n\t\t\tpanelPage = panel.getCurrentPageView(),\n\t\t\tviewToScroll;\n\n\t\tif ( 'editor' === panel.getCurrentPageName() ) {\n\t\t\tif ( panelPage.getOption( 'editedElementView' ).isDestroyed ) {\n\t\t\t\t// If the the element isn't exist - show the history panel\n\t\t\t\tpanel.setPage( 'historyPage' );\n\t\t\t} else {\n\t\t\t\t// If element exist - render again, maybe the settings has been changed\n\t\t\t\tviewToScroll = panelPage.getOption( 'editedElementView' );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( 'historyPage' === panel.getCurrentPageName() ) {\n\t\t\t\tpanelPage.render();\n\t\t\t}\n\n\t\t\t// Try scroll to affected element.\n\t\t\tif ( item instanceof Backbone.Model && item.get( 'items' ).length  ) {\n\t\t\t\tvar oldView = item.get( 'items' ).first().get( 'history' ).behavior.view;\n\t\t\t\tif ( oldView.model ) {\n\t\t\t\t\tviewToScroll = self.findView( oldView.model.get( 'id' ) ) ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( viewToScroll && ! qazana.helpers.isInViewport( viewToScroll.$el[0], qazana.$previewContents.find( 'html' )[0] ) ) {\n\t\t\tqazana.helpers.scrollToView( viewToScroll );\n\t\t}\n\n\t\tif ( item.get( 'editing_started' ) ) {\n\t\t\tif ( ! editorSaved ) {\n\t\t\t\tqazana.setFlagEditorChange( false );\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.undoItem = function( index ) {\n\t\tvar item;\n\n\t\tfor ( var stepNum = 0; stepNum < index; stepNum++ ) {\n\t\t\titem = items.at( stepNum );\n\n\t\t\tif ( 'not_applied' === item.get( 'status' ) ) {\n\t\t\t\titem.get( 'items' ).each( function( subItem ) {\n\t\t\t\t\tvar history = subItem.get( 'history' );\n\n\t\t\t\t\tif ( history ) { /* type duplicate first items hasn't history */\n\t\t\t\t\t\thistory.behavior.restore( subItem );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\titem.set( 'status', 'applied' );\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.redoItem = function( index ) {\n\t\tfor ( var stepNum = items.length - 1; stepNum >= index; stepNum-- ) {\n\t\t\tvar item = items.at( stepNum );\n\n\t\t\tif ( 'applied' === item.get( 'status' ) ) {\n\t\t\t\tvar reversedSubItems = _.toArray( item.get( 'items' ).models ).reverse();\n\n\t\t\t\t_( reversedSubItems ).each( function( subItem ) {\n\t\t\t\t\tvar history = subItem.get( 'history' );\n\n\t\t\t\t\tif ( history ) { /* type duplicate first items hasn't history */\n\t\t\t\t\t\thistory.behavior.restore( subItem, true );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\titem.set( 'status', 'not_applied' );\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.getModelLabel = function( model ) {\n\t\tif ( ! ( model instanceof Backbone.Model ) ) {\n\t\t\tmodel = new Backbone.Model( model );\n\t\t}\n\n\t\treturn qazana.getElementData( model ).title;\n\t};\n\n\tthis.findView = function( modelID, views ) {\n\t\tvar self = this,\n\t\t\tfounded = false;\n\n\t\tif ( ! views ) {\n\t\t\tviews = qazana.sections.currentView.children;\n\t\t}\n\n\t\t_.each( views._views, function( view ) {\n\t\t\tif ( founded ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Widget global used getEditModel\n\t\t\tvar model = view.getEditModel ? view.getEditModel() : view.model;\n\n\t\t\tif ( modelID === model.get( 'id' ) ) {\n\t\t\t\tfounded = view;\n\t\t\t} else if ( view.children && view.children.length ) {\n\t\t\t\tfounded = self.findView( modelID, view.children );\n\t\t\t}\n\t\t} );\n\n\t\treturn founded;\n\t};\n\n\tthis.startMovingItem = function( model ) {\n\t\tqazana.history.history.startItem( {\n\t\t\ttype: 'move',\n\t\t\ttitle: self.getModelLabel( model ),\n\t\t\telementType: model.get( 'elType' )\n\t\t} );\n\t};\n\n\tthis.startInsertTemplate = function( model ) {\n\t\tqazana.history.history.startItem( {\n\t\t\ttype: 'add',\n\t\t\ttitle: qazana.translate( 'template' ),\n\t\t\tsubTitle: model.get( 'title' ),\n\t\t\telementType: 'template'\n\t\t} );\n\t};\n\n\tthis.startDropElement = function() {\n\t\tvar elementView = qazana.channels.panelElements.request( 'element:selected' );\n\t\tqazana.history.history.startItem( {\n\t\t\ttype: 'add',\n\t\t\ttitle: self.getModelLabel( elementView.model ),\n\t\t\telementType: elementView.model.get( 'widgetType' ) || elementView.model.get( 'elType' )\n\t\t} );\n\t};\n\n\tthis.startAddElement = function( model ) {\n\t\tqazana.history.history.startItem( {\n\t\t\ttype: 'add',\n\t\t\ttitle: self.getModelLabel( model ),\n\t\t\telementType: model.elType\n\t\t} );\n\t};\n\n\tthis.startDuplicateElement = function( model ) {\n\t\tqazana.history.history.startItem( {\n\t\t\ttype: 'duplicate',\n\t\t\ttitle: self.getModelLabel( model ),\n\t\t\telementType: model.get( 'elType' )\n\t\t} );\n\t};\n\n\tthis.startRemoveElement = function( model ) {\n\t\tqazana.history.history.startItem( {\n\t\t\ttype: 'remove',\n\t\t\ttitle: self.getModelLabel( model ),\n\t\t\telementType: model.get( 'elType' )\n\t\t} );\n\t};\n\n\tinit();\n};\n\nmodule.exports = new Manager();\n",
    "module.exports = Marionette.CompositeView.extend( {\n\tid: 'qazana-panel-history',\n\n\ttemplate: '#tmpl-qazana-panel-history-tab',\n\n\tchildView: Marionette.ItemView.extend( {\n\t\ttemplate: '#tmpl-qazana-panel-history-item',\n\t\tui: {\n\t\t\titem: '.qazana-history-item'\n\t\t},\n\t\ttriggers: {\n\t\t\t'click @ui.item': 'item:click'\n\t\t}\n\t} ),\n\n\tchildViewContainer: '#qazana-history-list',\n\n\tcurrentItem: null,\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\t_.defer( function() {\n\t\t\t// Set current item - the first not applied item\n\t\t\tif ( self.children.length ) {\n\t\t\t\tvar currentItem = self.collection.find( function( model ) {\n\t\t\t\t\t\treturn 'not_applied' ===  model.get( 'status' );\n\t\t\t\t\t} ),\n\t\t\t\t\tcurrentView = self.children.findByModel( currentItem );\n\n\t\t\t\tself.updateCurrentItem( currentView.$el );\n\t\t\t}\n\t\t} );\n\t},\n\n\tupdateCurrentItem: function( element ) {\n\t\tvar currentItemClass = 'qazana-history-item-current';\n\n\t\tif ( this.currentItem ) {\n\t\t\tthis.currentItem.removeClass( currentItemClass );\n\t\t}\n\n\t\tthis.currentItem = element;\n\n\t\tthis.currentItem.addClass( currentItemClass );\n\t},\n\n\tonChildviewItemClick: function( childView, event ) {\n\t\tif ( childView.$el === this.currentItem ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar collection = event.model.collection,\n\t\t\titemIndex = collection.findIndex( event.model );\n\n\t\tqazana.history.history.doItem( itemIndex );\n\n\t\tthis.updateCurrentItem( childView.$el );\n\n\t\tif ( ! this.isDestroyed ) {\n\t\t\tthis.render();\n\t\t}\n\t}\n} );\n",
    "var HistoryPageView = require( './panel-page' ),\n\tManager;\n\nManager = function() {\n\tvar self = this;\n\n\tvar addPanelPage = function() {\n\t\tqazana.getPanelView().addPage( 'historyPage', {\n\t\t\tview: HistoryPageView,\n\t\t\ttitle: qazana.translate( 'history' )\n\t\t} );\n\t};\n\n\tvar init = function() {\n\t\tqazana.on( 'preview:loaded', addPanelPage );\n\n\t\tself.history = require( './history/manager' );\n\n\t\tself.revisions = require( './revisions/manager' );\n\n\t\tself.revisions.init();\n\t};\n\n\tjQuery( window ).on( 'qazana:init', init );\n};\n\nmodule.exports = new Manager();\n",
    "var TabHistoryView = require( './history/panel-tab' ),\n\tTabHistoryEmpty = require( './history/empty' ),\n\tTabRevisionsView = require( './revisions/panel-tab' ),\n\tTabRevisionsEmpty = require( './revisions/empty' );\n\nmodule.exports = Marionette.LayoutView.extend( {\n\ttemplate: '#tmpl-qazana-panel-history-page',\n\n\tregions: {\n\t\tcontent: '#qazana-panel-history-content'\n\t},\n\n\tui: {\n\t\ttabs: '.qazana-panel-navigation-tab'\n\t},\n\n\tevents: {\n\t\t'click @ui.tabs': 'onTabClick'\n\t},\n\n\tregionViews: {},\n\n\tcurrentTab: null,\n\n\tinitialize: function() {\n\t\tthis.initRegionViews();\n\t},\n\n\tinitRegionViews: function() {\n\t\tvar historyItems = qazana.history.history.getItems(),\n\t\t\trevisionsItems = qazana.history.revisions.getItems();\n\n\t\tthis.regionViews  = {\n\t\t\thistory: {\n\t\t\t\tregion: this.content,\n\t\t\t\tview: function() {\n\t\t\t\t\tif ( historyItems.length ) {\n\t\t\t\t\t\treturn TabHistoryView;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TabHistoryEmpty;\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\tcollection: historyItems\n\t\t\t\t}\n\t\t\t},\n\t\t\trevisions: {\n\t\t\t\tregion: this.content,\n\t\t\t\tview: function() {\n\t\t\t\t\tif ( revisionsItems.length ) {\n\t\t\t\t\t\treturn TabRevisionsView;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TabRevisionsEmpty;\n\t\t\t\t},\n\n\t\t\t\toptions: {\n\t\t\t\t\tcollection: revisionsItems\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t},\n\n\tactivateTab: function( tabName ) {\n\t\tthis.ui.tabs\n\t\t\t.removeClass( 'active' )\n\t\t\t.filter( '[data-view=\"' + tabName + '\"]' )\n\t\t\t.addClass( 'active' );\n\n\t\tthis.showView( tabName );\n\t},\n\n\tgetCurrentTab: function() {\n\t\treturn this.currentTab;\n\t},\n\n\tshowView: function( viewName ) {\n\t\tvar viewDetails = this.regionViews[ viewName ],\n\t\t\toptions = viewDetails.options || {},\n\t\t\tView = viewDetails.view;\n\n\t\tif ( 'function' === typeof View ) {\n\t\t\tView = viewDetails.view();\n\t\t}\n\n\t\toptions.viewName = viewName;\n\t\tthis.currentTab = new View( options );\n\n\t\tviewDetails.region.show( this.currentTab );\n\t},\n\n\tonRender: function() {\n\t\tthis.showView( 'history' );\n\t},\n\n\tonTabClick: function( event ) {\n\t\tthis.activateTab( event.currentTarget.dataset.view );\n\t},\n\n\tonDestroy: function() {\n\t\tqazana.getPanelView().getFooterView().ui.history.removeClass( 'qazana-open' );\n\t}\n} );\n",
    "var RevisionModel = require( './model' );\n\nmodule.exports = Backbone.Collection.extend( {\n\tmodel: RevisionModel\n} );\n",
    "module.exports = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-panel-revisions-no-revisions',\n\tid: 'qazana-panel-revisions-no-revisions',\n\tclassName: 'qazana-panel-nerd-box'\n} );\n",
    "var RevisionsCollection = require( './collection' ),\n\tRevisionsManager;\n\nRevisionsManager = function() {\n\tvar self = this,\n\t\trevisions;\n\n\tthis.getItems = function() {\n\t\treturn revisions;\n\t};\n\n\tvar onEditorSaved = function( data ) {\n\t\tif ( data.last_revision ) {\n\t\t\tself.addRevision( data.last_revision );\n\t\t}\n\n\t\tvar revisionsToKeep = revisions.filter( function( revision ) {\n\t\t\treturn -1 !== data.revisions_ids.indexOf( revision.get( 'id' ) );\n\t\t} );\n\n\t\trevisions.reset( revisionsToKeep );\n\t};\n\n\tvar attachEvents = function() {\n\t\tqazana.channels.editor.on( 'saved', onEditorSaved );\n\t};\n\n\tvar addHotKeys = function() {\n\t\tvar UP_ARROW_KEY = 38,\n\t\t\tDOWN_ARROW_KEY = 40;\n\n\t\tvar navigationHandler = {\n\t\t\tisWorthHandling: function() {\n\t\t\t\tvar panel = qazana.getPanelView();\n\n\t\t\t\tif ( 'historyPage' !== panel.getCurrentPageName() ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvar revisionsTab = panel.getCurrentPageView().getCurrentTab();\n\n\t\t\t\treturn revisionsTab.currentPreviewId && revisionsTab.currentPreviewItem && revisionsTab.children.length > 1;\n\t\t\t},\n\t\t\thandle: function( event ) {\n\t\t\t\tqazana.getPanelView().getCurrentPageView().getCurrentTab().navigate( UP_ARROW_KEY === event.which );\n\t\t\t}\n\t\t};\n\n\t\tqazana.hotKeys.addHotKeyHandler( UP_ARROW_KEY, 'revisionNavigation', navigationHandler );\n\n\t\tqazana.hotKeys.addHotKeyHandler( DOWN_ARROW_KEY, 'revisionNavigation', navigationHandler );\n\t};\n\n\tthis.addRevision = function( revisionData ) {\n\t\trevisions.add( revisionData, { at: 0 } );\n\t};\n\n\tthis.deleteRevision = function( revisionModel, options ) {\n\t\tvar params = {\n\t\t\tdata: {\n\t\t\t\tid: revisionModel.get( 'id' )\n\t\t\t},\n\t\t\tsuccess: function() {\n\t\t\t\tif ( options.success ) {\n\t\t\t\t\toptions.success();\n\t\t\t\t}\n\n\t\t\t\trevisionModel.destroy();\n\n\t\t\t\tif ( ! revisions.length ) {\n\t\t\t\t\tvar panel = qazana.getPanelView();\n\t\t\t\t\tif ( 'historyPage' === panel.getCurrentPageName() ) {\n\t\t\t\t\t\tpanel.getCurrentPageView().activateTab( 'revisions' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif ( options.error ) {\n\t\t\tparams.error = options.error;\n\t\t}\n\n\t\tqazana.ajax.send( 'delete_revision', params );\n\t};\n\n\tthis.init = function() {\n\t\trevisions = new RevisionsCollection( qazana.config.revisions );\n\n\t\tattachEvents();\n\n\t\taddHotKeys();\n\t};\n};\n\nmodule.exports = new RevisionsManager();\n",
    "var RevisionModel;\n\nRevisionModel = Backbone.Model.extend();\n\nRevisionModel.prototype.sync = function() {\n\treturn null;\n};\n\nmodule.exports = RevisionModel;\n",
    "module.exports = Marionette.CompositeView.extend( {\n\tid: 'qazana-panel-revisions',\n\n\ttemplate: '#tmpl-qazana-panel-revisions',\n\n\tchildView: require( './view' ),\n\n\tchildViewContainer: '#qazana-revisions-list',\n\n\tui: {\n\t\tdiscard: '.qazana-panel-scheme-discard .qazana-button',\n\t\tapply: '.qazana-panel-scheme-save .qazana-button'\n\t},\n\n\tevents: {\n\t\t'click @ui.discard': 'onDiscardClick',\n\t\t'click @ui.apply': 'onApplyClick'\n\t},\n\n\tisRevisionApplied: false,\n\n\tjqueryXhr: null,\n\n\tcurrentPreviewId: null,\n\n\tcurrentPreviewItem: null,\n\n\tinitialize: function() {\n\t\tthis.listenTo( qazana.channels.editor, 'saved', this.onEditorSaved );\n\t},\n\n\tgetRevisionViewData: function( revisionView ) {\n\t\tvar self = this,\n\t\t\trevisionID = revisionView.model.get( 'id' );\n\n\t\tself.jqueryXhr = qazana.ajax.send( 'get_revision_data', {\n\t\t\tdata: {\n\t\t\t\tid: revisionID\n\t\t\t},\n\t\t\tsuccess: function( data ) {\n\t\t\t\tself.setEditorData( data );\n\n\t\t\t\tself.setRevisionsButtonsActive( true );\n\n\t\t\t\tself.jqueryXhr = null;\n\n\t\t\t\trevisionView.$el.removeClass( 'qazana-revision-item-loading' );\n\n\t\t\t\tself.enterReviewMode();\n\t\t\t},\n\t\t\terror: function( data ) {\n\t\t\t\trevisionView.$el.removeClass( 'qazana-revision-item-loading' );\n\n\t\t\t\tif ( 'abort' === self.jqueryXhr.statusText ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tself.currentPreviewItem = null;\n\n\t\t\t\tself.currentPreviewId = null;\n\n\t\t\t\talert( 'An error occurred' );\n\t\t\t}\n\t\t} );\n\t},\n\n\tsetRevisionsButtonsActive: function( active ) {\n\t\tthis.ui.apply.add( this.ui.discard ).prop( 'disabled', ! active );\n\t},\n\n\tsetEditorData: function( data ) {\n\t\tvar collection = qazana.getRegion( 'sections' ).currentView.collection;\n\n\t\tcollection.reset( data );\n\t},\n\n\tdeleteRevision: function( revisionView ) {\n\t\tvar self = this;\n\n\t\trevisionView.$el.addClass( 'qazana-revision-item-loading' );\n\n\t\tqazana.history.revisions.deleteRevision( revisionView.model, {\n\t\t\tsuccess: function() {\n\t\t\t\tif ( revisionView.model.get( 'id' ) === self.currentPreviewId ) {\n\t\t\t\t\tself.onDiscardClick();\n\t\t\t\t}\n\n\t\t\t\tself.currentPreviewId = null;\n\t\t\t},\n\t\t\terror: function( data ) {\n\t\t\t\trevisionView.$el.removeClass( 'qazana-revision-item-loading' );\n\n\t\t\t\talert( 'An error occurred' );\n\t\t\t}\n\t\t} );\n\t},\n\n\tenterReviewMode: function() {\n\t\tqazana.changeEditMode( 'review' );\n\t},\n\n\texitReviewMode: function() {\n\t\tqazana.changeEditMode( 'edit' );\n\t},\n\n\tnavigate: function( reverse ) {\n\t\tvar currentPreviewItemIndex = this.collection.indexOf( this.currentPreviewItem.model ),\n\t\t\trequiredIndex = reverse ? currentPreviewItemIndex - 1 : currentPreviewItemIndex + 1;\n\n\t\tif ( requiredIndex < 0 ) {\n\t\t\trequiredIndex = this.collection.length - 1;\n\t\t}\n\n\t\tif ( requiredIndex >= this.collection.length ) {\n\t\t\trequiredIndex = 0;\n\t\t}\n\n\t\tthis.children.findByIndex( requiredIndex ).ui.detailsArea.trigger( 'click' );\n\t},\n\n\tonEditorSaved: function() {\n\t\tthis.exitReviewMode();\n\n\t\tthis.setRevisionsButtonsActive( false );\n\t},\n\n\tonApplyClick: function() {\n\t\tqazana.getPanelView().getChildView( 'footer' )._publishBuilder();\n\n\t\tthis.isRevisionApplied = true;\n\n\t\tthis.currentPreviewId = null;\n\t},\n\n\tonDiscardClick: function() {\n\t\tthis.setEditorData( qazana.config.data );\n\n\t\tqazana.setFlagEditorChange( this.isRevisionApplied );\n\n\t\tthis.isRevisionApplied = false;\n\n\t\tthis.setRevisionsButtonsActive( false );\n\n\t\tthis.currentPreviewId = null;\n\n\t\tthis.exitReviewMode();\n\n\t\tif ( this.currentPreviewItem ) {\n\t\t\tthis.currentPreviewItem.$el.removeClass( 'qazana-revision-current-preview' );\n\t\t}\n\t},\n\n\tonDestroy: function() {\n\t\tif ( this.currentPreviewId ) {\n\t\t\tthis.onDiscardClick();\n\t\t}\n\t},\n\n\tonRenderCollection: function() {\n\t\tif ( ! this.currentPreviewId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar currentPreviewModel = this.collection.findWhere({ id: this.currentPreviewId });\n\n\t\tthis.currentPreviewItem = this.children.findByModelCid( currentPreviewModel.cid );\n\n\t\tthis.currentPreviewItem.$el.addClass( 'qazana-revision-current-preview' );\n\t},\n\n\tonChildviewDetailsAreaClick: function( childView ) {\n\t\tvar self = this,\n\t\t\trevisionID = childView.model.get( 'id' );\n\n\t\tif ( revisionID === self.currentPreviewId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.jqueryXhr ) {\n\t\t\tthis.jqueryXhr.abort();\n\t\t}\n\n\t\tif ( self.currentPreviewItem ) {\n\t\t\tself.currentPreviewItem.$el.removeClass( 'qazana-revision-current-preview' );\n\t\t}\n\n\t\tchildView.$el.addClass( 'qazana-revision-current-preview qazana-revision-item-loading' );\n\n\t\tif ( qazana.isEditorChanged() && null === self.currentPreviewId ) {\n\t\t\tqazana.saveEditor( {\n\t\t\t\tstatus: 'autosave',\n\t\t\t\tonSuccess: function() {\n\t\t\t\t\tself.getRevisionViewData( childView );\n\t\t\t\t}\n\t\t\t} );\n\t\t} else {\n\t\t\tself.getRevisionViewData( childView );\n\t\t}\n\n\t\tself.currentPreviewItem = childView;\n\n\t\tself.currentPreviewId = revisionID;\n\t},\n\n\tonChildviewDeleteClick: function( childView ) {\n\t\tvar self = this,\n\t\t\ttype = childView.model.get( 'type' ),\n\t\t\tid = childView.model.get( 'id' );\n\n\t\tvar removeDialog = qazana.dialogsManager.createWidget( 'confirm', {\n\t\t\tmessage: qazana.translate( 'dialog_confirm_delete', [ type ] ),\n\t\t\theaderMessage: qazana.translate( 'delete_element', [ type ] ),\n\t\t\tstrings: {\n\t\t\t\tconfirm: qazana.translate( 'delete' ),\n\t\t\t\tcancel: qazana.translate( 'cancel' )\n\t\t\t},\n\t\t\tdefaultOption: 'confirm',\n\t\t\tonConfirm: function() {\n\t\t\t\tself.deleteRevision( childView );\n\t\t\t}\n\t\t} );\n\n\t\tremoveDialog.show();\n\t}\n} );\n",
    "module.exports =  Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-qazana-panel-revisions-revision-item',\n\n\tclassName: 'qazana-revision-item',\n\n\tui: {\n\t\tdetailsArea: '.qazana-revision-item__details',\n\t\tdeleteButton: '.qazana-revision-item__tools-delete'\n\t},\n\n\ttriggers: {\n\t\t'click @ui.detailsArea': 'detailsArea:click',\n\t\t'click @ui.deleteButton': 'delete:click'\n\t}\n} );\n"
  ]
}